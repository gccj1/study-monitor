2024-04-30 12:08:24.895  INFO 26312 --- [main] (system) c.example.MyProjectBackendApplication    : Starting MyProjectBackendApplication using Java 17.0.10 with PID 26312 (E:\k\study-monitor\study_monitor\my-project-backend\target\classes started by k in E:\k\study-monitor\study_monitor)
2024-04-30 12:08:24.897  INFO 26312 --- [main] (system) c.example.MyProjectBackendApplication    : The following 1 profile is active: "dev"
2024-04-30 12:08:25.648  INFO 26312 --- [main] (system) .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-30 12:08:25.651  INFO 26312 --- [main] (system) .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-30 12:08:25.681  INFO 26312 --- [main] (system) .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2024-04-30 12:08:26.437  INFO 26312 --- [main] (system) o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-04-30 12:08:26.446  INFO 26312 --- [main] (system) o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-04-30 12:08:26.446  INFO 26312 --- [main] (system) o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.11]
2024-04-30 12:08:26.547  INFO 26312 --- [main] (system) o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-04-30 12:08:26.548  INFO 26312 --- [main] (system) w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1618 ms
2024-04-30 12:08:26.973  WARN 26312 --- [main] (system) c.b.m.core.metadata.TableInfoHelper      : This primary key of "id" is primitive !不建议如此请使用包装类 in Class: "com.example.entity.dto.ClientDetail"
2024-04-30 12:08:27.264  WARN 26312 --- [main] (system) c.i.client.internal.InfluxDBClientImpl   : Cannot retrieve the Session token!

java.net.ConnectException: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:8086
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:297)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:207)
	at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:226)
	at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:106)
	at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:74)
	at okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:255)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:95)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.GzipInterceptor.intercept(GzipInterceptor.java:91)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:154)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:77)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at com.influxdb.client.internal.AuthenticateInterceptor.initToken(AuthenticateInterceptor.java:131)
	at com.influxdb.client.internal.AbstractInfluxDBClient.<init>(AbstractInfluxDBClient.java:112)
	at com.influxdb.client.internal.AbstractInfluxDBClient.<init>(AbstractInfluxDBClient.java:79)
	at com.influxdb.client.internal.InfluxDBClientImpl.<init>(InfluxDBClientImpl.java:99)
	at com.influxdb.client.InfluxDBClientFactory.create(InfluxDBClientFactory.java:261)
	at com.influxdb.client.InfluxDBClientFactory.create(InfluxDBClientFactory.java:108)
	at com.example.utils.InfluxUtils.init(InfluxUtils.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:401)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:419)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1762)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeanByName(AbstractAutowireCapableBeanFactory.java:457)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:537)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:508)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:270)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:320)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:531)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:508)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:270)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:320)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:235)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4886)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:846)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:241)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:428)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:918)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:485)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:183)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:161)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:602)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.MyProjectBackendApplication.main(MyProjectBackendApplication.java:10)
	Suppressed: java.net.ConnectException: Failed to connect to localhost/127.0.0.1:8086
		... 121 common frames omitted
	Caused by: java.net.ConnectException: Connection refused: no further information
		at java.base/sun.nio.ch.Net.pollConnect(Native Method)
		at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
		at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
		at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
		at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
		at java.base/java.net.Socket.connect(Socket.java:633)
		at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
		at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
		... 120 common frames omitted
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
	... 120 common frames omitted

2024-04-30 12:08:27.319  WARN 26312 --- [main] (system) c.b.m.core.metadata.TableInfoHelper      : This primary key of "id" is primitive !不建议如此请使用包装类 in Class: "com.example.entity.dto.Client"
2024-04-30 12:08:27.400  INFO 26312 --- [main] (system) com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-04-30 12:08:27.703  INFO 26312 --- [main] (system) com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@52b891de
2024-04-30 12:08:27.705  INFO 26312 --- [main] (system) com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-04-30 12:08:28.320  INFO 26312 --- [main] (system) o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1d4c6e32, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3a5ffea, org.springframework.security.web.context.SecurityContextHolderFilter@4fea23d6, org.springframework.security.web.header.HeaderWriterFilter@612531a3, org.springframework.security.web.authentication.logout.LogoutFilter@11ad327f, com.example.filter.JwtAuthenticationFilter@53b907d9, com.example.filter.RequestLogFilter@1842dc39, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@24bdd996, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7a689979, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1f6d3a81, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1d126f07, org.springframework.security.web.session.SessionManagementFilter@6b9fc5c7, org.springframework.security.web.access.ExceptionTranslationFilter@218e186b, org.springframework.security.web.access.intercept.AuthorizationFilter@6d94a966]
2024-04-30 12:08:28.660  WARN 26312 --- [main] (system) ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: org.springframework.amqp.rabbit.core.RabbitAdmin
2024-04-30 12:08:28.712  INFO 26312 --- [main] (system) o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-04-30 12:08:28.715  INFO 26312 --- [main] (system) o.s.a.r.c.CachingConnectionFactory       : Attempting to connect to: [localhost:5672]
2024-04-30 12:08:28.789  INFO 26312 --- [main] (system) o.s.a.r.c.CachingConnectionFactory       : Created new connection: rabbitConnectionFactory#b63365c:0/SimpleConnection@40f77135 [delegate=amqp://guest@127.0.0.1:5672/, localPort=4415]
2024-04-30 12:08:28.836  INFO 26312 --- [main] (system) c.example.MyProjectBackendApplication    : Started MyProjectBackendApplication in 4.418 seconds (process running for 5.208)
2024-04-30 12:08:43.395  INFO 26312 --- [http-nio-8080-exec-1] (system) o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-30 12:08:43.395  INFO 26312 --- [http-nio-8080-exec-1] (system) o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-04-30 12:08:43.397  INFO 26312 --- [http-nio-8080-exec-1] (system) o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-04-30 12:08:43.751  INFO 26312 --- [http-nio-8080-exec-1] (97988225724977152) com.example.filter.RequestLogFilter      : 请求URL: "/api/auth/login" (POST) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {"username":"admin","password":"123456"}
2024-04-30 12:08:44.043  INFO 26312 --- [http-nio-8080-exec-1] (97988225724977152) com.example.filter.RequestLogFilter      : 请求处理耗时: 295ms | 响应结果: {"code":200,"data":{"expire":"2024-05-03 12:08:44.024","role":"admin","token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYW1lIjoiYWRtaW4iLCJpZCI6MSwiZXhwIjoxNzE0NzA5MzI0LCJpYXQiOjE3MTQ0NTAxMjQsImp0aSI6IjlkNTFhNWNiLTQyZDctNDhhMC1iYmY0LTMxNjNiMTFjODA1MyIsImF1dGhvcml0aWVzIjpbIlJPTEVfYWRtaW4iXX0.-EiKuLWYlhjv1tY8ilLEyXulxkr6KVKqCA1dHYIHKLY","username":"admin"},"id":97988225724977152,"message":"请求成功"}
2024-04-30 12:57:24.587  WARN 26312 --- [HikariPool-1 housekeeper] (system) com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=11m27s553ms462µs500ns).
2024-04-30 14:19:44.379  WARN 26312 --- [HikariPool-1 housekeeper] (system) com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=23m20s450ms282µs100ns).
2024-04-30 14:20:09.448  INFO 26312 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] (system) o.s.a.r.l.SimpleMessageListenerContainer : Waiting for workers to finish.
2024-04-30 14:20:10.096  INFO 26312 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] (system) o.s.a.r.l.SimpleMessageListenerContainer : Successfully waited for workers to finish.
2024-04-30 14:20:10.179  INFO 26312 --- [SpringApplicationShutdownHook] (system) com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-04-30 14:20:10.183  INFO 26312 --- [SpringApplicationShutdownHook] (system) com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-04-30 18:29:09.913  INFO 48096 --- [main] (system) c.example.MyProjectBackendApplication    : Starting MyProjectBackendApplication using Java 17.0.10 with PID 48096 (E:\k\study-monitor\study_monitor\my-project-backend\target\classes started by k in E:\k\study-monitor\study_monitor)
2024-04-30 18:29:09.915  INFO 48096 --- [main] (system) c.example.MyProjectBackendApplication    : The following 1 profile is active: "dev"
2024-04-30 18:29:10.793  INFO 48096 --- [main] (system) .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-30 18:29:10.796  INFO 48096 --- [main] (system) .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-30 18:29:10.837  INFO 48096 --- [main] (system) .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2024-04-30 18:29:11.768  INFO 48096 --- [main] (system) o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-04-30 18:29:11.779  INFO 48096 --- [main] (system) o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-04-30 18:29:11.779  INFO 48096 --- [main] (system) o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.11]
2024-04-30 18:29:11.889  INFO 48096 --- [main] (system) o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-04-30 18:29:11.889  INFO 48096 --- [main] (system) w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1940 ms
2024-04-30 18:29:12.316  WARN 48096 --- [main] (system) c.b.m.core.metadata.TableInfoHelper      : This primary key of "id" is primitive !不建议如此请使用包装类 in Class: "com.example.entity.dto.ClientDetail"
2024-04-30 18:29:12.609  WARN 48096 --- [main] (system) c.i.client.internal.InfluxDBClientImpl   : Cannot retrieve the Session token!

java.net.ConnectException: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:8086
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:297)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:207)
	at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:226)
	at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:106)
	at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:74)
	at okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:255)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:95)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.GzipInterceptor.intercept(GzipInterceptor.java:91)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:154)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:77)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at com.influxdb.client.internal.AuthenticateInterceptor.initToken(AuthenticateInterceptor.java:131)
	at com.influxdb.client.internal.AbstractInfluxDBClient.<init>(AbstractInfluxDBClient.java:112)
	at com.influxdb.client.internal.AbstractInfluxDBClient.<init>(AbstractInfluxDBClient.java:79)
	at com.influxdb.client.internal.InfluxDBClientImpl.<init>(InfluxDBClientImpl.java:99)
	at com.influxdb.client.InfluxDBClientFactory.create(InfluxDBClientFactory.java:261)
	at com.influxdb.client.InfluxDBClientFactory.create(InfluxDBClientFactory.java:108)
	at com.example.utils.InfluxUtils.init(InfluxUtils.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:401)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:419)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1762)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeanByName(AbstractAutowireCapableBeanFactory.java:457)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:537)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:508)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:270)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:320)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:531)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:508)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:270)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:320)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:235)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4886)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:846)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:241)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:428)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:918)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:485)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:183)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:161)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:602)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.MyProjectBackendApplication.main(MyProjectBackendApplication.java:10)
	Suppressed: java.net.ConnectException: Failed to connect to localhost/127.0.0.1:8086
		... 121 common frames omitted
	Caused by: java.net.ConnectException: Connection refused: no further information
		at java.base/sun.nio.ch.Net.pollConnect(Native Method)
		at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
		at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
		at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
		at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
		at java.base/java.net.Socket.connect(Socket.java:633)
		at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
		at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
		... 120 common frames omitted
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
	... 120 common frames omitted

2024-04-30 18:29:12.655  WARN 48096 --- [main] (system) c.b.m.core.metadata.TableInfoHelper      : This primary key of "id" is primitive !不建议如此请使用包装类 in Class: "com.example.entity.dto.Client"
2024-04-30 18:29:12.727  INFO 48096 --- [main] (system) com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-04-30 18:29:12.980  INFO 48096 --- [main] (system) com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7dfec0bc
2024-04-30 18:29:12.983  INFO 48096 --- [main] (system) com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-04-30 18:29:13.587  INFO 48096 --- [main] (system) o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@52b6561b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7505dcab, org.springframework.security.web.context.SecurityContextHolderFilter@218e186b, org.springframework.security.web.header.HeaderWriterFilter@7010c9e4, org.springframework.security.web.authentication.logout.LogoutFilter@44d6f9cf, com.example.filter.JwtAuthenticationFilter@4a86be01, com.example.filter.RequestLogFilter@5c459194, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6771fc29, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@612531a3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6b30ff23, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6d94a966, org.springframework.security.web.session.SessionManagementFilter@10f60e36, org.springframework.security.web.access.ExceptionTranslationFilter@9863ed5, org.springframework.security.web.access.intercept.AuthorizationFilter@167f9043]
2024-04-30 18:29:13.903  WARN 48096 --- [main] (system) ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: org.springframework.amqp.rabbit.core.RabbitAdmin
2024-04-30 18:29:13.952  INFO 48096 --- [main] (system) o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-04-30 18:29:13.955  INFO 48096 --- [main] (system) o.s.a.r.c.CachingConnectionFactory       : Attempting to connect to: [localhost:5672]
2024-04-30 18:29:14.019  INFO 48096 --- [main] (system) o.s.a.r.c.CachingConnectionFactory       : Created new connection: rabbitConnectionFactory#42d7e8bc:0/SimpleConnection@5de6c7d7 [delegate=amqp://guest@127.0.0.1:5672/, localPort=1283]
2024-04-30 18:29:14.068  INFO 48096 --- [main] (system) c.example.MyProjectBackendApplication    : Started MyProjectBackendApplication in 4.606 seconds (process running for 5.2)
2024-04-30 18:29:16.817  INFO 48096 --- [http-nio-8080-exec-1] (system) o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-30 18:29:16.817  INFO 48096 --- [http-nio-8080-exec-1] (system) o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-04-30 18:29:16.818  INFO 48096 --- [http-nio-8080-exec-1] (system) o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-04-30 18:29:17.153  INFO 48096 --- [http-nio-8080-exec-1] (98083995958513664) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:29:17.358  WARN 48096 --- [http-nio-8080-exec-1] (98083995958513664) c.i.client.internal.InfluxDBClientImpl   : Cannot retrieve the Session token!

java.net.ConnectException: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:8086
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:297)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:207)
	at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:226)
	at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:106)
	at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:74)
	at okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:255)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:95)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.GzipInterceptor.intercept(GzipInterceptor.java:91)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:154)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:77)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at com.influxdb.client.internal.AuthenticateInterceptor.initToken(AuthenticateInterceptor.java:131)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:94)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at retrofit2.OkHttpCall.execute(OkHttpCall.java:204)
	at com.influxdb.internal.AbstractRestClient.execute(AbstractRestClient.java:79)
	at com.influxdb.client.internal.AbstractWriteBlockingClient.write(AbstractWriteBlockingClient.java:90)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurements(WriteApiBlockingImpl.java:253)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:220)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:207)
	at com.example.utils.InfluxUtils.writeData(InfluxUtils.java:38)
	at com.example.service.impl.ClientServiceImp.getRuntimeInfo(ClientServiceImp.java:44)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.service.impl.ClientServiceImp$$SpringCGLIB$$0.getRuntimeInfo(<generated>)
	at com.example.controller.ClientController.runtimeDetail(ClientController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.RequestLogFilter.doFilterInternal(RequestLogFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:51)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.net.ConnectException: Failed to connect to localhost/127.0.0.1:8086
		... 158 common frames omitted
	Caused by: java.net.ConnectException: Connection refused: no further information
		at java.base/sun.nio.ch.Net.pollConnect(Native Method)
		at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
		at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
		at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
		at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
		at java.base/java.net.Socket.connect(Socket.java:633)
		at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
		at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
		... 157 common frames omitted
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
	... 157 common frames omitted

2024-04-30 18:29:17.363 ERROR 48096 --- [http-nio-8080-exec-1] (98083995958513664) o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: com.influxdb.exceptions.InfluxException: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:8086] with root cause

java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:207)
	at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:226)
	at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:106)
	at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:74)
	at okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:255)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:95)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.GzipInterceptor.intercept(GzipInterceptor.java:91)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:154)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:103)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at retrofit2.OkHttpCall.execute(OkHttpCall.java:204)
	at com.influxdb.internal.AbstractRestClient.execute(AbstractRestClient.java:79)
	at com.influxdb.client.internal.AbstractWriteBlockingClient.write(AbstractWriteBlockingClient.java:90)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurements(WriteApiBlockingImpl.java:253)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:220)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:207)
	at com.example.utils.InfluxUtils.writeData(InfluxUtils.java:38)
	at com.example.service.impl.ClientServiceImp.getRuntimeInfo(ClientServiceImp.java:44)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.service.impl.ClientServiceImp$$SpringCGLIB$$0.getRuntimeInfo(<generated>)
	at com.example.controller.ClientController.runtimeDetail(ClientController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.RequestLogFilter.doFilterInternal(RequestLogFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:51)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)

2024-04-30 18:29:21.371  INFO 48096 --- [http-nio-8080-exec-2] (98084013658476544) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:29:21.385  WARN 48096 --- [http-nio-8080-exec-2] (98084013658476544) c.i.client.internal.InfluxDBClientImpl   : Cannot retrieve the Session token!

java.net.ConnectException: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:8086
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:297)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:207)
	at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:226)
	at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:106)
	at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:74)
	at okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:255)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:95)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.GzipInterceptor.intercept(GzipInterceptor.java:91)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:154)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:77)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at com.influxdb.client.internal.AuthenticateInterceptor.initToken(AuthenticateInterceptor.java:131)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:94)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at retrofit2.OkHttpCall.execute(OkHttpCall.java:204)
	at com.influxdb.internal.AbstractRestClient.execute(AbstractRestClient.java:79)
	at com.influxdb.client.internal.AbstractWriteBlockingClient.write(AbstractWriteBlockingClient.java:90)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurements(WriteApiBlockingImpl.java:253)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:220)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:207)
	at com.example.utils.InfluxUtils.writeData(InfluxUtils.java:38)
	at com.example.service.impl.ClientServiceImp.getRuntimeInfo(ClientServiceImp.java:44)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.service.impl.ClientServiceImp$$SpringCGLIB$$0.getRuntimeInfo(<generated>)
	at com.example.controller.ClientController.runtimeDetail(ClientController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.RequestLogFilter.doFilterInternal(RequestLogFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:51)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.net.ConnectException: Failed to connect to localhost/127.0.0.1:8086
		... 158 common frames omitted
	Caused by: java.net.ConnectException: Connection refused: no further information
		at java.base/sun.nio.ch.Net.pollConnect(Native Method)
		at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
		at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
		at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
		at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
		at java.base/java.net.Socket.connect(Socket.java:633)
		at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
		at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
		... 157 common frames omitted
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
	... 157 common frames omitted

2024-04-30 18:29:21.388 ERROR 48096 --- [http-nio-8080-exec-2] (98084013658476544) o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: com.influxdb.exceptions.InfluxException: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:8086] with root cause

java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:207)
	at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:226)
	at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:106)
	at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:74)
	at okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:255)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:95)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.GzipInterceptor.intercept(GzipInterceptor.java:91)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:154)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:103)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at retrofit2.OkHttpCall.execute(OkHttpCall.java:204)
	at com.influxdb.internal.AbstractRestClient.execute(AbstractRestClient.java:79)
	at com.influxdb.client.internal.AbstractWriteBlockingClient.write(AbstractWriteBlockingClient.java:90)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurements(WriteApiBlockingImpl.java:253)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:220)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:207)
	at com.example.utils.InfluxUtils.writeData(InfluxUtils.java:38)
	at com.example.service.impl.ClientServiceImp.getRuntimeInfo(ClientServiceImp.java:44)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.service.impl.ClientServiceImp$$SpringCGLIB$$0.getRuntimeInfo(<generated>)
	at com.example.controller.ClientController.runtimeDetail(ClientController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.RequestLogFilter.doFilterInternal(RequestLogFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:51)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)

2024-04-30 18:29:26.359  INFO 48096 --- [http-nio-8080-exec-3] (98084034579664896) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:29:26.363  WARN 48096 --- [http-nio-8080-exec-3] (98084034579664896) c.i.client.internal.InfluxDBClientImpl   : Cannot retrieve the Session token!

java.net.ConnectException: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:8086
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:297)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:207)
	at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:226)
	at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:106)
	at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:74)
	at okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:255)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:95)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.GzipInterceptor.intercept(GzipInterceptor.java:91)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:154)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:77)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at com.influxdb.client.internal.AuthenticateInterceptor.initToken(AuthenticateInterceptor.java:131)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:94)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at retrofit2.OkHttpCall.execute(OkHttpCall.java:204)
	at com.influxdb.internal.AbstractRestClient.execute(AbstractRestClient.java:79)
	at com.influxdb.client.internal.AbstractWriteBlockingClient.write(AbstractWriteBlockingClient.java:90)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurements(WriteApiBlockingImpl.java:253)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:220)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:207)
	at com.example.utils.InfluxUtils.writeData(InfluxUtils.java:38)
	at com.example.service.impl.ClientServiceImp.getRuntimeInfo(ClientServiceImp.java:44)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.service.impl.ClientServiceImp$$SpringCGLIB$$0.getRuntimeInfo(<generated>)
	at com.example.controller.ClientController.runtimeDetail(ClientController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.RequestLogFilter.doFilterInternal(RequestLogFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:51)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.net.ConnectException: Failed to connect to localhost/127.0.0.1:8086
		... 158 common frames omitted
	Caused by: java.net.ConnectException: Connection refused: no further information
		at java.base/sun.nio.ch.Net.pollConnect(Native Method)
		at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
		at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
		at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
		at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
		at java.base/java.net.Socket.connect(Socket.java:633)
		at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
		at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
		... 157 common frames omitted
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
	... 157 common frames omitted

2024-04-30 18:29:26.402 ERROR 48096 --- [http-nio-8080-exec-3] (98084034579664896) o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: com.influxdb.exceptions.InfluxException: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:8086] with root cause

java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:207)
	at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:226)
	at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:106)
	at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:74)
	at okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:255)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:95)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.GzipInterceptor.intercept(GzipInterceptor.java:91)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:154)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:103)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at retrofit2.OkHttpCall.execute(OkHttpCall.java:204)
	at com.influxdb.internal.AbstractRestClient.execute(AbstractRestClient.java:79)
	at com.influxdb.client.internal.AbstractWriteBlockingClient.write(AbstractWriteBlockingClient.java:90)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurements(WriteApiBlockingImpl.java:253)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:220)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:207)
	at com.example.utils.InfluxUtils.writeData(InfluxUtils.java:38)
	at com.example.service.impl.ClientServiceImp.getRuntimeInfo(ClientServiceImp.java:44)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.service.impl.ClientServiceImp$$SpringCGLIB$$0.getRuntimeInfo(<generated>)
	at com.example.controller.ClientController.runtimeDetail(ClientController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.RequestLogFilter.doFilterInternal(RequestLogFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:51)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)

2024-04-30 18:29:31.454  INFO 48096 --- [http-nio-8080-exec-4] (98084055949643776) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:29:31.480  WARN 48096 --- [http-nio-8080-exec-4] (98084055949643776) c.i.client.internal.InfluxDBClientImpl   : Cannot retrieve the Session token!

java.net.ConnectException: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:8086
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:297)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:207)
	at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:226)
	at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:106)
	at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:74)
	at okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:255)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:95)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.GzipInterceptor.intercept(GzipInterceptor.java:91)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:154)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:77)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at com.influxdb.client.internal.AuthenticateInterceptor.initToken(AuthenticateInterceptor.java:131)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:94)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at retrofit2.OkHttpCall.execute(OkHttpCall.java:204)
	at com.influxdb.internal.AbstractRestClient.execute(AbstractRestClient.java:79)
	at com.influxdb.client.internal.AbstractWriteBlockingClient.write(AbstractWriteBlockingClient.java:90)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurements(WriteApiBlockingImpl.java:253)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:220)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:207)
	at com.example.utils.InfluxUtils.writeData(InfluxUtils.java:38)
	at com.example.service.impl.ClientServiceImp.getRuntimeInfo(ClientServiceImp.java:44)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.service.impl.ClientServiceImp$$SpringCGLIB$$0.getRuntimeInfo(<generated>)
	at com.example.controller.ClientController.runtimeDetail(ClientController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.RequestLogFilter.doFilterInternal(RequestLogFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:51)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.net.ConnectException: Failed to connect to localhost/127.0.0.1:8086
		... 158 common frames omitted
	Caused by: java.net.ConnectException: Connection refused: no further information
		at java.base/sun.nio.ch.Net.pollConnect(Native Method)
		at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
		at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
		at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
		at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
		at java.base/java.net.Socket.connect(Socket.java:633)
		at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
		at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
		... 157 common frames omitted
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
	... 157 common frames omitted

2024-04-30 18:29:31.497 ERROR 48096 --- [http-nio-8080-exec-4] (98084055949643776) o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: com.influxdb.exceptions.InfluxException: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:8086] with root cause

java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:207)
	at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:226)
	at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:106)
	at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:74)
	at okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:255)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:95)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.GzipInterceptor.intercept(GzipInterceptor.java:91)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:154)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:103)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at retrofit2.OkHttpCall.execute(OkHttpCall.java:204)
	at com.influxdb.internal.AbstractRestClient.execute(AbstractRestClient.java:79)
	at com.influxdb.client.internal.AbstractWriteBlockingClient.write(AbstractWriteBlockingClient.java:90)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurements(WriteApiBlockingImpl.java:253)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:220)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:207)
	at com.example.utils.InfluxUtils.writeData(InfluxUtils.java:38)
	at com.example.service.impl.ClientServiceImp.getRuntimeInfo(ClientServiceImp.java:44)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.service.impl.ClientServiceImp$$SpringCGLIB$$0.getRuntimeInfo(<generated>)
	at com.example.controller.ClientController.runtimeDetail(ClientController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.RequestLogFilter.doFilterInternal(RequestLogFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:51)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)

2024-04-30 18:29:36.325  INFO 48096 --- [http-nio-8080-exec-5] (98084076380098560) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:29:36.340  WARN 48096 --- [http-nio-8080-exec-5] (98084076380098560) c.i.client.internal.InfluxDBClientImpl   : Cannot retrieve the Session token!

java.net.ConnectException: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:8086
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:297)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:207)
	at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:226)
	at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:106)
	at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:74)
	at okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:255)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:95)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.GzipInterceptor.intercept(GzipInterceptor.java:91)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:154)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:77)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at com.influxdb.client.internal.AuthenticateInterceptor.initToken(AuthenticateInterceptor.java:131)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:94)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at retrofit2.OkHttpCall.execute(OkHttpCall.java:204)
	at com.influxdb.internal.AbstractRestClient.execute(AbstractRestClient.java:79)
	at com.influxdb.client.internal.AbstractWriteBlockingClient.write(AbstractWriteBlockingClient.java:90)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurements(WriteApiBlockingImpl.java:253)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:220)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:207)
	at com.example.utils.InfluxUtils.writeData(InfluxUtils.java:38)
	at com.example.service.impl.ClientServiceImp.getRuntimeInfo(ClientServiceImp.java:44)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.service.impl.ClientServiceImp$$SpringCGLIB$$0.getRuntimeInfo(<generated>)
	at com.example.controller.ClientController.runtimeDetail(ClientController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.RequestLogFilter.doFilterInternal(RequestLogFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:51)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.net.ConnectException: Failed to connect to localhost/127.0.0.1:8086
		... 158 common frames omitted
	Caused by: java.net.ConnectException: Connection refused: no further information
		at java.base/sun.nio.ch.Net.pollConnect(Native Method)
		at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
		at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
		at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
		at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
		at java.base/java.net.Socket.connect(Socket.java:633)
		at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
		at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
		... 157 common frames omitted
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
	... 157 common frames omitted

2024-04-30 18:29:36.343 ERROR 48096 --- [http-nio-8080-exec-5] (98084076380098560) o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: com.influxdb.exceptions.InfluxException: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:8086] with root cause

java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:207)
	at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:226)
	at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:106)
	at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:74)
	at okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:255)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:95)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.GzipInterceptor.intercept(GzipInterceptor.java:91)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:154)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:103)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at retrofit2.OkHttpCall.execute(OkHttpCall.java:204)
	at com.influxdb.internal.AbstractRestClient.execute(AbstractRestClient.java:79)
	at com.influxdb.client.internal.AbstractWriteBlockingClient.write(AbstractWriteBlockingClient.java:90)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurements(WriteApiBlockingImpl.java:253)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:220)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:207)
	at com.example.utils.InfluxUtils.writeData(InfluxUtils.java:38)
	at com.example.service.impl.ClientServiceImp.getRuntimeInfo(ClientServiceImp.java:44)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.service.impl.ClientServiceImp$$SpringCGLIB$$0.getRuntimeInfo(<generated>)
	at com.example.controller.ClientController.runtimeDetail(ClientController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.RequestLogFilter.doFilterInternal(RequestLogFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:51)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)

2024-04-30 18:29:41.369  INFO 48096 --- [http-nio-8080-exec-6] (98084097536167936) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:29:41.373  WARN 48096 --- [http-nio-8080-exec-6] (98084097536167936) c.i.client.internal.InfluxDBClientImpl   : Cannot retrieve the Session token!

java.net.ConnectException: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:8086
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:297)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:207)
	at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:226)
	at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:106)
	at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:74)
	at okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:255)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:95)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.GzipInterceptor.intercept(GzipInterceptor.java:91)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:154)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:77)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at com.influxdb.client.internal.AuthenticateInterceptor.initToken(AuthenticateInterceptor.java:131)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:94)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at retrofit2.OkHttpCall.execute(OkHttpCall.java:204)
	at com.influxdb.internal.AbstractRestClient.execute(AbstractRestClient.java:79)
	at com.influxdb.client.internal.AbstractWriteBlockingClient.write(AbstractWriteBlockingClient.java:90)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurements(WriteApiBlockingImpl.java:253)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:220)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:207)
	at com.example.utils.InfluxUtils.writeData(InfluxUtils.java:38)
	at com.example.service.impl.ClientServiceImp.getRuntimeInfo(ClientServiceImp.java:44)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.service.impl.ClientServiceImp$$SpringCGLIB$$0.getRuntimeInfo(<generated>)
	at com.example.controller.ClientController.runtimeDetail(ClientController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.RequestLogFilter.doFilterInternal(RequestLogFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:51)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.net.ConnectException: Failed to connect to localhost/127.0.0.1:8086
		... 158 common frames omitted
	Caused by: java.net.ConnectException: Connection refused: no further information
		at java.base/sun.nio.ch.Net.pollConnect(Native Method)
		at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
		at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
		at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
		at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
		at java.base/java.net.Socket.connect(Socket.java:633)
		at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
		at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
		... 157 common frames omitted
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
	... 157 common frames omitted

2024-04-30 18:29:41.376 ERROR 48096 --- [http-nio-8080-exec-6] (98084097536167936) o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: com.influxdb.exceptions.InfluxException: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:8086] with root cause

java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:207)
	at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:226)
	at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:106)
	at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:74)
	at okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:255)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:95)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.GzipInterceptor.intercept(GzipInterceptor.java:91)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:154)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:103)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at retrofit2.OkHttpCall.execute(OkHttpCall.java:204)
	at com.influxdb.internal.AbstractRestClient.execute(AbstractRestClient.java:79)
	at com.influxdb.client.internal.AbstractWriteBlockingClient.write(AbstractWriteBlockingClient.java:90)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurements(WriteApiBlockingImpl.java:253)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:220)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:207)
	at com.example.utils.InfluxUtils.writeData(InfluxUtils.java:38)
	at com.example.service.impl.ClientServiceImp.getRuntimeInfo(ClientServiceImp.java:44)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.service.impl.ClientServiceImp$$SpringCGLIB$$0.getRuntimeInfo(<generated>)
	at com.example.controller.ClientController.runtimeDetail(ClientController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.RequestLogFilter.doFilterInternal(RequestLogFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:51)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)

2024-04-30 18:29:46.312  INFO 48096 --- [http-nio-8080-exec-7] (98084118268612608) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:29:46.315  WARN 48096 --- [http-nio-8080-exec-7] (98084118268612608) c.i.client.internal.InfluxDBClientImpl   : Cannot retrieve the Session token!

java.net.ConnectException: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:8086
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:297)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:207)
	at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:226)
	at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:106)
	at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:74)
	at okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:255)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:95)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.GzipInterceptor.intercept(GzipInterceptor.java:91)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:154)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:77)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at com.influxdb.client.internal.AuthenticateInterceptor.initToken(AuthenticateInterceptor.java:131)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:94)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at retrofit2.OkHttpCall.execute(OkHttpCall.java:204)
	at com.influxdb.internal.AbstractRestClient.execute(AbstractRestClient.java:79)
	at com.influxdb.client.internal.AbstractWriteBlockingClient.write(AbstractWriteBlockingClient.java:90)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurements(WriteApiBlockingImpl.java:253)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:220)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:207)
	at com.example.utils.InfluxUtils.writeData(InfluxUtils.java:38)
	at com.example.service.impl.ClientServiceImp.getRuntimeInfo(ClientServiceImp.java:44)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.service.impl.ClientServiceImp$$SpringCGLIB$$0.getRuntimeInfo(<generated>)
	at com.example.controller.ClientController.runtimeDetail(ClientController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.RequestLogFilter.doFilterInternal(RequestLogFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:51)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.net.ConnectException: Failed to connect to localhost/127.0.0.1:8086
		... 158 common frames omitted
	Caused by: java.net.ConnectException: Connection refused: no further information
		at java.base/sun.nio.ch.Net.pollConnect(Native Method)
		at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
		at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
		at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
		at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
		at java.base/java.net.Socket.connect(Socket.java:633)
		at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
		at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
		... 157 common frames omitted
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
	... 157 common frames omitted

2024-04-30 18:29:46.317 ERROR 48096 --- [http-nio-8080-exec-7] (98084118268612608) o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: com.influxdb.exceptions.InfluxException: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:8086] with root cause

java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:207)
	at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:226)
	at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:106)
	at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:74)
	at okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:255)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:95)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.GzipInterceptor.intercept(GzipInterceptor.java:91)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:154)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:103)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at retrofit2.OkHttpCall.execute(OkHttpCall.java:204)
	at com.influxdb.internal.AbstractRestClient.execute(AbstractRestClient.java:79)
	at com.influxdb.client.internal.AbstractWriteBlockingClient.write(AbstractWriteBlockingClient.java:90)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurements(WriteApiBlockingImpl.java:253)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:220)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:207)
	at com.example.utils.InfluxUtils.writeData(InfluxUtils.java:38)
	at com.example.service.impl.ClientServiceImp.getRuntimeInfo(ClientServiceImp.java:44)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.service.impl.ClientServiceImp$$SpringCGLIB$$0.getRuntimeInfo(<generated>)
	at com.example.controller.ClientController.runtimeDetail(ClientController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.RequestLogFilter.doFilterInternal(RequestLogFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:51)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)

2024-04-30 18:29:51.339  INFO 48096 --- [http-nio-8080-exec-8] (98084139353378816) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:29:51.343  WARN 48096 --- [http-nio-8080-exec-8] (98084139353378816) c.i.client.internal.InfluxDBClientImpl   : Cannot retrieve the Session token!

java.net.ConnectException: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:8086
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:297)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:207)
	at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:226)
	at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:106)
	at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:74)
	at okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:255)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:95)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.GzipInterceptor.intercept(GzipInterceptor.java:91)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:154)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:77)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at com.influxdb.client.internal.AuthenticateInterceptor.initToken(AuthenticateInterceptor.java:131)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:94)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at retrofit2.OkHttpCall.execute(OkHttpCall.java:204)
	at com.influxdb.internal.AbstractRestClient.execute(AbstractRestClient.java:79)
	at com.influxdb.client.internal.AbstractWriteBlockingClient.write(AbstractWriteBlockingClient.java:90)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurements(WriteApiBlockingImpl.java:253)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:220)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:207)
	at com.example.utils.InfluxUtils.writeData(InfluxUtils.java:38)
	at com.example.service.impl.ClientServiceImp.getRuntimeInfo(ClientServiceImp.java:44)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.service.impl.ClientServiceImp$$SpringCGLIB$$0.getRuntimeInfo(<generated>)
	at com.example.controller.ClientController.runtimeDetail(ClientController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.RequestLogFilter.doFilterInternal(RequestLogFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:51)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.net.ConnectException: Failed to connect to localhost/127.0.0.1:8086
		... 158 common frames omitted
	Caused by: java.net.ConnectException: Connection refused: no further information
		at java.base/sun.nio.ch.Net.pollConnect(Native Method)
		at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
		at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
		at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
		at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
		at java.base/java.net.Socket.connect(Socket.java:633)
		at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
		at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
		... 157 common frames omitted
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
	... 157 common frames omitted

2024-04-30 18:29:51.345 ERROR 48096 --- [http-nio-8080-exec-8] (98084139353378816) o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: com.influxdb.exceptions.InfluxException: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:8086] with root cause

java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:207)
	at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:226)
	at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:106)
	at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:74)
	at okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:255)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:95)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.GzipInterceptor.intercept(GzipInterceptor.java:91)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:154)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:103)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at retrofit2.OkHttpCall.execute(OkHttpCall.java:204)
	at com.influxdb.internal.AbstractRestClient.execute(AbstractRestClient.java:79)
	at com.influxdb.client.internal.AbstractWriteBlockingClient.write(AbstractWriteBlockingClient.java:90)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurements(WriteApiBlockingImpl.java:253)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:220)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:207)
	at com.example.utils.InfluxUtils.writeData(InfluxUtils.java:38)
	at com.example.service.impl.ClientServiceImp.getRuntimeInfo(ClientServiceImp.java:44)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.service.impl.ClientServiceImp$$SpringCGLIB$$0.getRuntimeInfo(<generated>)
	at com.example.controller.ClientController.runtimeDetail(ClientController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.RequestLogFilter.doFilterInternal(RequestLogFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:51)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)

2024-04-30 18:29:56.322  INFO 48096 --- [http-nio-8080-exec-9] (98084160253595648) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:29:56.325  WARN 48096 --- [http-nio-8080-exec-9] (98084160253595648) c.i.client.internal.InfluxDBClientImpl   : Cannot retrieve the Session token!

java.net.ConnectException: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:8086
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:297)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:207)
	at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:226)
	at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:106)
	at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:74)
	at okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:255)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:95)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.GzipInterceptor.intercept(GzipInterceptor.java:91)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:154)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:77)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at com.influxdb.client.internal.AuthenticateInterceptor.initToken(AuthenticateInterceptor.java:131)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:94)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at retrofit2.OkHttpCall.execute(OkHttpCall.java:204)
	at com.influxdb.internal.AbstractRestClient.execute(AbstractRestClient.java:79)
	at com.influxdb.client.internal.AbstractWriteBlockingClient.write(AbstractWriteBlockingClient.java:90)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurements(WriteApiBlockingImpl.java:253)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:220)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:207)
	at com.example.utils.InfluxUtils.writeData(InfluxUtils.java:38)
	at com.example.service.impl.ClientServiceImp.getRuntimeInfo(ClientServiceImp.java:44)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.service.impl.ClientServiceImp$$SpringCGLIB$$0.getRuntimeInfo(<generated>)
	at com.example.controller.ClientController.runtimeDetail(ClientController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.RequestLogFilter.doFilterInternal(RequestLogFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:51)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.net.ConnectException: Failed to connect to localhost/127.0.0.1:8086
		... 158 common frames omitted
	Caused by: java.net.ConnectException: Connection refused: no further information
		at java.base/sun.nio.ch.Net.pollConnect(Native Method)
		at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
		at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
		at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
		at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
		at java.base/java.net.Socket.connect(Socket.java:633)
		at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
		at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
		... 157 common frames omitted
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
	... 157 common frames omitted

2024-04-30 18:29:56.328 ERROR 48096 --- [http-nio-8080-exec-9] (98084160253595648) o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: com.influxdb.exceptions.InfluxException: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:8086] with root cause

java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:207)
	at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:226)
	at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:106)
	at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:74)
	at okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:255)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:95)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.GzipInterceptor.intercept(GzipInterceptor.java:91)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:154)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:103)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at retrofit2.OkHttpCall.execute(OkHttpCall.java:204)
	at com.influxdb.internal.AbstractRestClient.execute(AbstractRestClient.java:79)
	at com.influxdb.client.internal.AbstractWriteBlockingClient.write(AbstractWriteBlockingClient.java:90)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurements(WriteApiBlockingImpl.java:253)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:220)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:207)
	at com.example.utils.InfluxUtils.writeData(InfluxUtils.java:38)
	at com.example.service.impl.ClientServiceImp.getRuntimeInfo(ClientServiceImp.java:44)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.service.impl.ClientServiceImp$$SpringCGLIB$$0.getRuntimeInfo(<generated>)
	at com.example.controller.ClientController.runtimeDetail(ClientController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.RequestLogFilter.doFilterInternal(RequestLogFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:51)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)

2024-04-30 18:30:01.327  INFO 48096 --- [http-nio-8080-exec-10] (98084181246087168) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:30:01.330  WARN 48096 --- [http-nio-8080-exec-10] (98084181246087168) c.i.client.internal.InfluxDBClientImpl   : Cannot retrieve the Session token!

java.net.ConnectException: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:8086
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:297)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:207)
	at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:226)
	at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:106)
	at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:74)
	at okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:255)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:95)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.GzipInterceptor.intercept(GzipInterceptor.java:91)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:154)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:77)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at com.influxdb.client.internal.AuthenticateInterceptor.initToken(AuthenticateInterceptor.java:131)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:94)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at retrofit2.OkHttpCall.execute(OkHttpCall.java:204)
	at com.influxdb.internal.AbstractRestClient.execute(AbstractRestClient.java:79)
	at com.influxdb.client.internal.AbstractWriteBlockingClient.write(AbstractWriteBlockingClient.java:90)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurements(WriteApiBlockingImpl.java:253)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:220)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:207)
	at com.example.utils.InfluxUtils.writeData(InfluxUtils.java:38)
	at com.example.service.impl.ClientServiceImp.getRuntimeInfo(ClientServiceImp.java:44)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.service.impl.ClientServiceImp$$SpringCGLIB$$0.getRuntimeInfo(<generated>)
	at com.example.controller.ClientController.runtimeDetail(ClientController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.RequestLogFilter.doFilterInternal(RequestLogFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:51)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.net.ConnectException: Failed to connect to localhost/127.0.0.1:8086
		... 158 common frames omitted
	Caused by: java.net.ConnectException: Connection refused: no further information
		at java.base/sun.nio.ch.Net.pollConnect(Native Method)
		at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
		at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
		at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
		at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
		at java.base/java.net.Socket.connect(Socket.java:633)
		at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
		at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
		... 157 common frames omitted
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
	... 157 common frames omitted

2024-04-30 18:30:01.332 ERROR 48096 --- [http-nio-8080-exec-10] (98084181246087168) o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: com.influxdb.exceptions.InfluxException: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:8086] with root cause

java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:207)
	at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:226)
	at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:106)
	at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:74)
	at okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:255)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:95)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.GzipInterceptor.intercept(GzipInterceptor.java:91)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:154)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:103)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at retrofit2.OkHttpCall.execute(OkHttpCall.java:204)
	at com.influxdb.internal.AbstractRestClient.execute(AbstractRestClient.java:79)
	at com.influxdb.client.internal.AbstractWriteBlockingClient.write(AbstractWriteBlockingClient.java:90)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurements(WriteApiBlockingImpl.java:253)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:220)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:207)
	at com.example.utils.InfluxUtils.writeData(InfluxUtils.java:38)
	at com.example.service.impl.ClientServiceImp.getRuntimeInfo(ClientServiceImp.java:44)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.service.impl.ClientServiceImp$$SpringCGLIB$$0.getRuntimeInfo(<generated>)
	at com.example.controller.ClientController.runtimeDetail(ClientController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.RequestLogFilter.doFilterInternal(RequestLogFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:51)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)

2024-04-30 18:30:06.409  INFO 48096 --- [http-nio-8080-exec-1] (98084202561540096) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:30:06.413  WARN 48096 --- [http-nio-8080-exec-1] (98084202561540096) c.i.client.internal.InfluxDBClientImpl   : Cannot retrieve the Session token!

java.net.ConnectException: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:8086
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:297)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:207)
	at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:226)
	at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:106)
	at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:74)
	at okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:255)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:95)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.GzipInterceptor.intercept(GzipInterceptor.java:91)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:154)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:77)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at com.influxdb.client.internal.AuthenticateInterceptor.initToken(AuthenticateInterceptor.java:131)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:94)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at retrofit2.OkHttpCall.execute(OkHttpCall.java:204)
	at com.influxdb.internal.AbstractRestClient.execute(AbstractRestClient.java:79)
	at com.influxdb.client.internal.AbstractWriteBlockingClient.write(AbstractWriteBlockingClient.java:90)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurements(WriteApiBlockingImpl.java:253)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:220)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:207)
	at com.example.utils.InfluxUtils.writeData(InfluxUtils.java:38)
	at com.example.service.impl.ClientServiceImp.getRuntimeInfo(ClientServiceImp.java:44)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.service.impl.ClientServiceImp$$SpringCGLIB$$0.getRuntimeInfo(<generated>)
	at com.example.controller.ClientController.runtimeDetail(ClientController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.RequestLogFilter.doFilterInternal(RequestLogFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:51)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.net.ConnectException: Failed to connect to localhost/127.0.0.1:8086
		... 158 common frames omitted
	Caused by: java.net.ConnectException: Connection refused: no further information
		at java.base/sun.nio.ch.Net.pollConnect(Native Method)
		at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
		at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
		at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
		at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
		at java.base/java.net.Socket.connect(Socket.java:633)
		at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
		at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
		... 157 common frames omitted
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
	... 157 common frames omitted

2024-04-30 18:30:06.415 ERROR 48096 --- [http-nio-8080-exec-1] (98084202561540096) o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: com.influxdb.exceptions.InfluxException: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:8086] with root cause

java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:207)
	at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:226)
	at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:106)
	at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:74)
	at okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:255)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:95)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.GzipInterceptor.intercept(GzipInterceptor.java:91)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:154)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:103)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at retrofit2.OkHttpCall.execute(OkHttpCall.java:204)
	at com.influxdb.internal.AbstractRestClient.execute(AbstractRestClient.java:79)
	at com.influxdb.client.internal.AbstractWriteBlockingClient.write(AbstractWriteBlockingClient.java:90)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurements(WriteApiBlockingImpl.java:253)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:220)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:207)
	at com.example.utils.InfluxUtils.writeData(InfluxUtils.java:38)
	at com.example.service.impl.ClientServiceImp.getRuntimeInfo(ClientServiceImp.java:44)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.service.impl.ClientServiceImp$$SpringCGLIB$$0.getRuntimeInfo(<generated>)
	at com.example.controller.ClientController.runtimeDetail(ClientController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.RequestLogFilter.doFilterInternal(RequestLogFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:51)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)

2024-04-30 18:30:11.358  INFO 48096 --- [http-nio-8080-exec-2] (98084223319150592) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:30:11.361  WARN 48096 --- [http-nio-8080-exec-2] (98084223319150592) c.i.client.internal.InfluxDBClientImpl   : Cannot retrieve the Session token!

java.net.ConnectException: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:8086
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:297)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:207)
	at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:226)
	at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:106)
	at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:74)
	at okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:255)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:95)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.GzipInterceptor.intercept(GzipInterceptor.java:91)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:154)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:77)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at com.influxdb.client.internal.AuthenticateInterceptor.initToken(AuthenticateInterceptor.java:131)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:94)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at retrofit2.OkHttpCall.execute(OkHttpCall.java:204)
	at com.influxdb.internal.AbstractRestClient.execute(AbstractRestClient.java:79)
	at com.influxdb.client.internal.AbstractWriteBlockingClient.write(AbstractWriteBlockingClient.java:90)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurements(WriteApiBlockingImpl.java:253)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:220)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:207)
	at com.example.utils.InfluxUtils.writeData(InfluxUtils.java:38)
	at com.example.service.impl.ClientServiceImp.getRuntimeInfo(ClientServiceImp.java:44)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.service.impl.ClientServiceImp$$SpringCGLIB$$0.getRuntimeInfo(<generated>)
	at com.example.controller.ClientController.runtimeDetail(ClientController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.RequestLogFilter.doFilterInternal(RequestLogFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:51)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.net.ConnectException: Failed to connect to localhost/127.0.0.1:8086
		... 158 common frames omitted
	Caused by: java.net.ConnectException: Connection refused: no further information
		at java.base/sun.nio.ch.Net.pollConnect(Native Method)
		at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
		at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
		at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
		at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
		at java.base/java.net.Socket.connect(Socket.java:633)
		at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
		at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
		... 157 common frames omitted
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
	... 157 common frames omitted

2024-04-30 18:30:11.363 ERROR 48096 --- [http-nio-8080-exec-2] (98084223319150592) o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: com.influxdb.exceptions.InfluxException: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:8086] with root cause

java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:207)
	at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:226)
	at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:106)
	at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:74)
	at okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:255)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:95)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.GzipInterceptor.intercept(GzipInterceptor.java:91)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:154)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:103)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at retrofit2.OkHttpCall.execute(OkHttpCall.java:204)
	at com.influxdb.internal.AbstractRestClient.execute(AbstractRestClient.java:79)
	at com.influxdb.client.internal.AbstractWriteBlockingClient.write(AbstractWriteBlockingClient.java:90)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurements(WriteApiBlockingImpl.java:253)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:220)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:207)
	at com.example.utils.InfluxUtils.writeData(InfluxUtils.java:38)
	at com.example.service.impl.ClientServiceImp.getRuntimeInfo(ClientServiceImp.java:44)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.service.impl.ClientServiceImp$$SpringCGLIB$$0.getRuntimeInfo(<generated>)
	at com.example.controller.ClientController.runtimeDetail(ClientController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.RequestLogFilter.doFilterInternal(RequestLogFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:51)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)

2024-04-30 18:30:16.370  INFO 48096 --- [http-nio-8080-exec-3] (98084244341002240) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:30:16.374  WARN 48096 --- [http-nio-8080-exec-3] (98084244341002240) c.i.client.internal.InfluxDBClientImpl   : Cannot retrieve the Session token!

java.net.ConnectException: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:8086
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:297)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:207)
	at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:226)
	at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:106)
	at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:74)
	at okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:255)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:95)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.GzipInterceptor.intercept(GzipInterceptor.java:91)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:154)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:77)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at com.influxdb.client.internal.AuthenticateInterceptor.initToken(AuthenticateInterceptor.java:131)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:94)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at retrofit2.OkHttpCall.execute(OkHttpCall.java:204)
	at com.influxdb.internal.AbstractRestClient.execute(AbstractRestClient.java:79)
	at com.influxdb.client.internal.AbstractWriteBlockingClient.write(AbstractWriteBlockingClient.java:90)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurements(WriteApiBlockingImpl.java:253)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:220)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:207)
	at com.example.utils.InfluxUtils.writeData(InfluxUtils.java:38)
	at com.example.service.impl.ClientServiceImp.getRuntimeInfo(ClientServiceImp.java:44)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.service.impl.ClientServiceImp$$SpringCGLIB$$0.getRuntimeInfo(<generated>)
	at com.example.controller.ClientController.runtimeDetail(ClientController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.RequestLogFilter.doFilterInternal(RequestLogFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:51)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.net.ConnectException: Failed to connect to localhost/127.0.0.1:8086
		... 158 common frames omitted
	Caused by: java.net.ConnectException: Connection refused: no further information
		at java.base/sun.nio.ch.Net.pollConnect(Native Method)
		at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
		at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
		at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
		at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
		at java.base/java.net.Socket.connect(Socket.java:633)
		at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
		at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
		... 157 common frames omitted
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
	... 157 common frames omitted

2024-04-30 18:30:16.377 ERROR 48096 --- [http-nio-8080-exec-3] (98084244341002240) o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: com.influxdb.exceptions.InfluxException: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:8086] with root cause

java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:207)
	at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:226)
	at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:106)
	at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:74)
	at okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:255)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:95)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.GzipInterceptor.intercept(GzipInterceptor.java:91)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:154)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:103)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at retrofit2.OkHttpCall.execute(OkHttpCall.java:204)
	at com.influxdb.internal.AbstractRestClient.execute(AbstractRestClient.java:79)
	at com.influxdb.client.internal.AbstractWriteBlockingClient.write(AbstractWriteBlockingClient.java:90)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurements(WriteApiBlockingImpl.java:253)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:220)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:207)
	at com.example.utils.InfluxUtils.writeData(InfluxUtils.java:38)
	at com.example.service.impl.ClientServiceImp.getRuntimeInfo(ClientServiceImp.java:44)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.service.impl.ClientServiceImp$$SpringCGLIB$$0.getRuntimeInfo(<generated>)
	at com.example.controller.ClientController.runtimeDetail(ClientController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.RequestLogFilter.doFilterInternal(RequestLogFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:51)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)

2024-04-30 18:30:21.379  INFO 48096 --- [http-nio-8080-exec-4] (98084265350270976) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:30:21.382  WARN 48096 --- [http-nio-8080-exec-4] (98084265350270976) c.i.client.internal.InfluxDBClientImpl   : Cannot retrieve the Session token!

java.net.ConnectException: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:8086
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:297)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:207)
	at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:226)
	at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:106)
	at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:74)
	at okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:255)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:95)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.GzipInterceptor.intercept(GzipInterceptor.java:91)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:154)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:77)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at com.influxdb.client.internal.AuthenticateInterceptor.initToken(AuthenticateInterceptor.java:131)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:94)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at retrofit2.OkHttpCall.execute(OkHttpCall.java:204)
	at com.influxdb.internal.AbstractRestClient.execute(AbstractRestClient.java:79)
	at com.influxdb.client.internal.AbstractWriteBlockingClient.write(AbstractWriteBlockingClient.java:90)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurements(WriteApiBlockingImpl.java:253)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:220)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:207)
	at com.example.utils.InfluxUtils.writeData(InfluxUtils.java:38)
	at com.example.service.impl.ClientServiceImp.getRuntimeInfo(ClientServiceImp.java:44)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.service.impl.ClientServiceImp$$SpringCGLIB$$0.getRuntimeInfo(<generated>)
	at com.example.controller.ClientController.runtimeDetail(ClientController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.RequestLogFilter.doFilterInternal(RequestLogFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:51)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.net.ConnectException: Failed to connect to localhost/127.0.0.1:8086
		... 158 common frames omitted
	Caused by: java.net.ConnectException: Connection refused: no further information
		at java.base/sun.nio.ch.Net.pollConnect(Native Method)
		at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
		at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
		at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
		at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
		at java.base/java.net.Socket.connect(Socket.java:633)
		at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
		at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
		... 157 common frames omitted
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
	... 157 common frames omitted

2024-04-30 18:30:21.397 ERROR 48096 --- [http-nio-8080-exec-4] (98084265350270976) o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: com.influxdb.exceptions.InfluxException: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:8086] with root cause

java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:207)
	at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:226)
	at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:106)
	at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:74)
	at okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:255)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:95)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.GzipInterceptor.intercept(GzipInterceptor.java:91)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:154)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:103)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at retrofit2.OkHttpCall.execute(OkHttpCall.java:204)
	at com.influxdb.internal.AbstractRestClient.execute(AbstractRestClient.java:79)
	at com.influxdb.client.internal.AbstractWriteBlockingClient.write(AbstractWriteBlockingClient.java:90)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurements(WriteApiBlockingImpl.java:253)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:220)
	at com.influxdb.client.internal.WriteApiBlockingImpl.writeMeasurement(WriteApiBlockingImpl.java:207)
	at com.example.utils.InfluxUtils.writeData(InfluxUtils.java:38)
	at com.example.service.impl.ClientServiceImp.getRuntimeInfo(ClientServiceImp.java:44)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.example.service.impl.ClientServiceImp$$SpringCGLIB$$0.getRuntimeInfo(<generated>)
	at com.example.controller.ClientController.runtimeDetail(ClientController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.RequestLogFilter.doFilterInternal(RequestLogFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:51)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)

2024-04-30 18:30:22.605  INFO 48096 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] (system) o.s.a.r.l.SimpleMessageListenerContainer : Waiting for workers to finish.
2024-04-30 18:30:23.524  INFO 48096 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] (system) o.s.a.r.l.SimpleMessageListenerContainer : Successfully waited for workers to finish.
2024-04-30 18:30:23.546  INFO 48096 --- [SpringApplicationShutdownHook] (system) com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-04-30 18:30:23.551  INFO 48096 --- [SpringApplicationShutdownHook] (system) com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-04-30 18:31:16.374  INFO 47608 --- [main] (system) c.example.MyProjectBackendApplication    : Starting MyProjectBackendApplication using Java 17.0.10 with PID 47608 (E:\k\study-monitor\study_monitor\my-project-backend\target\classes started by k in E:\k\study-monitor\study_monitor)
2024-04-30 18:31:16.376  INFO 47608 --- [main] (system) c.example.MyProjectBackendApplication    : The following 1 profile is active: "dev"
2024-04-30 18:31:17.056  INFO 47608 --- [main] (system) .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-30 18:31:17.059  INFO 47608 --- [main] (system) .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-30 18:31:17.083  INFO 47608 --- [main] (system) .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2024-04-30 18:31:17.694  INFO 47608 --- [main] (system) o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-04-30 18:31:17.702  INFO 47608 --- [main] (system) o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-04-30 18:31:17.702  INFO 47608 --- [main] (system) o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.11]
2024-04-30 18:31:17.792  INFO 47608 --- [main] (system) o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-04-30 18:31:17.793  INFO 47608 --- [main] (system) w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1389 ms
2024-04-30 18:31:18.138  WARN 47608 --- [main] (system) c.b.m.core.metadata.TableInfoHelper      : This primary key of "id" is primitive !不建议如此请使用包装类 in Class: "com.example.entity.dto.ClientDetail"
2024-04-30 18:31:18.466  WARN 47608 --- [main] (system) c.b.m.core.metadata.TableInfoHelper      : This primary key of "id" is primitive !不建议如此请使用包装类 in Class: "com.example.entity.dto.Client"
2024-04-30 18:31:18.532  INFO 47608 --- [main] (system) com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-04-30 18:31:18.717  INFO 47608 --- [main] (system) com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1bf52f10
2024-04-30 18:31:18.718  INFO 47608 --- [main] (system) com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-04-30 18:31:19.260  INFO 47608 --- [main] (system) o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2b5a04b0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@41a3c6f5, org.springframework.security.web.context.SecurityContextHolderFilter@13e5b262, org.springframework.security.web.header.HeaderWriterFilter@16f62062, org.springframework.security.web.authentication.logout.LogoutFilter@112a50a1, com.example.filter.JwtAuthenticationFilter@450f0d89, com.example.filter.RequestLogFilter@426913c4, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@22f7bf36, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@220e1b7b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5a941fb4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5b78a946, org.springframework.security.web.session.SessionManagementFilter@3889c343, org.springframework.security.web.access.ExceptionTranslationFilter@7ac47f14, org.springframework.security.web.access.intercept.AuthorizationFilter@2b441609]
2024-04-30 18:31:19.535  WARN 47608 --- [main] (system) ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: org.springframework.amqp.rabbit.core.RabbitAdmin
2024-04-30 18:31:19.582  INFO 47608 --- [main] (system) o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-04-30 18:31:19.585  INFO 47608 --- [main] (system) o.s.a.r.c.CachingConnectionFactory       : Attempting to connect to: [localhost:5672]
2024-04-30 18:31:19.619  INFO 47608 --- [main] (system) o.s.a.r.c.CachingConnectionFactory       : Created new connection: rabbitConnectionFactory#1c382179:0/SimpleConnection@2c5b4b91 [delegate=amqp://guest@127.0.0.1:5672/, localPort=1580]
2024-04-30 18:31:19.656  INFO 47608 --- [main] (system) c.example.MyProjectBackendApplication    : Started MyProjectBackendApplication in 3.709 seconds (process running for 4.305)
2024-04-30 18:31:21.422  INFO 47608 --- [http-nio-8080-exec-1] (system) o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-30 18:31:21.422  INFO 47608 --- [http-nio-8080-exec-1] (system) o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-04-30 18:31:21.424  INFO 47608 --- [http-nio-8080-exec-1] (system) o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-04-30 18:31:21.760  INFO 47608 --- [http-nio-8080-exec-1] (98084518598152192) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:31:21.995  INFO 47608 --- [http-nio-8080-exec-1] (98084518598152192) com.example.filter.RequestLogFilter      : 请求处理耗时: 237ms | 响应结果: {"id":98084518598152192,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:31:26.375  INFO 47608 --- [http-nio-8080-exec-2] (98084537963253760) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:31:26.380  INFO 47608 --- [http-nio-8080-exec-2] (98084537963253760) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98084537963253760,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:31:31.337  INFO 47608 --- [http-nio-8080-exec-3] (98084558775390208) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:31:31.343  INFO 47608 --- [http-nio-8080-exec-3] (98084558775390208) com.example.filter.RequestLogFilter      : 请求处理耗时: 6ms | 响应结果: {"id":98084558775390208,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:31:36.370  INFO 47608 --- [http-nio-8080-exec-4] (98084579885322240) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:31:36.375  INFO 47608 --- [http-nio-8080-exec-4] (98084579885322240) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98084579885322240,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:31:41.506  INFO 47608 --- [http-nio-8080-exec-5] (98084601427267584) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:31:41.511  INFO 47608 --- [http-nio-8080-exec-5] (98084601427267584) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98084601427267584,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:31:46.386  INFO 47608 --- [http-nio-8080-exec-7] (98084621895471104) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:31:46.390  INFO 47608 --- [http-nio-8080-exec-7] (98084621895471104) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98084621895471104,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:31:51.341  INFO 47608 --- [http-nio-8080-exec-6] (98084642678247424) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:31:51.345  INFO 47608 --- [http-nio-8080-exec-6] (98084642678247424) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98084642678247424,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:31:56.116  INFO 47608 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] (system) o.s.a.r.l.SimpleMessageListenerContainer : Waiting for workers to finish.
2024-04-30 18:31:56.879  INFO 47608 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] (system) o.s.a.r.l.SimpleMessageListenerContainer : Successfully waited for workers to finish.
2024-04-30 18:31:56.902  INFO 47608 --- [SpringApplicationShutdownHook] (system) com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-04-30 18:31:56.906  INFO 47608 --- [SpringApplicationShutdownHook] (system) com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-04-30 18:44:21.793  INFO 47040 --- [main] (system) c.example.MyProjectBackendApplication    : Starting MyProjectBackendApplication using Java 17.0.10 with PID 47040 (E:\k\study-monitor\study_monitor\my-project-backend\target\classes started by k in E:\k\study-monitor\study_monitor)
2024-04-30 18:44:21.795  INFO 47040 --- [main] (system) c.example.MyProjectBackendApplication    : The following 1 profile is active: "dev"
2024-04-30 18:44:22.424  INFO 47040 --- [main] (system) .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-30 18:44:22.427  INFO 47040 --- [main] (system) .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-30 18:44:22.449  INFO 47040 --- [main] (system) .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2024-04-30 18:44:23.040  INFO 47040 --- [main] (system) o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-04-30 18:44:23.048  INFO 47040 --- [main] (system) o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-04-30 18:44:23.048  INFO 47040 --- [main] (system) o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.11]
2024-04-30 18:44:23.141  INFO 47040 --- [main] (system) o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-04-30 18:44:23.141  INFO 47040 --- [main] (system) w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1317 ms
2024-04-30 18:44:23.490  WARN 47040 --- [main] (system) c.b.m.core.metadata.TableInfoHelper      : This primary key of "id" is primitive !不建议如此请使用包装类 in Class: "com.example.entity.dto.ClientDetail"
2024-04-30 18:44:23.836  WARN 47040 --- [main] (system) c.b.m.core.metadata.TableInfoHelper      : This primary key of "id" is primitive !不建议如此请使用包装类 in Class: "com.example.entity.dto.Client"
2024-04-30 18:44:23.906  INFO 47040 --- [main] (system) com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-04-30 18:44:24.091  INFO 47040 --- [main] (system) com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4769378c
2024-04-30 18:44:24.093  INFO 47040 --- [main] (system) com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-04-30 18:44:24.616  INFO 47040 --- [main] (system) o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@70dd79f7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4ee19768, org.springframework.security.web.context.SecurityContextHolderFilter@6632eb19, org.springframework.security.web.header.HeaderWriterFilter@2d399e88, org.springframework.security.web.authentication.logout.LogoutFilter@54fd5759, com.example.filter.JwtAuthenticationFilter@8636cf4, com.example.filter.RequestLogFilter@2e40ea48, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4b37d1a4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5a95aaae, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6a6e410c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@8113ea7, org.springframework.security.web.session.SessionManagementFilter@4df5f119, org.springframework.security.web.access.ExceptionTranslationFilter@f2b4303, org.springframework.security.web.access.intercept.AuthorizationFilter@50e4d8cd]
2024-04-30 18:44:24.880  WARN 47040 --- [main] (system) ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: org.springframework.amqp.rabbit.core.RabbitAdmin
2024-04-30 18:44:24.926  INFO 47040 --- [main] (system) o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-04-30 18:44:24.928  INFO 47040 --- [main] (system) o.s.a.r.c.CachingConnectionFactory       : Attempting to connect to: [localhost:5672]
2024-04-30 18:44:24.962  INFO 47040 --- [main] (system) o.s.a.r.c.CachingConnectionFactory       : Created new connection: rabbitConnectionFactory#7bad18f5:0/SimpleConnection@2f70d78c [delegate=amqp://guest@127.0.0.1:5672/, localPort=6098]
2024-04-30 18:44:24.997  INFO 47040 --- [main] (system) c.example.MyProjectBackendApplication    : Started MyProjectBackendApplication in 3.606 seconds (process running for 4.229)
2024-04-30 18:44:25.116  INFO 47040 --- [http-nio-8080-exec-1] (system) o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-30 18:44:25.116  INFO 47040 --- [http-nio-8080-exec-1] (system) o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-04-30 18:44:25.117  INFO 47040 --- [http-nio-8080-exec-1] (system) o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-04-30 18:44:25.444  INFO 47040 --- [http-nio-8080-exec-1] (98087805611282432) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:44:25.545  INFO 47040 --- [http-nio-8080-exec-1] (98087805611282432) com.example.filter.RequestLogFilter      : 请求处理耗时: 103ms | 响应结果: {"code":401,"data":null,"id":98087805611282432,"message":"Full authentication is required to access this resource"}
2024-04-30 18:44:25.587  INFO 47040 --- [http-nio-8080-exec-3] (98087806215262208) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:44:25.648  INFO 47040 --- [http-nio-8080-exec-3] (98087806215262208) com.example.filter.RequestLogFilter      : 请求处理耗时: 61ms | 响应结果: {"id":98087806215262208,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:44:28.558  INFO 47040 --- [http-nio-8080-exec-4] (98087818676539392) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:44:28.562  INFO 47040 --- [http-nio-8080-exec-4] (98087818676539392) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98087818676539392,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:44:32.226  INFO 47040 --- [http-nio-8080-exec-2] (98087834061246464) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/detail" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:44:32.268  INFO 47040 --- [http-nio-8080-exec-2] (98087834061246464) com.example.filter.RequestLogFilter      : 请求处理耗时: 42ms | 响应结果: {"id":98087834061246464,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:44:33.545  INFO 47040 --- [http-nio-8080-exec-5] (98087839593533440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:44:33.546  INFO 47040 --- [http-nio-8080-exec-5] (98087839593533440) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98087839593533440,"message":"Full authentication is required to access this resource"}
2024-04-30 18:44:33.550  INFO 47040 --- [http-nio-8080-exec-9] (98087839614504960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:44:33.554  INFO 47040 --- [http-nio-8080-exec-9] (98087839614504960) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98087839614504960,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:44:36.706  INFO 47040 --- [http-nio-8080-exec-8] (98087852851728384) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:44:36.742  INFO 47040 --- [http-nio-8080-exec-8] (98087852851728384) com.example.filter.RequestLogFilter      : 请求处理耗时: 35ms | 响应结果: {"id":98087852851728384,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:44:38.547  INFO 47040 --- [http-nio-8080-exec-6] (98087860569247744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:44:38.550  INFO 47040 --- [http-nio-8080-exec-6] (98087860569247744) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98087860569247744,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09469898774640384,"memoryUsage":11.379619598388672,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:44:41.338  INFO 47040 --- [http-nio-8080-exec-7] (98087872279744512) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:44:41.343  INFO 47040 --- [http-nio-8080-exec-7] (98087872279744512) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98087872279744512,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:44:42.767  INFO 47040 --- [http-nio-8080-exec-10] (98087878273404928) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:44:42.769  INFO 47040 --- [http-nio-8080-exec-10] (98087878273404928) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"code":401,"data":null,"id":98087878273404928,"message":"Full authentication is required to access this resource"}
2024-04-30 18:44:42.773  INFO 47040 --- [http-nio-8080-exec-1] (98087878298570752) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:44:42.777  INFO 47040 --- [http-nio-8080-exec-1] (98087878298570752) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98087878298570752,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.08090213118146079,"memoryUsage":11.38037109375,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:44:46.375  INFO 47040 --- [http-nio-8080-exec-3] (98087893406453760) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:44:46.381  INFO 47040 --- [http-nio-8080-exec-3] (98087893406453760) com.example.filter.RequestLogFilter      : 请求处理耗时: 6ms | 响应结果: {"id":98087893406453760,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:44:47.766  INFO 47040 --- [http-nio-8080-exec-4] (98087899240730624) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:44:47.769  INFO 47040 --- [http-nio-8080-exec-4] (98087899240730624) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98087899240730624,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.11455189607663037,"memoryUsage":11.374164581298828,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:44:51.347  INFO 47040 --- [http-nio-8080-exec-2] (98087914260533248) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:44:51.352  INFO 47040 --- [http-nio-8080-exec-2] (98087914260533248) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98087914260533248,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:44:52.764  INFO 47040 --- [http-nio-8080-exec-5] (98087920203862016) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:44:52.765  INFO 47040 --- [http-nio-8080-exec-5] (98087920203862016) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98087920203862016,"message":"Full authentication is required to access this resource"}
2024-04-30 18:44:52.769  INFO 47040 --- [http-nio-8080-exec-9] (98087920224833536) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:44:52.772  INFO 47040 --- [http-nio-8080-exec-9] (98087920224833536) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98087920224833536,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09886666666666667,"memoryUsage":11.367721557617188,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:44:56.384  INFO 47040 --- [http-nio-8080-exec-8] (98087935387242496) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:44:56.388  INFO 47040 --- [http-nio-8080-exec-8] (98087935387242496) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98087935387242496,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:44:57.770  INFO 47040 --- [http-nio-8080-exec-6] (98087941200547840) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:44:57.771  INFO 47040 --- [http-nio-8080-exec-6] (98087941200547840) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98087941200547840,"message":"Full authentication is required to access this resource"}
2024-04-30 18:44:57.774  INFO 47040 --- [http-nio-8080-exec-7] (98087941217325056) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:44:57.778  INFO 47040 --- [http-nio-8080-exec-7] (98087941217325056) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98087941217325056,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.08971539025528227,"memoryUsage":11.366397857666016,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:45:01.375  INFO 47040 --- [http-nio-8080-exec-10] (98087956321013760) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:45:01.380  INFO 47040 --- [http-nio-8080-exec-10] (98087956321013760) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98087956321013760,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:45:02.765  INFO 47040 --- [http-nio-8080-exec-1] (98087962151096320) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:45:02.769  INFO 47040 --- [http-nio-8080-exec-1] (98087962151096320) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98087962151096320,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.08852088321362064,"memoryUsage":11.368064880371094,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:45:06.385  INFO 47040 --- [http-nio-8080-exec-3] (98087977334476800) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:45:06.389  INFO 47040 --- [http-nio-8080-exec-3] (98087977334476800) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98087977334476800,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:45:08.555  INFO 47040 --- [http-nio-8080-exec-4] (98087986436116480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:45:08.556  INFO 47040 --- [http-nio-8080-exec-4] (98087986436116480) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98087986436116480,"message":"Full authentication is required to access this resource"}
2024-04-30 18:45:08.560  INFO 47040 --- [http-nio-8080-exec-2] (98087986457088000) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:45:08.563  INFO 47040 --- [http-nio-8080-exec-2] (98087986457088000) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98087986457088000,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.17243631613324625,"memoryUsage":11.37215805053711,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:45:11.364  INFO 47040 --- [http-nio-8080-exec-5] (98087998217916416) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:45:11.369  INFO 47040 --- [http-nio-8080-exec-5] (98087998217916416) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98087998217916416,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:45:13.546  INFO 47040 --- [http-nio-8080-exec-9] (98088007369887744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:45:13.550  INFO 47040 --- [http-nio-8080-exec-9] (98088007369887744) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98088007369887744,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09539629805410536,"memoryUsage":11.370719909667969,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:45:16.348  INFO 47040 --- [http-nio-8080-exec-8] (98088019122327552) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:45:16.352  INFO 47040 --- [http-nio-8080-exec-8] (98088019122327552) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98088019122327552,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:45:18.556  INFO 47040 --- [http-nio-8080-exec-6] (98088028383350784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:45:18.557  INFO 47040 --- [http-nio-8080-exec-6] (98088028383350784) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98088028383350784,"message":"Full authentication is required to access this resource"}
2024-04-30 18:45:18.561  INFO 47040 --- [http-nio-8080-exec-7] (98088028404322304) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:45:18.564  INFO 47040 --- [http-nio-8080-exec-7] (98088028404322304) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98088028404322304,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09122949708553613,"memoryUsage":11.364700317382812,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:45:22.772  INFO 47040 --- [http-nio-8080-exec-1] (98088046066536448) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:45:22.775  INFO 47040 --- [http-nio-8080-exec-1] (98088046066536448) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98088046066536448,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09122949708553613,"memoryUsage":11.364700317382812,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:45:27.774  INFO 47040 --- [http-nio-8080-exec-4] (98088067046445056) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:45:27.775  INFO 47040 --- [http-nio-8080-exec-4] (98088067046445056) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98088067046445056,"message":"Full authentication is required to access this resource"}
2024-04-30 18:45:27.778  INFO 47040 --- [http-nio-8080-exec-2] (98088067063222272) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:45:27.782  INFO 47040 --- [http-nio-8080-exec-2] (98088067063222272) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98088067063222272,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09122949708553613,"memoryUsage":11.364700317382812,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:45:31.518  INFO 47040 --- [http-nio-8080-exec-5] (98088082749919232) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:45:31.525  INFO 47040 --- [http-nio-8080-exec-5] (98088082749919232) com.example.filter.RequestLogFilter      : 请求处理耗时: 7ms | 响应结果: {"id":98088082749919232,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09122949708553613,"memoryUsage":11.364700317382812,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:45:36.517  INFO 47040 --- [http-nio-8080-exec-9] (98088103717244928) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:45:36.518  INFO 47040 --- [http-nio-8080-exec-9] (98088103717244928) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98088103717244928,"message":"Full authentication is required to access this resource"}
2024-04-30 18:45:36.524  INFO 47040 --- [http-nio-8080-exec-8] (98088103746605056) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:45:36.532  INFO 47040 --- [http-nio-8080-exec-8] (98088103746605056) com.example.filter.RequestLogFilter      : 请求处理耗时: 7ms | 响应结果: {"id":98088103746605056,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09122949708553613,"memoryUsage":11.364700317382812,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:45:41.528  INFO 47040 --- [http-nio-8080-exec-6] (98088124730707968) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:45:41.530  INFO 47040 --- [http-nio-8080-exec-6] (98088124730707968) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"code":401,"data":null,"id":98088124730707968,"message":"Full authentication is required to access this resource"}
2024-04-30 18:45:41.535  INFO 47040 --- [http-nio-8080-exec-7] (98088124764262400) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:45:41.542  INFO 47040 --- [http-nio-8080-exec-7] (98088124764262400) com.example.filter.RequestLogFilter      : 请求处理耗时: 7ms | 响应结果: {"id":98088124764262400,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09122949708553613,"memoryUsage":11.364700317382812,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:45:46.556  INFO 47040 --- [http-nio-8080-exec-10] (98088145823862784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:45:46.557  INFO 47040 --- [http-nio-8080-exec-10] (98088145823862784) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98088145823862784,"message":"Full authentication is required to access this resource"}
2024-04-30 18:45:46.561  INFO 47040 --- [http-nio-8080-exec-1] (98088145844834304) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:45:46.565  INFO 47040 --- [http-nio-8080-exec-1] (98088145844834304) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98088145844834304,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:45:51.546  INFO 47040 --- [http-nio-8080-exec-3] (98088166753439744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:45:51.549  INFO 47040 --- [http-nio-8080-exec-3] (98088166753439744) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98088166753439744,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:45:56.554  INFO 47040 --- [http-nio-8080-exec-4] (98088187758514176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:45:56.555  INFO 47040 --- [http-nio-8080-exec-4] (98088187758514176) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98088187758514176,"message":"Full authentication is required to access this resource"}
2024-04-30 18:45:56.558  INFO 47040 --- [http-nio-8080-exec-2] (98088187775291392) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:45:56.561  INFO 47040 --- [http-nio-8080-exec-2] (98088187775291392) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98088187775291392,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:46:01.520  INFO 47040 --- [http-nio-8080-exec-5] (98088208587427840) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:46:01.523  INFO 47040 --- [http-nio-8080-exec-5] (98088208587427840) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98088208587427840,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:46:06.517  INFO 47040 --- [http-nio-8080-exec-9] (98088229546364928) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:46:06.518  INFO 47040 --- [http-nio-8080-exec-9] (98088229546364928) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98088229546364928,"message":"Full authentication is required to access this resource"}
2024-04-30 18:46:06.521  INFO 47040 --- [http-nio-8080-exec-8] (98088229563142144) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:46:06.524  INFO 47040 --- [http-nio-8080-exec-8] (98088229563142144) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98088229563142144,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:46:11.548  INFO 47040 --- [http-nio-8080-exec-6] (98088250647908352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:46:11.549  INFO 47040 --- [http-nio-8080-exec-6] (98088250647908352) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98088250647908352,"message":"Full authentication is required to access this resource"}
2024-04-30 18:46:11.552  INFO 47040 --- [http-nio-8080-exec-7] (98088250664685568) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:46:11.554  INFO 47040 --- [http-nio-8080-exec-7] (98088250664685568) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98088250664685568,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:46:16.550  INFO 47040 --- [http-nio-8080-exec-10] (98088271627816960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:46:16.553  INFO 47040 --- [http-nio-8080-exec-10] (98088271627816960) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98088271627816960,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:46:21.548  INFO 47040 --- [http-nio-8080-exec-1] (98088292590948352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:46:21.549  INFO 47040 --- [http-nio-8080-exec-1] (98088292590948352) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98088292590948352,"message":"Full authentication is required to access this resource"}
2024-04-30 18:46:21.552  INFO 47040 --- [http-nio-8080-exec-3] (98088292607725568) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:46:21.555  INFO 47040 --- [http-nio-8080-exec-3] (98088292607725568) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98088292607725568,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:46:26.555  INFO 47040 --- [http-nio-8080-exec-4] (98088313591828480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:46:26.556  INFO 47040 --- [http-nio-8080-exec-4] (98088313591828480) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98088313591828480,"message":"Full authentication is required to access this resource"}
2024-04-30 18:46:26.565  INFO 47040 --- [http-nio-8080-exec-2] (98088313633771520) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:46:26.569  INFO 47040 --- [http-nio-8080-exec-2] (98088313633771520) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98088313633771520,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:46:31.517  INFO 47040 --- [http-nio-8080-exec-5] (98088334403964928) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:46:31.520  INFO 47040 --- [http-nio-8080-exec-5] (98088334403964928) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98088334403964928,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:46:36.518  INFO 47040 --- [http-nio-8080-exec-9] (98088355379679232) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:46:36.519  INFO 47040 --- [http-nio-8080-exec-9] (98088355379679232) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98088355379679232,"message":"Full authentication is required to access this resource"}
2024-04-30 18:46:36.522  INFO 47040 --- [http-nio-8080-exec-8] (98088355396456448) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:46:36.526  INFO 47040 --- [http-nio-8080-exec-8] (98088355396456448) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98088355396456448,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:46:41.550  INFO 47040 --- [http-nio-8080-exec-6] (98088376485416960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:46:41.551  INFO 47040 --- [http-nio-8080-exec-6] (98088376485416960) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98088376485416960,"message":"Full authentication is required to access this resource"}
2024-04-30 18:46:41.553  INFO 47040 --- [http-nio-8080-exec-7] (98088376497999872) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:46:41.557  INFO 47040 --- [http-nio-8080-exec-7] (98088376497999872) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98088376497999872,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:46:46.546  INFO 47040 --- [http-nio-8080-exec-10] (98088397435965440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:46:46.548  INFO 47040 --- [http-nio-8080-exec-10] (98088397435965440) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98088397435965440,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:46:51.552  INFO 47040 --- [http-nio-8080-exec-1] (98088418436845568) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:46:51.553  INFO 47040 --- [http-nio-8080-exec-1] (98088418436845568) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98088418436845568,"message":"Full authentication is required to access this resource"}
2024-04-30 18:46:51.556  INFO 47040 --- [http-nio-8080-exec-3] (98088418453622784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:46:51.558  INFO 47040 --- [http-nio-8080-exec-3] (98088418453622784) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98088418453622784,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:46:56.547  INFO 47040 --- [http-nio-8080-exec-4] (98088439387394048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:46:56.550  INFO 47040 --- [http-nio-8080-exec-4] (98088439387394048) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98088439387394048,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:47:01.543  INFO 47040 --- [http-nio-8080-exec-2] (98088460342136832) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:47:01.544  INFO 47040 --- [http-nio-8080-exec-2] (98088460342136832) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98088460342136832,"message":"Full authentication is required to access this resource"}
2024-04-30 18:47:01.547  INFO 47040 --- [http-nio-8080-exec-5] (98088460358914048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:47:01.549  INFO 47040 --- [http-nio-8080-exec-5] (98088460358914048) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98088460358914048,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:47:05.281  INFO 47040 --- [http-nio-8080-exec-9] (98088476020445184) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/detail" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:47:05.288  INFO 47040 --- [http-nio-8080-exec-9] (98088476020445184) com.example.filter.RequestLogFilter      : 请求处理耗时: 7ms | 响应结果: {"id":98088476020445184,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:47:06.553  INFO 47040 --- [http-nio-8080-exec-8] (98088481355599872) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:47:06.554  INFO 47040 --- [http-nio-8080-exec-8] (98088481355599872) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98088481355599872,"message":"Full authentication is required to access this resource"}
2024-04-30 18:47:06.556  INFO 47040 --- [http-nio-8080-exec-6] (98088481368182784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:47:06.560  INFO 47040 --- [http-nio-8080-exec-6] (98088481368182784) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98088481368182784,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:47:06.859  INFO 47040 --- [http-nio-8080-exec-7] (98088482639056896) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:47:06.866  INFO 47040 --- [http-nio-8080-exec-7] (98088482639056896) com.example.filter.RequestLogFilter      : 请求处理耗时: 7ms | 响应结果: {"id":98088482639056896,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:47:11.336  INFO 47040 --- [http-nio-8080-exec-10] (98088501416955904) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:47:11.340  INFO 47040 --- [http-nio-8080-exec-10] (98088501416955904) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98088501416955904,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:47:11.518  INFO 47040 --- [http-nio-8080-exec-1] (98088502180319232) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:47:11.521  INFO 47040 --- [http-nio-8080-exec-1] (98088502180319232) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98088502180319232,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.06669425477619147,"memoryUsage":6.986335754394531,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:47:16.349  INFO 47040 --- [http-nio-8080-exec-3] (98088522443001856) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:47:16.353  INFO 47040 --- [http-nio-8080-exec-3] (98088522443001856) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98088522443001856,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:47:16.520  INFO 47040 --- [http-nio-8080-exec-4] (98088523160227840) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:47:16.520  INFO 47040 --- [http-nio-8080-exec-4] (98088523160227840) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98088523160227840,"message":"Full authentication is required to access this resource"}
2024-04-30 18:47:16.524  INFO 47040 --- [http-nio-8080-exec-2] (98088523177005056) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:47:16.527  INFO 47040 --- [http-nio-8080-exec-2] (98088523177005056) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98088523177005056,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.043146522619851455,"memoryUsage":6.989227294921875,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:47:21.334  INFO 47040 --- [http-nio-8080-exec-5] (98088543351607296) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:47:21.338  INFO 47040 --- [http-nio-8080-exec-5] (98088543351607296) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98088543351607296,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:47:21.525  INFO 47040 --- [http-nio-8080-exec-9] (98088544148525056) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:47:21.527  INFO 47040 --- [http-nio-8080-exec-9] (98088544148525056) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98088544148525056,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0738713165720465,"memoryUsage":7.000453948974609,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:47:26.358  INFO 47040 --- [http-nio-8080-exec-8] (98088564423790592) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:47:26.362  INFO 47040 --- [http-nio-8080-exec-8] (98088564423790592) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98088564423790592,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:47:26.522  INFO 47040 --- [http-nio-8080-exec-6] (98088565111656448) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:47:26.523  INFO 47040 --- [http-nio-8080-exec-6] (98088565111656448) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98088565111656448,"message":"Full authentication is required to access this resource"}
2024-04-30 18:47:26.525  INFO 47040 --- [http-nio-8080-exec-7] (98088565124239360) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:47:26.528  INFO 47040 --- [http-nio-8080-exec-7] (98088565124239360) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98088565124239360,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1053122708791575,"memoryUsage":7.026084899902344,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:47:31.356  INFO 47040 --- [http-nio-8080-exec-10] (98088585386921984) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:47:31.360  INFO 47040 --- [http-nio-8080-exec-10] (98088585386921984) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98088585386921984,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:47:31.516  INFO 47040 --- [http-nio-8080-exec-1] (98088586058010624) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:47:31.519  INFO 47040 --- [http-nio-8080-exec-1] (98088586058010624) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98088586058010624,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.08834511268169089,"memoryUsage":7.065513610839844,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:47:36.363  INFO 47040 --- [http-nio-8080-exec-3] (98088606387802112) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:47:36.371  INFO 47040 --- [http-nio-8080-exec-3] (98088606387802112) com.example.filter.RequestLogFilter      : 请求处理耗时: 8ms | 响应结果: {"id":98088606387802112,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:47:36.519  INFO 47040 --- [http-nio-8080-exec-4] (98088607042113536) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:47:36.519  INFO 47040 --- [http-nio-8080-exec-4] (98088607042113536) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98088607042113536,"message":"Full authentication is required to access this resource"}
2024-04-30 18:47:36.522  INFO 47040 --- [http-nio-8080-exec-2] (98088607054696448) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:47:36.524  INFO 47040 --- [http-nio-8080-exec-2] (98088607054696448) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98088607054696448,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.2110079305903884,"memoryUsage":7.161628723144531,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:47:41.351  INFO 47040 --- [http-nio-8080-exec-5] (98088627308990464) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:47:41.355  INFO 47040 --- [http-nio-8080-exec-5] (98088627308990464) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98088627308990464,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:47:41.523  INFO 47040 --- [http-nio-8080-exec-9] (98088628030410752) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:47:41.524  INFO 47040 --- [http-nio-8080-exec-9] (98088628030410752) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98088628030410752,"message":"Full authentication is required to access this resource"}
2024-04-30 18:47:41.527  INFO 47040 --- [http-nio-8080-exec-8] (98088628047187968) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:47:41.529  INFO 47040 --- [http-nio-8080-exec-8] (98088628047187968) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98088628047187968,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.057030615009482526,"memoryUsage":7.193012237548828,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:47:46.343  INFO 47040 --- [http-nio-8080-exec-6] (98088648246956032) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:47:46.347  INFO 47040 --- [http-nio-8080-exec-6] (98088648246956032) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98088648246956032,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:47:46.520  INFO 47040 --- [http-nio-8080-exec-7] (98088648989347840) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:47:46.523  INFO 47040 --- [http-nio-8080-exec-7] (98088648989347840) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98088648989347840,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.06181768558951965,"memoryUsage":7.192726135253906,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:47:51.344  INFO 47040 --- [http-nio-8080-exec-10] (98088669222670336) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:47:51.348  INFO 47040 --- [http-nio-8080-exec-10] (98088669222670336) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98088669222670336,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:47:51.523  INFO 47040 --- [http-nio-8080-exec-1] (98088669973450752) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:47:51.524  INFO 47040 --- [http-nio-8080-exec-1] (98088669973450752) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98088669973450752,"message":"Full authentication is required to access this resource"}
2024-04-30 18:47:51.526  INFO 47040 --- [http-nio-8080-exec-3] (98088669986033664) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:47:51.529  INFO 47040 --- [http-nio-8080-exec-3] (98088669986033664) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98088669986033664,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.05601463018152262,"memoryUsage":7.204395294189453,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:47:56.370  INFO 47040 --- [http-nio-8080-exec-4] (98088690303242240) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:47:56.374  INFO 47040 --- [http-nio-8080-exec-4] (98088690303242240) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98088690303242240,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:47:56.516  INFO 47040 --- [http-nio-8080-exec-2] (98088690915610624) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:47:56.519  INFO 47040 --- [http-nio-8080-exec-2] (98088690915610624) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98088690915610624,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09056421575389709,"memoryUsage":7.2071380615234375,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:48:01.424  INFO 47040 --- [http-nio-8080-exec-5] (98088711501254656) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:48:01.429  INFO 47040 --- [http-nio-8080-exec-5] (98088711501254656) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98088711501254656,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:48:01.555  INFO 47040 --- [http-nio-8080-exec-9] (98088712050708480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:48:01.556  INFO 47040 --- [http-nio-8080-exec-9] (98088712050708480) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98088712050708480,"message":"Full authentication is required to access this resource"}
2024-04-30 18:48:01.558  INFO 47040 --- [http-nio-8080-exec-8] (98088712063291392) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:48:01.561  INFO 47040 --- [http-nio-8080-exec-8] (98088712063291392) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98088712063291392,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1626,"memoryUsage":7.236797332763672,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:48:06.392  INFO 47040 --- [http-nio-8080-exec-6] (98088732338556928) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:48:06.396  INFO 47040 --- [http-nio-8080-exec-6] (98088732338556928) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98088732338556928,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:48:06.542  INFO 47040 --- [http-nio-8080-exec-7] (98088732967702528) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:48:06.545  INFO 47040 --- [http-nio-8080-exec-7] (98088732967702528) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98088732967702528,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.13189649609601858,"memoryUsage":7.268585205078125,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:48:11.544  INFO 47040 --- [http-nio-8080-exec-1] (98088753947611136) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:48:11.545  INFO 47040 --- [http-nio-8080-exec-1] (98088753947611136) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98088753947611136,"message":"Full authentication is required to access this resource"}
2024-04-30 18:48:11.548  INFO 47040 --- [http-nio-8080-exec-3] (98088753964388352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:48:11.551  INFO 47040 --- [http-nio-8080-exec-3] (98088753964388352) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98088753964388352,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.13189649609601858,"memoryUsage":7.268585205078125,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:48:16.549  INFO 47040 --- [http-nio-8080-exec-4] (98088774940102656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:48:16.549  INFO 47040 --- [http-nio-8080-exec-4] (98088774940102656) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98088774940102656,"message":"Full authentication is required to access this resource"}
2024-04-30 18:48:16.552  INFO 47040 --- [http-nio-8080-exec-2] (98088774952685568) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:48:16.554  INFO 47040 --- [http-nio-8080-exec-2] (98088774952685568) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98088774952685568,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.13189649609601858,"memoryUsage":7.268585205078125,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:48:21.554  INFO 47040 --- [http-nio-8080-exec-5] (98088795928399872) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:48:21.554  INFO 47040 --- [http-nio-8080-exec-5] (98088795928399872) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98088795928399872,"message":"Full authentication is required to access this resource"}
2024-04-30 18:48:21.557  INFO 47040 --- [http-nio-8080-exec-9] (98088795945177088) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:48:21.560  INFO 47040 --- [http-nio-8080-exec-9] (98088795945177088) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98088795945177088,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.13189649609601858,"memoryUsage":7.268585205078125,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:48:26.552  INFO 47040 --- [http-nio-8080-exec-8] (98088816895725568) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:48:26.555  INFO 47040 --- [http-nio-8080-exec-8] (98088816895725568) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98088816895725568,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.13189649609601858,"memoryUsage":7.268585205078125,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:48:31.517  INFO 47040 --- [http-nio-8080-exec-6] (98088837720444928) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:48:31.518  INFO 47040 --- [http-nio-8080-exec-6] (98088837720444928) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98088837720444928,"message":"Full authentication is required to access this resource"}
2024-04-30 18:48:31.521  INFO 47040 --- [http-nio-8080-exec-7] (98088837737222144) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:48:31.524  INFO 47040 --- [http-nio-8080-exec-7] (98088837737222144) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98088837737222144,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.13189649609601858,"memoryUsage":7.268585205078125,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:48:36.555  INFO 47040 --- [http-nio-8080-exec-10] (98088858851348480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:48:36.555  INFO 47040 --- [http-nio-8080-exec-10] (98088858851348480) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98088858851348480,"message":"Full authentication is required to access this resource"}
2024-04-30 18:48:36.558  INFO 47040 --- [http-nio-8080-exec-1] (98088858863931392) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:48:36.561  INFO 47040 --- [http-nio-8080-exec-1] (98088858863931392) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98088858863931392,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:48:41.553  INFO 47040 --- [http-nio-8080-exec-3] (98088879814479872) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:48:41.556  INFO 47040 --- [http-nio-8080-exec-3] (98088879814479872) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98088879814479872,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:48:46.546  INFO 47040 --- [http-nio-8080-exec-4] (98088900756639744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:48:46.547  INFO 47040 --- [http-nio-8080-exec-4] (98088900756639744) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98088900756639744,"message":"Full authentication is required to access this resource"}
2024-04-30 18:48:46.551  INFO 47040 --- [http-nio-8080-exec-2] (98088900777611264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:48:46.555  INFO 47040 --- [http-nio-8080-exec-2] (98088900777611264) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98088900777611264,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:48:51.516  INFO 47040 --- [http-nio-8080-exec-5] (98088921602330624) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:48:51.519  INFO 47040 --- [http-nio-8080-exec-5] (98088921602330624) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98088921602330624,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:48:56.528  INFO 47040 --- [http-nio-8080-exec-9] (98088942624182272) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:48:56.528  INFO 47040 --- [http-nio-8080-exec-9] (98088942624182272) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98088942624182272,"message":"Full authentication is required to access this resource"}
2024-04-30 18:48:56.531  INFO 47040 --- [http-nio-8080-exec-8] (98088942636765184) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:48:56.534  INFO 47040 --- [http-nio-8080-exec-8] (98088942636765184) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98088942636765184,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:49:01.547  INFO 47040 --- [http-nio-8080-exec-6] (98088963675394048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:49:01.548  INFO 47040 --- [http-nio-8080-exec-6] (98088963675394048) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98088963675394048,"message":"Full authentication is required to access this resource"}
2024-04-30 18:49:01.551  INFO 47040 --- [http-nio-8080-exec-7] (98088963692171264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:49:01.554  INFO 47040 --- [http-nio-8080-exec-7] (98088963692171264) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98088963692171264,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:49:06.545  INFO 47040 --- [http-nio-8080-exec-10] (98088984638525440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:49:06.548  INFO 47040 --- [http-nio-8080-exec-10] (98088984638525440) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98088984638525440,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:49:11.544  INFO 47040 --- [http-nio-8080-exec-1] (98089005605851136) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:49:11.544  INFO 47040 --- [http-nio-8080-exec-1] (98089005605851136) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98089005605851136,"message":"Full authentication is required to access this resource"}
2024-04-30 18:49:11.547  INFO 47040 --- [http-nio-8080-exec-3] (98089005618434048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:49:11.549  INFO 47040 --- [http-nio-8080-exec-3] (98089005618434048) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98089005618434048,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:49:16.551  INFO 47040 --- [http-nio-8080-exec-4] (98089026606731264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:49:16.552  INFO 47040 --- [http-nio-8080-exec-4] (98089026606731264) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98089026606731264,"message":"Full authentication is required to access this resource"}
2024-04-30 18:49:16.554  INFO 47040 --- [http-nio-8080-exec-2] (98089026619314176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:49:16.557  INFO 47040 --- [http-nio-8080-exec-2] (98089026619314176) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98089026619314176,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:49:21.543  INFO 47040 --- [http-nio-8080-exec-5] (98089047544696832) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:49:21.545  INFO 47040 --- [http-nio-8080-exec-5] (98089047544696832) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98089047544696832,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:49:26.551  INFO 47040 --- [http-nio-8080-exec-9] (98089068549771264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:49:26.552  INFO 47040 --- [http-nio-8080-exec-9] (98089068549771264) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98089068549771264,"message":"Full authentication is required to access this resource"}
2024-04-30 18:49:26.555  INFO 47040 --- [http-nio-8080-exec-8] (98089068566548480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:49:26.557  INFO 47040 --- [http-nio-8080-exec-8] (98089068566548480) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98089068566548480,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:49:31.552  INFO 47040 --- [http-nio-8080-exec-6] (98089089525485568) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:49:31.555  INFO 47040 --- [http-nio-8080-exec-6] (98089089525485568) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98089089525485568,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:49:36.555  INFO 47040 --- [http-nio-8080-exec-7] (98089110509588480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:49:36.556  INFO 47040 --- [http-nio-8080-exec-7] (98089110509588480) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98089110509588480,"message":"Full authentication is required to access this resource"}
2024-04-30 18:49:36.558  INFO 47040 --- [http-nio-8080-exec-10] (98089110522171392) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:49:36.561  INFO 47040 --- [http-nio-8080-exec-10] (98089110522171392) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98089110522171392,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:49:41.555  INFO 47040 --- [http-nio-8080-exec-1] (98089131481108480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:49:41.558  INFO 47040 --- [http-nio-8080-exec-1] (98089131481108480) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98089131481108480,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:49:46.545  INFO 47040 --- [http-nio-8080-exec-3] (98089152410685440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:49:46.546  INFO 47040 --- [http-nio-8080-exec-3] (98089152410685440) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98089152410685440,"message":"Full authentication is required to access this resource"}
2024-04-30 18:49:46.548  INFO 47040 --- [http-nio-8080-exec-4] (98089152423268352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:49:46.551  INFO 47040 --- [http-nio-8080-exec-4] (98089152423268352) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98089152423268352,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:49:51.549  INFO 47040 --- [http-nio-8080-exec-2] (98089173398982656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:49:51.552  INFO 47040 --- [http-nio-8080-exec-2] (98089173398982656) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98089173398982656,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:49:56.541  INFO 47040 --- [http-nio-8080-exec-5] (98089194336948224) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:49:56.542  INFO 47040 --- [http-nio-8080-exec-5] (98089194336948224) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98089194336948224,"message":"Full authentication is required to access this resource"}
2024-04-30 18:49:56.545  INFO 47040 --- [http-nio-8080-exec-9] (98089194353725440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:49:56.547  INFO 47040 --- [http-nio-8080-exec-9] (98089194353725440) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98089194353725440,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:49:58.070  INFO 47040 --- [http-nio-8080-exec-8] (98089200750039040) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/detail" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:49:58.075  INFO 47040 --- [http-nio-8080-exec-8] (98089200750039040) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98089200750039040,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:50:01.556  INFO 47040 --- [http-nio-8080-exec-6] (98089215371382784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:50:01.557  INFO 47040 --- [http-nio-8080-exec-6] (98089215371382784) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98089215371382784,"message":"Full authentication is required to access this resource"}
2024-04-30 18:50:01.560  INFO 47040 --- [http-nio-8080-exec-7] (98089215388160000) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:50:01.563  INFO 47040 --- [http-nio-8080-exec-7] (98089215388160000) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98089215388160000,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:50:02.119  INFO 47040 --- [http-nio-8080-exec-10] (98089217732775936) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:50:02.141  INFO 47040 --- [http-nio-8080-exec-10] (98089217732775936) com.example.filter.RequestLogFilter      : 请求处理耗时: 22ms | 响应结果: {"id":98089217732775936,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:50:06.364  INFO 47040 --- [http-nio-8080-exec-1] (98089235537596416) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:50:06.367  INFO 47040 --- [http-nio-8080-exec-1] (98089235537596416) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98089235537596416,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:50:06.519  INFO 47040 --- [http-nio-8080-exec-3] (98089236187713536) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:50:06.522  INFO 47040 --- [http-nio-8080-exec-3] (98089236187713536) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98089236187713536,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.2042394347420344,"memoryUsage":7.956089019775391,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:50:11.420  INFO 47040 --- [http-nio-8080-exec-4] (98089256743997440) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:50:11.425  INFO 47040 --- [http-nio-8080-exec-4] (98089256743997440) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98089256743997440,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:50:11.521  INFO 47040 --- [http-nio-8080-exec-2] (98089257167622144) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:50:11.522  INFO 47040 --- [http-nio-8080-exec-2] (98089257167622144) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98089257167622144,"message":"Full authentication is required to access this resource"}
2024-04-30 18:50:11.525  INFO 47040 --- [http-nio-8080-exec-5] (98089257184399360) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:50:11.527  INFO 47040 --- [http-nio-8080-exec-5] (98089257184399360) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98089257184399360,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.23144382308083375,"memoryUsage":8.192626953125,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:50:16.347  INFO 47040 --- [http-nio-8080-exec-9] (98089277409333248) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:50:16.350  INFO 47040 --- [http-nio-8080-exec-9] (98089277409333248) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98089277409333248,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:50:16.530  INFO 47040 --- [http-nio-8080-exec-8] (98089278176890880) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:50:16.530  INFO 47040 --- [http-nio-8080-exec-8] (98089278176890880) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98089278176890880,"message":"Full authentication is required to access this resource"}
2024-04-30 18:50:16.533  INFO 47040 --- [http-nio-8080-exec-6] (98089278189473792) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:50:16.535  INFO 47040 --- [http-nio-8080-exec-6] (98089278189473792) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98089278189473792,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07420949285665922,"memoryUsage":8.22336196899414,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:50:21.364  INFO 47040 --- [http-nio-8080-exec-7] (98089298452156416) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:50:21.369  INFO 47040 --- [http-nio-8080-exec-7] (98089298452156416) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98089298452156416,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:50:21.526  INFO 47040 --- [http-nio-8080-exec-10] (98089299131633664) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:50:21.529  INFO 47040 --- [http-nio-8080-exec-10] (98089299131633664) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98089299131633664,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.08868294662788338,"memoryUsage":8.208946228027344,"networkUpload":0.001953125,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:50:26.387  INFO 47040 --- [http-nio-8080-exec-1] (98089319520145408) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:50:26.391  INFO 47040 --- [http-nio-8080-exec-1] (98089319520145408) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98089319520145408,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:50:26.550  INFO 47040 --- [http-nio-8080-exec-3] (98089320203816960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:50:26.551  INFO 47040 --- [http-nio-8080-exec-3] (98089320203816960) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98089320203816960,"message":"Full authentication is required to access this resource"}
2024-04-30 18:50:26.553  INFO 47040 --- [http-nio-8080-exec-4] (98089320216399872) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:50:26.555  INFO 47040 --- [http-nio-8080-exec-4] (98089320216399872) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98089320216399872,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.12838370565045992,"memoryUsage":8.067405700683594,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:50:31.510  INFO 47040 --- [http-nio-8080-exec-2] (98089341007564800) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:50:31.515  INFO 47040 --- [http-nio-8080-exec-2] (98089341007564800) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98089341007564800,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:50:31.542  INFO 47040 --- [http-nio-8080-exec-5] (98089341141782528) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:50:31.544  INFO 47040 --- [http-nio-8080-exec-5] (98089341141782528) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98089341141782528,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.39081455805892545,"memoryUsage":8.086105346679688,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:50:32.727  INFO 47040 --- [http-nio-8080-exec-9] (98089346112032768) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:50:32.728  INFO 47040 --- [http-nio-8080-exec-9] (98089346112032768) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98089346112032768,"message":"Full authentication is required to access this resource"}
2024-04-30 18:50:32.730  INFO 47040 --- [http-nio-8080-exec-8] (98089346124615680) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:50:32.734  INFO 47040 --- [http-nio-8080-exec-8] (98089346124615680) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98089346124615680,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.39081455805892545,"memoryUsage":8.086105346679688,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:50:36.355  INFO 47040 --- [http-nio-8080-exec-6] (98089361328967680) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:50:36.359  INFO 47040 --- [http-nio-8080-exec-6] (98089361328967680) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98089361328967680,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:50:36.515  INFO 47040 --- [http-nio-8080-exec-7] (98089362000056320) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:50:36.518  INFO 47040 --- [http-nio-8080-exec-7] (98089362000056320) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98089362000056320,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09830809114476736,"memoryUsage":8.115859985351562,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:50:37.731  INFO 47040 --- [http-nio-8080-exec-10] (98089367100329984) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:50:37.732  INFO 47040 --- [http-nio-8080-exec-10] (98089367100329984) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98089367100329984,"message":"Full authentication is required to access this resource"}
2024-04-30 18:50:37.735  INFO 47040 --- [http-nio-8080-exec-1] (98089367117107200) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:50:37.737  INFO 47040 --- [http-nio-8080-exec-1] (98089367117107200) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98089367117107200,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09830809114476736,"memoryUsage":8.115859985351562,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:50:41.373  INFO 47040 --- [http-nio-8080-exec-3] (98089382375985152) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:50:41.377  INFO 47040 --- [http-nio-8080-exec-3] (98089382375985152) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98089382375985152,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:50:41.516  INFO 47040 --- [http-nio-8080-exec-4] (98089382975770624) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:50:41.518  INFO 47040 --- [http-nio-8080-exec-4] (98089382975770624) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98089382975770624,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1104600838937346,"memoryUsage":8.111320495605469,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:50:42.732  INFO 47040 --- [http-nio-8080-exec-2] (98089388076044288) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:50:42.734  INFO 47040 --- [http-nio-8080-exec-2] (98089388076044288) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98089388076044288,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1104600838937346,"memoryUsage":8.111320495605469,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:50:46.399  INFO 47040 --- [http-nio-8080-exec-5] (98089403456557056) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:50:46.404  INFO 47040 --- [http-nio-8080-exec-5] (98089403456557056) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98089403456557056,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:50:46.547  INFO 47040 --- [http-nio-8080-exec-9] (98089404077314048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:50:46.548  INFO 47040 --- [http-nio-8080-exec-9] (98089404077314048) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98089404077314048,"message":"Full authentication is required to access this resource"}
2024-04-30 18:50:46.551  INFO 47040 --- [http-nio-8080-exec-8] (98089404094091264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:50:46.554  INFO 47040 --- [http-nio-8080-exec-8] (98089404094091264) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98089404094091264,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.15085095410005156,"memoryUsage":8.105934143066406,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:50:48.544  INFO 47040 --- [http-nio-8080-exec-6] (98089412449144832) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:50:48.546  INFO 47040 --- [http-nio-8080-exec-6] (98089412449144832) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98089412449144832,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.15085095410005156,"memoryUsage":8.105934143066406,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:50:51.357  INFO 47040 --- [http-nio-8080-exec-7] (98089424251916288) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:50:51.361  INFO 47040 --- [http-nio-8080-exec-7] (98089424251916288) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98089424251916288,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:50:51.552  INFO 47040 --- [http-nio-8080-exec-10] (98089425069805568) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:50:51.553  INFO 47040 --- [http-nio-8080-exec-10] (98089425069805568) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98089425069805568,"message":"Full authentication is required to access this resource"}
2024-04-30 18:50:51.555  INFO 47040 --- [http-nio-8080-exec-1] (98089425082388480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:50:51.557  INFO 47040 --- [http-nio-8080-exec-1] (98089425082388480) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98089425082388480,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.06875508543531327,"memoryUsage":8.096675872802734,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:50:53.551  INFO 47040 --- [http-nio-8080-exec-3] (98089433454219264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:50:53.554  INFO 47040 --- [http-nio-8080-exec-3] (98089433454219264) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98089433454219264,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.06875508543531327,"memoryUsage":8.096675872802734,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:50:56.344  INFO 47040 --- [http-nio-8080-exec-4] (98089445168910336) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:50:56.348  INFO 47040 --- [http-nio-8080-exec-4] (98089445168910336) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98089445168910336,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:50:56.552  INFO 47040 --- [http-nio-8080-exec-2] (98089446041325568) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:50:56.554  INFO 47040 --- [http-nio-8080-exec-2] (98089446041325568) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98089446041325568,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.10396846969285131,"memoryUsage":8.134963989257812,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:50:58.546  INFO 47040 --- [http-nio-8080-exec-5] (98089454404767744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:50:58.547  INFO 47040 --- [http-nio-8080-exec-5] (98089454404767744) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98089454404767744,"message":"Full authentication is required to access this resource"}
2024-04-30 18:50:58.549  INFO 47040 --- [http-nio-8080-exec-9] (98089454417350656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:50:58.552  INFO 47040 --- [http-nio-8080-exec-9] (98089454417350656) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98089454417350656,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.10396846969285131,"memoryUsage":8.134963989257812,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:51:01.366  INFO 47040 --- [http-nio-8080-exec-8] (98089466232705024) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:51:01.370  INFO 47040 --- [http-nio-8080-exec-8] (98089466232705024) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98089466232705024,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:51:01.547  INFO 47040 --- [http-nio-8080-exec-6] (98089466991874048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:51:01.550  INFO 47040 --- [http-nio-8080-exec-6] (98089466991874048) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98089466991874048,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.16586869548107824,"memoryUsage":8.168807983398438,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:51:03.547  INFO 47040 --- [http-nio-8080-exec-7] (98089475380482048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:51:03.549  INFO 47040 --- [http-nio-8080-exec-7] (98089475380482048) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98089475380482048,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.16586869548107824,"memoryUsage":8.168807983398438,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:51:06.360  INFO 47040 --- [http-nio-8080-exec-10] (98089487179059200) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:51:06.364  INFO 47040 --- [http-nio-8080-exec-10] (98089487179059200) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98089487179059200,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:51:06.545  INFO 47040 --- [http-nio-8080-exec-1] (98089487955005440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:51:06.546  INFO 47040 --- [http-nio-8080-exec-1] (98089487955005440) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98089487955005440,"message":"Full authentication is required to access this resource"}
2024-04-30 18:51:06.548  INFO 47040 --- [http-nio-8080-exec-3] (98089487967588352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:51:06.551  INFO 47040 --- [http-nio-8080-exec-3] (98089487967588352) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98089487967588352,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.12045621289935303,"memoryUsage":8.178264617919922,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:51:08.551  INFO 47040 --- [http-nio-8080-exec-4] (98089496368779264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:51:08.553  INFO 47040 --- [http-nio-8080-exec-4] (98089496368779264) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98089496368779264,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.12045621289935303,"memoryUsage":8.178264617919922,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:51:11.355  INFO 47040 --- [http-nio-8080-exec-2] (98089508129607680) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:51:11.359  INFO 47040 --- [http-nio-8080-exec-2] (98089508129607680) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98089508129607680,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:51:11.547  INFO 47040 --- [http-nio-8080-exec-5] (98089508934914048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:51:11.549  INFO 47040 --- [http-nio-8080-exec-5] (98089508934914048) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98089508934914048,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.10537343697194998,"memoryUsage":8.187141418457031,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:51:13.542  INFO 47040 --- [http-nio-8080-exec-9] (98089517302550528) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:51:13.542  INFO 47040 --- [http-nio-8080-exec-9] (98089517302550528) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98089517302550528,"message":"Full authentication is required to access this resource"}
2024-04-30 18:51:13.545  INFO 47040 --- [http-nio-8080-exec-8] (98089517315133440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:51:13.547  INFO 47040 --- [http-nio-8080-exec-8] (98089517315133440) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98089517315133440,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.10537343697194998,"memoryUsage":8.187141418457031,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:51:16.122  INFO 47040 --- [http-nio-8080-exec-6] (98089528123854848) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:51:16.125  INFO 47040 --- [http-nio-8080-exec-6] (98089528123854848) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98089528123854848,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.10537343697194998,"memoryUsage":8.187141418457031,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:51:16.432  INFO 47040 --- [http-nio-8080-exec-7] (98089529424089088) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:51:16.437  INFO 47040 --- [http-nio-8080-exec-7] (98089529424089088) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98089529424089088,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:51:21.376  INFO 47040 --- [http-nio-8080-exec-10] (98089550160728064) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:51:21.380  INFO 47040 --- [http-nio-8080-exec-10] (98089550160728064) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98089550160728064,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:51:21.546  INFO 47040 --- [http-nio-8080-exec-1] (98089550873759744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:51:21.547  INFO 47040 --- [http-nio-8080-exec-1] (98089550873759744) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98089550873759744,"message":"Full authentication is required to access this resource"}
2024-04-30 18:51:21.549  INFO 47040 --- [http-nio-8080-exec-3] (98089550886342656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:51:21.551  INFO 47040 --- [http-nio-8080-exec-3] (98089550886342656) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98089550886342656,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.10074161580363589,"memoryUsage":8.234989166259766,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:51:26.356  INFO 47040 --- [http-nio-8080-exec-4] (98089571048361984) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:51:26.359  INFO 47040 --- [http-nio-8080-exec-4] (98089571048361984) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98089571048361984,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:51:26.552  INFO 47040 --- [http-nio-8080-exec-2] (98089571870445568) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:51:26.552  INFO 47040 --- [http-nio-8080-exec-2] (98089571870445568) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98089571870445568,"message":"Full authentication is required to access this resource"}
2024-04-30 18:51:26.554  INFO 47040 --- [http-nio-8080-exec-5] (98089571878834176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:51:26.557  INFO 47040 --- [http-nio-8080-exec-5] (98089571878834176) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98089571878834176,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.10142431268631998,"memoryUsage":8.210498809814453,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:51:31.373  INFO 47040 --- [http-nio-8080-exec-9] (98089592091185152) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:51:31.377  INFO 47040 --- [http-nio-8080-exec-9] (98089592091185152) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98089592091185152,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:51:31.550  INFO 47040 --- [http-nio-8080-exec-8] (98089592833576960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:51:31.552  INFO 47040 --- [http-nio-8080-exec-8] (98089592833576960) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98089592833576960,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.050399630094458026,"memoryUsage":8.207801818847656,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:51:36.398  INFO 47040 --- [http-nio-8080-exec-6] (98089613167562752) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:51:36.401  INFO 47040 --- [http-nio-8080-exec-6] (98089613167562752) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98089613167562752,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:51:36.548  INFO 47040 --- [http-nio-8080-exec-7] (98089613796708352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:51:36.549  INFO 47040 --- [http-nio-8080-exec-7] (98089613796708352) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98089613796708352,"message":"Full authentication is required to access this resource"}
2024-04-30 18:51:36.551  INFO 47040 --- [http-nio-8080-exec-10] (98089613809291264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:51:36.554  INFO 47040 --- [http-nio-8080-exec-10] (98089613809291264) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98089613809291264,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.20325779036827196,"memoryUsage":8.204185485839844,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:51:41.404  INFO 47040 --- [http-nio-8080-exec-1] (98089634164248576) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:51:41.408  INFO 47040 --- [http-nio-8080-exec-1] (98089634164248576) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98089634164248576,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:51:41.555  INFO 47040 --- [http-nio-8080-exec-3] (98089634797588480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:51:41.556  INFO 47040 --- [http-nio-8080-exec-3] (98089634797588480) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98089634797588480,"message":"Full authentication is required to access this resource"}
2024-04-30 18:51:41.558  INFO 47040 --- [http-nio-8080-exec-4] (98089634810171392) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:51:41.561  INFO 47040 --- [http-nio-8080-exec-4] (98089634810171392) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98089634810171392,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.2846075692151384,"memoryUsage":8.220325469970703,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:51:46.371  INFO 47040 --- [http-nio-8080-exec-2] (98089654997356544) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:51:46.375  INFO 47040 --- [http-nio-8080-exec-2] (98089654997356544) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98089654997356544,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:51:46.547  INFO 47040 --- [http-nio-8080-exec-5] (98089655735554048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:51:46.549  INFO 47040 --- [http-nio-8080-exec-5] (98089655735554048) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98089655735554048,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.12402271967925159,"memoryUsage":8.236446380615234,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:51:51.328  INFO 47040 --- [http-nio-8080-exec-9] (98089675788521472) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:51:51.332  INFO 47040 --- [http-nio-8080-exec-9] (98089675788521472) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98089675788521472,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:51:51.551  INFO 47040 --- [http-nio-8080-exec-8] (98089676719656960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:51:51.551  INFO 47040 --- [http-nio-8080-exec-8] (98089676719656960) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98089676719656960,"message":"Full authentication is required to access this resource"}
2024-04-30 18:51:51.554  INFO 47040 --- [http-nio-8080-exec-6] (98089676736434176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:51:51.556  INFO 47040 --- [http-nio-8080-exec-6] (98089676736434176) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98089676736434176,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0605318642453921,"memoryUsage":8.245536804199219,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:51:56.341  INFO 47040 --- [http-nio-8080-exec-7] (98089696814567424) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:51:56.345  INFO 47040 --- [http-nio-8080-exec-7] (98089696814567424) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98089696814567424,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:51:56.550  INFO 47040 --- [http-nio-8080-exec-10] (98089697691176960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:51:56.553  INFO 47040 --- [http-nio-8080-exec-10] (98089697691176960) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98089697691176960,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07487062302574098,"memoryUsage":8.238937377929688,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:52:01.125  INFO 47040 --- [http-nio-8080-exec-1] (98089716880117760) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:52:01.125  INFO 47040 --- [http-nio-8080-exec-1] (98089716880117760) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98089716880117760,"message":"Full authentication is required to access this resource"}
2024-04-30 18:52:01.128  INFO 47040 --- [http-nio-8080-exec-3] (98089716892700672) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:52:01.130  INFO 47040 --- [http-nio-8080-exec-3] (98089716892700672) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98089716892700672,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07487062302574098,"memoryUsage":8.238937377929688,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:52:01.362  INFO 47040 --- [http-nio-8080-exec-4] (98089717874167808) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:52:01.367  INFO 47040 --- [http-nio-8080-exec-4] (98089717874167808) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98089717874167808,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:52:06.408  INFO 47040 --- [http-nio-8080-exec-2] (98089739038625792) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:52:06.412  INFO 47040 --- [http-nio-8080-exec-2] (98089739038625792) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98089739038625792,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:52:06.546  INFO 47040 --- [http-nio-8080-exec-5] (98089739617439744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:52:06.547  INFO 47040 --- [http-nio-8080-exec-5] (98089739617439744) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98089739617439744,"message":"Full authentication is required to access this resource"}
2024-04-30 18:52:06.550  INFO 47040 --- [http-nio-8080-exec-9] (98089739630022656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:52:06.552  INFO 47040 --- [http-nio-8080-exec-9] (98089739630022656) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98089739630022656,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.08427706083750329,"memoryUsage":8.239566802978516,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:52:11.129  INFO 47040 --- [http-nio-8080-exec-8] (98089758839934976) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:52:11.131  INFO 47040 --- [http-nio-8080-exec-8] (98089758839934976) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98089758839934976,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.08427706083750329,"memoryUsage":8.239566802978516,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:52:11.387  INFO 47040 --- [http-nio-8080-exec-6] (98089759922065408) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:52:11.391  INFO 47040 --- [http-nio-8080-exec-6] (98089759922065408) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98089759922065408,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:52:16.342  INFO 47040 --- [http-nio-8080-exec-7] (98089780700647424) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:52:16.345  INFO 47040 --- [http-nio-8080-exec-7] (98089780700647424) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98089780700647424,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:52:16.547  INFO 47040 --- [http-nio-8080-exec-10] (98089781564674048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:52:16.548  INFO 47040 --- [http-nio-8080-exec-10] (98089781564674048) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98089781564674048,"message":"Full authentication is required to access this resource"}
2024-04-30 18:52:16.550  INFO 47040 --- [http-nio-8080-exec-1] (98089781577256960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:52:16.552  INFO 47040 --- [http-nio-8080-exec-1] (98089781577256960) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98089781577256960,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.18355576420092548,"memoryUsage":8.297100067138672,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:52:21.336  INFO 47040 --- [http-nio-8080-exec-3] (98089801651195904) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:52:21.340  INFO 47040 --- [http-nio-8080-exec-3] (98089801651195904) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98089801651195904,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:52:21.551  INFO 47040 --- [http-nio-8080-exec-4] (98089802552971264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:52:21.552  INFO 47040 --- [http-nio-8080-exec-4] (98089802552971264) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98089802552971264,"message":"Full authentication is required to access this resource"}
2024-04-30 18:52:21.555  INFO 47040 --- [http-nio-8080-exec-2] (98089802569748480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:52:21.557  INFO 47040 --- [http-nio-8080-exec-2] (98089802569748480) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98089802569748480,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.12085677489324205,"memoryUsage":8.288898468017578,"networkUpload":0.001953125,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:52:26.344  INFO 47040 --- [http-nio-8080-exec-5] (98089822656270336) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:52:26.347  INFO 47040 --- [http-nio-8080-exec-5] (98089822656270336) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98089822656270336,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:52:26.541  INFO 47040 --- [http-nio-8080-exec-9] (98089823482548224) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:52:26.544  INFO 47040 --- [http-nio-8080-exec-9] (98089823482548224) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98089823482548224,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09744701022550281,"memoryUsage":8.113704681396484,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:52:31.387  INFO 47040 --- [http-nio-8080-exec-8] (98089843808145408) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:52:31.390  INFO 47040 --- [http-nio-8080-exec-8] (98089843808145408) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98089843808145408,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:52:31.547  INFO 47040 --- [http-nio-8080-exec-6] (98089844479234048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:52:31.548  INFO 47040 --- [http-nio-8080-exec-6] (98089844479234048) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98089844479234048,"message":"Full authentication is required to access this resource"}
2024-04-30 18:52:31.551  INFO 47040 --- [http-nio-8080-exec-7] (98089844496011264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:52:31.553  INFO 47040 --- [http-nio-8080-exec-7] (98089844496011264) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98089844496011264,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.11075441412520064,"memoryUsage":8.124282836914062,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:52:36.341  INFO 47040 --- [http-nio-8080-exec-10] (98089864586727424) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:52:36.345  INFO 47040 --- [http-nio-8080-exec-10] (98089864586727424) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98089864586727424,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:52:36.543  INFO 47040 --- [http-nio-8080-exec-1] (98089865433976832) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:52:36.545  INFO 47040 --- [http-nio-8080-exec-1] (98089865433976832) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98089865433976832,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.06352111721239238,"memoryUsage":8.134510040283203,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:52:41.341  INFO 47040 --- [http-nio-8080-exec-3] (98089885558247424) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:52:41.345  INFO 47040 --- [http-nio-8080-exec-3] (98089885558247424) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98089885558247424,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:52:41.556  INFO 47040 --- [http-nio-8080-exec-4] (98089886460022784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:52:41.557  INFO 47040 --- [http-nio-8080-exec-4] (98089886460022784) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98089886460022784,"message":"Full authentication is required to access this resource"}
2024-04-30 18:52:41.559  INFO 47040 --- [http-nio-8080-exec-2] (98089886472605696) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:52:41.562  INFO 47040 --- [http-nio-8080-exec-2] (98089886472605696) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98089886472605696,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.08566398049705425,"memoryUsage":8.130043029785156,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:52:46.124  INFO 47040 --- [http-nio-8080-exec-5] (98089905619603456) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:52:46.126  INFO 47040 --- [http-nio-8080-exec-5] (98089905619603456) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98089905619603456,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.08566398049705425,"memoryUsage":8.130043029785156,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:52:46.364  INFO 47040 --- [http-nio-8080-exec-9] (98089906626236416) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:52:46.367  INFO 47040 --- [http-nio-8080-exec-9] (98089906626236416) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98089906626236416,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:52:51.124  INFO 47040 --- [http-nio-8080-exec-8] (98089926591123456) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:52:51.125  INFO 47040 --- [http-nio-8080-exec-8] (98089926591123456) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98089926591123456,"message":"Full authentication is required to access this resource"}
2024-04-30 18:52:51.128  INFO 47040 --- [http-nio-8080-exec-6] (98089926607900672) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:52:51.130  INFO 47040 --- [http-nio-8080-exec-6] (98089926607900672) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98089926607900672,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.126901888772298,"memoryUsage":8.134735107421875,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:52:51.343  INFO 47040 --- [http-nio-8080-exec-7] (98089927509676032) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:52:51.347  INFO 47040 --- [http-nio-8080-exec-7] (98089927509676032) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98089927509676032,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:52:56.130  INFO 47040 --- [http-nio-8080-exec-10] (98089947587809280) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:52:56.131  INFO 47040 --- [http-nio-8080-exec-10] (98089947587809280) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98089947587809280,"message":"Full authentication is required to access this resource"}
2024-04-30 18:52:56.133  INFO 47040 --- [http-nio-8080-exec-1] (98089947600392192) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:52:56.135  INFO 47040 --- [http-nio-8080-exec-1] (98089947600392192) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98089947600392192,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09676985195154778,"memoryUsage":8.131488800048828,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:52:56.371  INFO 47040 --- [http-nio-8080-exec-3] (98089948598636544) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:52:56.375  INFO 47040 --- [http-nio-8080-exec-3] (98089948598636544) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98089948598636544,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:53:01.128  INFO 47040 --- [http-nio-8080-exec-4] (98089968550940672) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:53:01.130  INFO 47040 --- [http-nio-8080-exec-4] (98089968550940672) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98089968550940672,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07585981002292827,"memoryUsage":8.1319580078125,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:53:01.367  INFO 47040 --- [http-nio-8080-exec-2] (98089969553379328) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:53:01.372  INFO 47040 --- [http-nio-8080-exec-2] (98089969553379328) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98089969553379328,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:53:06.134  INFO 47040 --- [http-nio-8080-exec-5] (98089989547626496) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:53:06.134  INFO 47040 --- [http-nio-8080-exec-5] (98089989547626496) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98089989547626496,"message":"Full authentication is required to access this resource"}
2024-04-30 18:53:06.137  INFO 47040 --- [http-nio-8080-exec-9] (98089989560209408) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:53:06.139  INFO 47040 --- [http-nio-8080-exec-9] (98089989560209408) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98089989560209408,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07485847485847485,"memoryUsage":8.129402160644531,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:53:06.345  INFO 47040 --- [http-nio-8080-exec-8] (98089990432624640) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:53:06.349  INFO 47040 --- [http-nio-8080-exec-8] (98089990432624640) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98089990432624640,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:53:11.354  INFO 47040 --- [http-nio-8080-exec-6] (98090011441893376) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:53:11.358  INFO 47040 --- [http-nio-8080-exec-6] (98090011441893376) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98090011441893376,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:53:11.554  INFO 47040 --- [http-nio-8080-exec-7] (98090012280754176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:53:11.555  INFO 47040 --- [http-nio-8080-exec-7] (98090012280754176) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98090012280754176,"message":"Full authentication is required to access this resource"}
2024-04-30 18:53:11.560  INFO 47040 --- [http-nio-8080-exec-10] (98090012305920000) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:53:11.562  INFO 47040 --- [http-nio-8080-exec-10] (98090012305920000) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98090012305920000,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.11766666666666667,"memoryUsage":8.140335083007812,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:53:16.309  INFO 47040 --- [http-nio-8080-exec-1] (98090032224669696) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:53:16.313  INFO 47040 --- [http-nio-8080-exec-1] (98090032224669696) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98090032224669696,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:53:16.546  INFO 47040 --- [http-nio-8080-exec-3] (98090033218719744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:53:16.548  INFO 47040 --- [http-nio-8080-exec-3] (98090033218719744) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98090033218719744,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0798227675528289,"memoryUsage":8.131584167480469,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:53:21.337  INFO 47040 --- [http-nio-8080-exec-4] (98090053313630208) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:53:21.341  INFO 47040 --- [http-nio-8080-exec-4] (98090053313630208) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98090053313630208,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:53:21.549  INFO 47040 --- [http-nio-8080-exec-2] (98090054202822656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:53:21.549  INFO 47040 --- [http-nio-8080-exec-2] (98090054202822656) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98090054202822656,"message":"Full authentication is required to access this resource"}
2024-04-30 18:53:21.552  INFO 47040 --- [http-nio-8080-exec-5] (98090054215405568) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:53:21.554  INFO 47040 --- [http-nio-8080-exec-5] (98090054215405568) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98090054215405568,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.12292358803986711,"memoryUsage":8.130756378173828,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:53:26.505  INFO 47040 --- [http-nio-8080-exec-9] (98090074989793280) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:53:26.509  INFO 47040 --- [http-nio-8080-exec-9] (98090074989793280) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98090074989793280,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:53:26.551  INFO 47040 --- [http-nio-8080-exec-8] (98090075182731264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:53:26.554  INFO 47040 --- [http-nio-8080-exec-8] (98090075182731264) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98090075182731264,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.14048539805307375,"memoryUsage":8.154884338378906,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:53:31.340  INFO 47040 --- [http-nio-8080-exec-6] (98090095269253120) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:53:31.344  INFO 47040 --- [http-nio-8080-exec-6] (98090095269253120) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98090095269253120,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:53:31.549  INFO 47040 --- [http-nio-8080-exec-7] (98090096145862656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:53:31.550  INFO 47040 --- [http-nio-8080-exec-7] (98090096145862656) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98090096145862656,"message":"Full authentication is required to access this resource"}
2024-04-30 18:53:31.553  INFO 47040 --- [http-nio-8080-exec-10] (98090096162639872) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:53:31.555  INFO 47040 --- [http-nio-8080-exec-10] (98090096162639872) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98090096162639872,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.08900807929934143,"memoryUsage":8.168136596679688,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:53:36.124  INFO 47040 --- [http-nio-8080-exec-1] (98090115334803456) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:53:36.127  INFO 47040 --- [http-nio-8080-exec-1] (98090115334803456) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98090115334803456,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.08900807929934143,"memoryUsage":8.168136596679688,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:53:36.382  INFO 47040 --- [http-nio-8080-exec-3] (98090116416933888) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:53:36.385  INFO 47040 --- [http-nio-8080-exec-3] (98090116416933888) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98090116416933888,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:53:41.545  INFO 47040 --- [http-nio-8080-exec-4] (98090138072125440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:53:41.546  INFO 47040 --- [http-nio-8080-exec-4] (98090138072125440) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98090138072125440,"message":"Full authentication is required to access this resource"}
2024-04-30 18:53:41.549  INFO 47040 --- [http-nio-8080-exec-2] (98090138088902656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:53:41.550  INFO 47040 --- [http-nio-8080-exec-5] (98090138093096960) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:53:41.552  INFO 47040 --- [http-nio-8080-exec-2] (98090138088902656) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98090138088902656,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.3366883649690936,"memoryUsage":8.165359497070312,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:53:41.555  INFO 47040 --- [http-nio-8080-exec-5] (98090138093096960) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98090138093096960,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:53:46.325  INFO 47040 --- [http-nio-8080-exec-9] (98090158120898560) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:53:46.328  INFO 47040 --- [http-nio-8080-exec-9] (98090158120898560) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98090158120898560,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:53:46.546  INFO 47040 --- [http-nio-8080-exec-8] (98090159047839744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:53:46.549  INFO 47040 --- [http-nio-8080-exec-8] (98090159047839744) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98090159047839744,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.06590043525571274,"memoryUsage":8.16641616821289,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:53:51.121  INFO 47040 --- [http-nio-8080-exec-6] (98090178236780544) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:53:51.122  INFO 47040 --- [http-nio-8080-exec-6] (98090178236780544) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98090178236780544,"message":"Full authentication is required to access this resource"}
2024-04-30 18:53:51.124  INFO 47040 --- [http-nio-8080-exec-7] (98090178249363456) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:53:51.126  INFO 47040 --- [http-nio-8080-exec-7] (98090178249363456) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98090178249363456,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.06590043525571274,"memoryUsage":8.16641616821289,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:53:51.344  INFO 47040 --- [http-nio-8080-exec-10] (98090179172110336) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:53:51.348  INFO 47040 --- [http-nio-8080-exec-10] (98090179172110336) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98090179172110336,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:53:56.399  INFO 47040 --- [http-nio-8080-exec-1] (98090200374317056) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:53:56.403  INFO 47040 --- [http-nio-8080-exec-1] (98090200374317056) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98090200374317056,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:53:56.556  INFO 47040 --- [http-nio-8080-exec-3] (98090201032822784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:53:56.557  INFO 47040 --- [http-nio-8080-exec-3] (98090201032822784) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98090201032822784,"message":"Full authentication is required to access this resource"}
2024-04-30 18:53:56.558  INFO 47040 --- [http-nio-8080-exec-4] (98090201041211392) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:53:56.561  INFO 47040 --- [http-nio-8080-exec-4] (98090201041211392) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98090201041211392,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.11454096939795987,"memoryUsage":8.192668914794922,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:54:01.347  INFO 47040 --- [http-nio-8080-exec-2] (98090221127733248) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:54:01.350  INFO 47040 --- [http-nio-8080-exec-2] (98090221127733248) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98090221127733248,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:54:01.549  INFO 47040 --- [http-nio-8080-exec-5] (98090221974982656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:54:01.553  INFO 47040 --- [http-nio-8080-exec-5] (98090221974982656) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98090221974982656,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.10705084745762712,"memoryUsage":8.18423080444336,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:54:06.350  INFO 47040 --- [http-nio-8080-exec-9] (98090242111836160) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:54:06.353  INFO 47040 --- [http-nio-8080-exec-9] (98090242111836160) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98090242111836160,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:54:06.550  INFO 47040 --- [http-nio-8080-exec-8] (98090242950696960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:54:06.551  INFO 47040 --- [http-nio-8080-exec-8] (98090242950696960) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98090242950696960,"message":"Full authentication is required to access this resource"}
2024-04-30 18:54:06.553  INFO 47040 --- [http-nio-8080-exec-6] (98090242963279872) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:54:06.555  INFO 47040 --- [http-nio-8080-exec-6] (98090242963279872) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98090242963279872,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.14898083564705086,"memoryUsage":8.193580627441406,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:54:11.353  INFO 47040 --- [http-nio-8080-exec-7] (98090263095939072) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:54:11.356  INFO 47040 --- [http-nio-8080-exec-7] (98090263095939072) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98090263095939072,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:54:11.554  INFO 47040 --- [http-nio-8080-exec-10] (98090263938994176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:54:11.555  INFO 47040 --- [http-nio-8080-exec-10] (98090263938994176) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98090263938994176,"message":"Full authentication is required to access this resource"}
2024-04-30 18:54:11.557  INFO 47040 --- [http-nio-8080-exec-1] (98090263951577088) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:54:11.560  INFO 47040 --- [http-nio-8080-exec-1] (98090263951577088) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98090263951577088,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.06689711264741766,"memoryUsage":8.189769744873047,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:54:16.422  INFO 47040 --- [http-nio-8080-exec-3] (98090284356866048) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:54:16.426  INFO 47040 --- [http-nio-8080-exec-3] (98090284356866048) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98090284356866048,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:54:16.543  INFO 47040 --- [http-nio-8080-exec-4] (98090284864376832) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:54:16.545  INFO 47040 --- [http-nio-8080-exec-4] (98090284864376832) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98090284864376832,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.11414801192212569,"memoryUsage":8.198982238769531,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:54:21.123  INFO 47040 --- [http-nio-8080-exec-2] (98090304074289152) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:54:21.124  INFO 47040 --- [http-nio-8080-exec-2] (98090304074289152) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98090304074289152,"message":"Full authentication is required to access this resource"}
2024-04-30 18:54:21.126  INFO 47040 --- [http-nio-8080-exec-5] (98090304086872064) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:54:21.128  INFO 47040 --- [http-nio-8080-exec-5] (98090304086872064) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98090304086872064,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.11414801192212569,"memoryUsage":8.198982238769531,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:54:21.365  INFO 47040 --- [http-nio-8080-exec-9] (98090305089310720) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:54:21.368  INFO 47040 --- [http-nio-8080-exec-9] (98090305089310720) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98090305089310720,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:54:26.436  INFO 47040 --- [http-nio-8080-exec-8] (98090326358626304) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:54:26.440  INFO 47040 --- [http-nio-8080-exec-8] (98090326358626304) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98090326358626304,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:54:26.549  INFO 47040 --- [http-nio-8080-exec-6] (98090326832582656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:54:26.551  INFO 47040 --- [http-nio-8080-exec-6] (98090326832582656) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"code":401,"data":null,"id":98090326832582656,"message":"Full authentication is required to access this resource"}
2024-04-30 18:54:26.553  INFO 47040 --- [http-nio-8080-exec-7] (98090326849359872) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:54:26.556  INFO 47040 --- [http-nio-8080-exec-7] (98090326849359872) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98090326849359872,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07860054347826087,"memoryUsage":8.49862289428711,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:54:31.398  INFO 47040 --- [http-nio-8080-exec-10] (98090347170762752) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:54:31.402  INFO 47040 --- [http-nio-8080-exec-10] (98090347170762752) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98090347170762752,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:54:31.551  INFO 47040 --- [http-nio-8080-exec-1] (98090347812491264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:54:31.554  INFO 47040 --- [http-nio-8080-exec-1] (98090347812491264) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98090347812491264,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.19678688524590163,"memoryUsage":8.492546081542969,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:54:36.400  INFO 47040 --- [http-nio-8080-exec-3] (98090368150671360) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:54:36.404  INFO 47040 --- [http-nio-8080-exec-3] (98090368150671360) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98090368150671360,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:54:36.554  INFO 47040 --- [http-nio-8080-exec-4] (98090368796594176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:54:36.555  INFO 47040 --- [http-nio-8080-exec-4] (98090368796594176) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98090368796594176,"message":"Full authentication is required to access this resource"}
2024-04-30 18:54:36.558  INFO 47040 --- [http-nio-8080-exec-2] (98090368813371392) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:54:36.561  INFO 47040 --- [http-nio-8080-exec-2] (98090368813371392) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98090368813371392,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1420274891914564,"memoryUsage":8.56036376953125,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:54:41.390  INFO 47040 --- [http-nio-8080-exec-5] (98090389080248320) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:54:41.394  INFO 47040 --- [http-nio-8080-exec-5] (98090389080248320) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98090389080248320,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:54:41.554  INFO 47040 --- [http-nio-8080-exec-9] (98090389768114176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:54:41.558  INFO 47040 --- [http-nio-8080-exec-9] (98090389768114176) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98090389768114176,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.18732657933793637,"memoryUsage":8.464012145996094,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:54:46.126  INFO 47040 --- [http-nio-8080-exec-8] (98090408944472064) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:54:46.126  INFO 47040 --- [http-nio-8080-exec-8] (98090408944472064) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98090408944472064,"message":"Full authentication is required to access this resource"}
2024-04-30 18:54:46.128  INFO 47040 --- [http-nio-8080-exec-6] (98090408952860672) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:54:46.130  INFO 47040 --- [http-nio-8080-exec-6] (98090408952860672) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98090408952860672,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.18732657933793637,"memoryUsage":8.464012145996094,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:54:46.345  INFO 47040 --- [http-nio-8080-exec-7] (98090409863024640) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:54:46.349  INFO 47040 --- [http-nio-8080-exec-7] (98090409863024640) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98090409863024640,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:54:51.124  INFO 47040 --- [http-nio-8080-exec-10] (98090429907603456) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:54:51.127  INFO 47040 --- [http-nio-8080-exec-10] (98090429907603456) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98090429907603456,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.06237724348120555,"memoryUsage":8.477981567382812,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:54:51.425  INFO 47040 --- [http-nio-8080-exec-1] (98090431170088960) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:54:51.429  INFO 47040 --- [http-nio-8080-exec-1] (98090431170088960) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98090431170088960,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:54:56.366  INFO 47040 --- [http-nio-8080-exec-3] (98090451894145024) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:54:56.371  INFO 47040 --- [http-nio-8080-exec-3] (98090451894145024) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98090451894145024,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:54:56.551  INFO 47040 --- [http-nio-8080-exec-4] (98090452670091264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:54:56.552  INFO 47040 --- [http-nio-8080-exec-4] (98090452670091264) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98090452670091264,"message":"Full authentication is required to access this resource"}
2024-04-30 18:54:56.554  INFO 47040 --- [http-nio-8080-exec-2] (98090452682674176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:54:56.556  INFO 47040 --- [http-nio-8080-exec-2] (98090452682674176) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98090452682674176,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09355828220858896,"memoryUsage":8.508277893066406,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:55:01.338  INFO 47040 --- [http-nio-8080-exec-5] (98090472748224512) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:55:01.341  INFO 47040 --- [http-nio-8080-exec-5] (98090472748224512) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98090472748224512,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:55:01.551  INFO 47040 --- [http-nio-8080-exec-9] (98090473641611264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:55:01.553  INFO 47040 --- [http-nio-8080-exec-9] (98090473641611264) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98090473641611264,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.05735542779844437,"memoryUsage":8.4891357421875,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:55:06.332  INFO 47040 --- [http-nio-8080-exec-8] (98090493694578688) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:55:06.335  INFO 47040 --- [http-nio-8080-exec-8] (98090493694578688) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98090493694578688,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:55:06.556  INFO 47040 --- [http-nio-8080-exec-6] (98090494634102784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:55:06.556  INFO 47040 --- [http-nio-8080-exec-6] (98090494634102784) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98090494634102784,"message":"Full authentication is required to access this resource"}
2024-04-30 18:55:06.558  INFO 47040 --- [http-nio-8080-exec-7] (98090494642491392) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:55:06.560  INFO 47040 --- [http-nio-8080-exec-7] (98090494642491392) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98090494642491392,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09179073897008605,"memoryUsage":8.489849090576172,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:55:11.327  INFO 47040 --- [http-nio-8080-exec-10] (98090514645127168) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:55:11.331  INFO 47040 --- [http-nio-8080-exec-10] (98090514645127168) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98090514645127168,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:55:11.554  INFO 47040 --- [http-nio-8080-exec-1] (98090515597234176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:55:11.556  INFO 47040 --- [http-nio-8080-exec-1] (98090515597234176) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98090515597234176,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.06490319061903463,"memoryUsage":8.49899673461914,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:55:16.395  INFO 47040 --- [http-nio-8080-exec-3] (98090535901859840) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:55:16.398  INFO 47040 --- [http-nio-8080-exec-3] (98090535901859840) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98090535901859840,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:55:16.543  INFO 47040 --- [http-nio-8080-exec-4] (98090536522616832) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:55:16.544  INFO 47040 --- [http-nio-8080-exec-4] (98090536522616832) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98090536522616832,"message":"Full authentication is required to access this resource"}
2024-04-30 18:55:16.545  INFO 47040 --- [http-nio-8080-exec-2] (98090536531005440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:55:16.547  INFO 47040 --- [http-nio-8080-exec-2] (98090536531005440) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98090536531005440,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.12791857912592297,"memoryUsage":8.500118255615234,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:55:21.333  INFO 47040 --- [http-nio-8080-exec-5] (98090556613332992) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:55:21.337  INFO 47040 --- [http-nio-8080-exec-5] (98090556613332992) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98090556613332992,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:55:21.543  INFO 47040 --- [http-nio-8080-exec-9] (98090557494136832) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:55:21.545  INFO 47040 --- [http-nio-8080-exec-9] (98090557494136832) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98090557494136832,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07625077420686807,"memoryUsage":8.504531860351562,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:55:26.406  INFO 47040 --- [http-nio-8080-exec-8] (98090577891037184) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:55:26.409  INFO 47040 --- [http-nio-8080-exec-8] (98090577891037184) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98090577891037184,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:55:26.545  INFO 47040 --- [http-nio-8080-exec-6] (98090578474045440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:55:26.545  INFO 47040 --- [http-nio-8080-exec-6] (98090578474045440) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98090578474045440,"message":"Full authentication is required to access this resource"}
2024-04-30 18:55:26.548  INFO 47040 --- [http-nio-8080-exec-7] (98090578482434048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:55:26.550  INFO 47040 --- [http-nio-8080-exec-7] (98090578482434048) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98090578482434048,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.14587173457064767,"memoryUsage":8.486949920654297,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:55:31.354  INFO 47040 --- [http-nio-8080-exec-10] (98090598644453376) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:55:31.358  INFO 47040 --- [http-nio-8080-exec-10] (98090598644453376) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98090598644453376,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:55:31.548  INFO 47040 --- [http-nio-8080-exec-1] (98090599453954048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:55:31.550  INFO 47040 --- [http-nio-8080-exec-1] (98090599453954048) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98090599453954048,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07067161660479244,"memoryUsage":8.486808776855469,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:55:36.340  INFO 47040 --- [http-nio-8080-exec-3] (98090619557253120) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:55:36.343  INFO 47040 --- [http-nio-8080-exec-3] (98090619557253120) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98090619557253120,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:55:36.545  INFO 47040 --- [http-nio-8080-exec-4] (98090620417085440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:55:36.546  INFO 47040 --- [http-nio-8080-exec-4] (98090620417085440) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98090620417085440,"message":"Full authentication is required to access this resource"}
2024-04-30 18:55:36.548  INFO 47040 --- [http-nio-8080-exec-2] (98090620429668352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:55:36.550  INFO 47040 --- [http-nio-8080-exec-2] (98090620429668352) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98090620429668352,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.08213880925395026,"memoryUsage":8.488716125488281,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:55:41.325  INFO 47040 --- [http-nio-8080-exec-5] (98090640465858560) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:55:41.329  INFO 47040 --- [http-nio-8080-exec-5] (98090640465858560) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98090640465858560,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:55:41.544  INFO 47040 --- [http-nio-8080-exec-9] (98090641384411136) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:55:41.546  INFO 47040 --- [http-nio-8080-exec-9] (98090641384411136) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98090641384411136,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07533831549181984,"memoryUsage":8.488601684570312,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:55:46.315  INFO 47040 --- [http-nio-8080-exec-8] (98090661395435520) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:55:46.319  INFO 47040 --- [http-nio-8080-exec-8] (98090661395435520) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98090661395435520,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:55:46.551  INFO 47040 --- [http-nio-8080-exec-6] (98090662385291264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:55:46.551  INFO 47040 --- [http-nio-8080-exec-6] (98090662385291264) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98090662385291264,"message":"Full authentication is required to access this resource"}
2024-04-30 18:55:46.553  INFO 47040 --- [http-nio-8080-exec-7] (98090662393679872) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:55:46.555  INFO 47040 --- [http-nio-8080-exec-7] (98090662393679872) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98090662393679872,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07638088783463233,"memoryUsage":8.484848022460938,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:55:51.377  INFO 47040 --- [http-nio-8080-exec-10] (98090682627002368) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:55:51.381  INFO 47040 --- [http-nio-8080-exec-10] (98090682627002368) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98090682627002368,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:55:51.544  INFO 47040 --- [http-nio-8080-exec-1] (98090683327451136) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:55:51.546  INFO 47040 --- [http-nio-8080-exec-1] (98090683327451136) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98090683327451136,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0970290564805746,"memoryUsage":8.484699249267578,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:55:56.338  INFO 47040 --- [http-nio-8080-exec-3] (98090703434944512) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:55:56.342  INFO 47040 --- [http-nio-8080-exec-3] (98090703434944512) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98090703434944512,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:56:01.322  INFO 47040 --- [http-nio-8080-exec-4] (98090724339355648) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:56:01.326  INFO 47040 --- [http-nio-8080-exec-4] (98090724339355648) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98090724339355648,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:56:04.549  INFO 47040 --- [http-nio-8080-exec-2] (98090737874374656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:56:04.550  INFO 47040 --- [http-nio-8080-exec-2] (98090737874374656) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98090737874374656,"message":"Full authentication is required to access this resource"}
2024-04-30 18:56:04.552  INFO 47040 --- [http-nio-8080-exec-5] (98090737886957568) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:56:04.554  INFO 47040 --- [http-nio-8080-exec-5] (98090737886957568) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98090737886957568,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07318250793212856,"memoryUsage":8.46773910522461,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:56:06.342  INFO 47040 --- [http-nio-8080-exec-9] (98090745394761728) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:56:06.346  INFO 47040 --- [http-nio-8080-exec-9] (98090745394761728) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98090745394761728,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:56:11.362  INFO 47040 --- [http-nio-8080-exec-8] (98090766450167808) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:56:11.366  INFO 47040 --- [http-nio-8080-exec-8] (98090766450167808) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98090766450167808,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:56:12.634  INFO 47040 --- [http-nio-8080-exec-6] (98090771785322496) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:56:12.635  INFO 47040 --- [http-nio-8080-exec-6] (98090771785322496) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98090771785322496,"message":"Full authentication is required to access this resource"}
2024-04-30 18:56:12.640  INFO 47040 --- [http-nio-8080-exec-7] (98090771810488320) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:56:12.643  INFO 47040 --- [http-nio-8080-exec-7] (98090771810488320) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98090771810488320,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.2616,"memoryUsage":8.481605529785156,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:56:14.226  INFO 47040 --- [http-nio-8080-exec-10] (98090778462654464) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:56:14.229  INFO 47040 --- [http-nio-8080-exec-10] (98090778462654464) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98090778462654464,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.2616,"memoryUsage":8.481605529785156,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:56:16.380  INFO 47040 --- [http-nio-8080-exec-1] (98090787497185280) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:56:16.383  INFO 47040 --- [http-nio-8080-exec-1] (98090787497185280) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98090787497185280,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:56:19.542  INFO 47040 --- [http-nio-8080-exec-3] (98090800759574528) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:56:19.543  INFO 47040 --- [http-nio-8080-exec-3] (98090800759574528) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98090800759574528,"message":"Full authentication is required to access this resource"}
2024-04-30 18:56:19.545  INFO 47040 --- [http-nio-8080-exec-4] (98090800772157440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:56:19.547  INFO 47040 --- [http-nio-8080-exec-4] (98090800772157440) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98090800772157440,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.12691960252935863,"memoryUsage":8.53985595703125,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:56:21.376  INFO 47040 --- [http-nio-8080-exec-2] (98090808451928064) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:56:21.380  INFO 47040 --- [http-nio-8080-exec-2] (98090808451928064) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98090808451928064,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:56:24.237  INFO 47040 --- [http-nio-8080-exec-5] (98090820451831808) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:56:24.240  INFO 47040 --- [http-nio-8080-exec-5] (98090820451831808) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98090820451831808,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1136035681490227,"memoryUsage":8.559009552001953,"networkUpload":0.001953125,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:56:26.370  INFO 47040 --- [http-nio-8080-exec-9] (98090829398282240) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:56:26.374  INFO 47040 --- [http-nio-8080-exec-9] (98090829398282240) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98090829398282240,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:56:29.540  INFO 47040 --- [http-nio-8080-exec-8] (98090842694225920) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:56:29.540  INFO 47040 --- [http-nio-8080-exec-8] (98090842694225920) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98090842694225920,"message":"Full authentication is required to access this resource"}
2024-04-30 18:56:29.542  INFO 47040 --- [http-nio-8080-exec-6] (98090842702614528) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:56:29.545  INFO 47040 --- [http-nio-8080-exec-6] (98090842702614528) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98090842702614528,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.12819504522217853,"memoryUsage":8.463207244873047,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:56:31.612  INFO 47040 --- [http-nio-8080-exec-7] (98090851384823808) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:56:31.615  INFO 47040 --- [http-nio-8080-exec-7] (98090851384823808) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98090851384823808,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:56:34.548  INFO 47040 --- [http-nio-8080-exec-10] (98090863699300352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:56:34.548  INFO 47040 --- [http-nio-8080-exec-10] (98090863699300352) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98090863699300352,"message":"Full authentication is required to access this resource"}
2024-04-30 18:56:34.550  INFO 47040 --- [http-nio-8080-exec-1] (98090863707688960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:56:34.553  INFO 47040 --- [http-nio-8080-exec-1] (98090863707688960) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98090863707688960,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.25268688798662525,"memoryUsage":8.451622009277344,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:56:36.346  INFO 47040 --- [http-nio-8080-exec-3] (98090871240658944) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:56:36.350  INFO 47040 --- [http-nio-8080-exec-3] (98090871240658944) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98090871240658944,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:56:39.551  INFO 47040 --- [http-nio-8080-exec-4] (98090884683403264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:56:39.553  INFO 47040 --- [http-nio-8080-exec-4] (98090884683403264) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98090884683403264,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.057104103085791794,"memoryUsage":8.457176208496094,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:56:41.334  INFO 47040 --- [http-nio-8080-exec-2] (98090892161847296) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:56:41.337  INFO 47040 --- [http-nio-8080-exec-2] (98090892161847296) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98090892161847296,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:56:44.548  INFO 47040 --- [http-nio-8080-exec-5] (98090905642340352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:56:44.549  INFO 47040 --- [http-nio-8080-exec-5] (98090905642340352) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98090905642340352,"message":"Full authentication is required to access this resource"}
2024-04-30 18:56:44.551  INFO 47040 --- [http-nio-8080-exec-9] (98090905654923264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:56:44.553  INFO 47040 --- [http-nio-8080-exec-9] (98090905654923264) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98090905654923264,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.061289233884576445,"memoryUsage":8.435466766357422,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:56:46.325  INFO 47040 --- [http-nio-8080-exec-8] (98090913095618560) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:56:46.329  INFO 47040 --- [http-nio-8080-exec-8] (98090913095618560) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98090913095618560,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:56:49.548  INFO 47040 --- [http-nio-8080-exec-6] (98090926613860352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:56:49.550  INFO 47040 --- [http-nio-8080-exec-6] (98090926613860352) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98090926613860352,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07104428196992689,"memoryUsage":8.431755065917969,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:56:51.362  INFO 47040 --- [http-nio-8080-exec-7] (98090934222327808) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:56:51.366  INFO 47040 --- [http-nio-8080-exec-7] (98090934222327808) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98090934222327808,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:56:54.547  INFO 47040 --- [http-nio-8080-exec-10] (98090947581186048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:56:54.548  INFO 47040 --- [http-nio-8080-exec-10] (98090947581186048) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98090947581186048,"message":"Full authentication is required to access this resource"}
2024-04-30 18:56:54.550  INFO 47040 --- [http-nio-8080-exec-1] (98090947593768960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:56:54.552  INFO 47040 --- [http-nio-8080-exec-1] (98090947593768960) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98090947593768960,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1384184557941059,"memoryUsage":8.441848754882812,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:56:56.338  INFO 47040 --- [http-nio-8080-exec-3] (98090955093184512) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:56:56.341  INFO 47040 --- [http-nio-8080-exec-3] (98090955093184512) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98090955093184512,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:56:59.551  INFO 47040 --- [http-nio-8080-exec-4] (98090968569483264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:56:59.551  INFO 47040 --- [http-nio-8080-exec-4] (98090968569483264) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98090968569483264,"message":"Full authentication is required to access this resource"}
2024-04-30 18:56:59.553  INFO 47040 --- [http-nio-8080-exec-2] (98090968577871872) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:56:59.555  INFO 47040 --- [http-nio-8080-exec-2] (98090968577871872) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98090968577871872,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.06441365326123691,"memoryUsage":8.436962127685547,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:57:01.352  INFO 47040 --- [http-nio-8080-exec-5] (98090976123424768) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:57:01.356  INFO 47040 --- [http-nio-8080-exec-5] (98090976123424768) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98090976123424768,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:57:04.546  INFO 47040 --- [http-nio-8080-exec-9] (98090989520031744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:57:04.548  INFO 47040 --- [http-nio-8080-exec-9] (98090989520031744) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98090989520031744,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0900610467110227,"memoryUsage":8.437355041503906,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:57:06.436  INFO 47040 --- [http-nio-8080-exec-8] (98090997447266304) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:57:06.440  INFO 47040 --- [http-nio-8080-exec-8] (98090997447266304) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98090997447266304,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:57:09.229  INFO 47040 --- [http-nio-8080-exec-6] (98091009161957376) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:57:09.229  INFO 47040 --- [http-nio-8080-exec-6] (98091009161957376) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98091009161957376,"message":"Full authentication is required to access this resource"}
2024-04-30 18:57:09.232  INFO 47040 --- [http-nio-8080-exec-7] (98091009174540288) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:57:09.234  INFO 47040 --- [http-nio-8080-exec-7] (98091009174540288) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98091009174540288,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.10788715405749515,"memoryUsage":8.44827651977539,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:57:09.877  INFO 47040 --- [http-nio-8080-exec-10] (98091011879866368) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:57:09.880  INFO 47040 --- [http-nio-8080-exec-10] (98091011879866368) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98091011879866368,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.10788715405749515,"memoryUsage":8.44827651977539,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:57:11.409  INFO 47040 --- [http-nio-8080-exec-1] (98091018305540096) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:57:11.413  INFO 47040 --- [http-nio-8080-exec-1] (98091018305540096) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98091018305540096,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:57:15.544  INFO 47040 --- [http-nio-8080-exec-3] (98091035648987136) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:57:15.545  INFO 47040 --- [http-nio-8080-exec-3] (98091035648987136) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98091035648987136,"message":"Full authentication is required to access this resource"}
2024-04-30 18:57:15.547  INFO 47040 --- [http-nio-8080-exec-4] (98091035661570048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:57:15.549  INFO 47040 --- [http-nio-8080-exec-4] (98091035661570048) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98091035661570048,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1382769472856019,"memoryUsage":8.485591888427734,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:57:16.375  INFO 47040 --- [http-nio-8080-exec-2] (98091039134453760) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:57:16.378  INFO 47040 --- [http-nio-8080-exec-2] (98091039134453760) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98091039134453760,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:57:20.548  INFO 47040 --- [http-nio-8080-exec-5] (98091056637284352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:57:20.549  INFO 47040 --- [http-nio-8080-exec-5] (98091056637284352) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98091056637284352,"message":"Full authentication is required to access this resource"}
2024-04-30 18:57:20.551  INFO 47040 --- [http-nio-8080-exec-9] (98091056649867264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:57:20.553  INFO 47040 --- [http-nio-8080-exec-9] (98091056649867264) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98091056649867264,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.11092671269251195,"memoryUsage":8.510295867919922,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:57:21.372  INFO 47040 --- [http-nio-8080-exec-8] (98091060093390848) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:57:21.376  INFO 47040 --- [http-nio-8080-exec-8] (98091060093390848) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98091060093390848,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:57:25.549  INFO 47040 --- [http-nio-8080-exec-6] (98091077612998656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:57:25.551  INFO 47040 --- [http-nio-8080-exec-6] (98091077612998656) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98091077612998656,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1323018422605389,"memoryUsage":8.501171112060547,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:57:26.331  INFO 47040 --- [http-nio-8080-exec-7] (98091080892944384) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:57:26.335  INFO 47040 --- [http-nio-8080-exec-7] (98091080892944384) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98091080892944384,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:57:30.547  INFO 47040 --- [http-nio-8080-exec-10] (98091098576130048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:57:30.548  INFO 47040 --- [http-nio-8080-exec-10] (98091098576130048) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98091098576130048,"message":"Full authentication is required to access this resource"}
2024-04-30 18:57:30.550  INFO 47040 --- [http-nio-8080-exec-1] (98091098588712960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:57:30.552  INFO 47040 --- [http-nio-8080-exec-1] (98091098588712960) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98091098588712960,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0718639934976971,"memoryUsage":8.488887786865234,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:57:31.366  INFO 47040 --- [http-nio-8080-exec-3] (98091102011265024) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:57:31.370  INFO 47040 --- [http-nio-8080-exec-3] (98091102011265024) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98091102011265024,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:57:35.541  INFO 47040 --- [http-nio-8080-exec-4] (98091119522484224) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:57:35.543  INFO 47040 --- [http-nio-8080-exec-4] (98091119522484224) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98091119522484224,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07525423728813559,"memoryUsage":8.476337432861328,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:57:36.357  INFO 47040 --- [http-nio-8080-exec-2] (98091122945036288) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:57:36.361  INFO 47040 --- [http-nio-8080-exec-2] (98091122945036288) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98091122945036288,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:57:40.545  INFO 47040 --- [http-nio-8080-exec-5] (98091140510781440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:57:40.545  INFO 47040 --- [http-nio-8080-exec-5] (98091140510781440) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98091140510781440,"message":"Full authentication is required to access this resource"}
2024-04-30 18:57:40.548  INFO 47040 --- [http-nio-8080-exec-9] (98091140523364352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:57:40.550  INFO 47040 --- [http-nio-8080-exec-9] (98091140523364352) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98091140523364352,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.08887987012987013,"memoryUsage":8.480140686035156,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:57:41.470  INFO 47040 --- [http-nio-8080-exec-8] (98091144390512640) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:57:41.474  INFO 47040 --- [http-nio-8080-exec-8] (98091144390512640) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98091144390512640,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:57:45.543  INFO 47040 --- [http-nio-8080-exec-6] (98091161473912832) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:57:45.546  INFO 47040 --- [http-nio-8080-exec-6] (98091161473912832) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98091161473912832,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.25914221218961625,"memoryUsage":8.631267547607422,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:57:46.445  INFO 47040 --- [http-nio-8080-exec-7] (98091165257175040) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:57:46.449  INFO 47040 --- [http-nio-8080-exec-7] (98091165257175040) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98091165257175040,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:57:50.554  INFO 47040 --- [http-nio-8080-exec-10] (98091182491570176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:57:50.554  INFO 47040 --- [http-nio-8080-exec-10] (98091182491570176) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98091182491570176,"message":"Full authentication is required to access this resource"}
2024-04-30 18:57:50.556  INFO 47040 --- [http-nio-8080-exec-1] (98091182499958784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:57:50.558  INFO 47040 --- [http-nio-8080-exec-1] (98091182499958784) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98091182499958784,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.14815568212639002,"memoryUsage":8.949581146240234,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:57:51.359  INFO 47040 --- [http-nio-8080-exec-3] (98091185867984896) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:57:51.363  INFO 47040 --- [http-nio-8080-exec-3] (98091185867984896) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98091185867984896,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:57:55.544  INFO 47040 --- [http-nio-8080-exec-4] (98091203421147136) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:57:55.546  INFO 47040 --- [http-nio-8080-exec-4] (98091203421147136) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98091203421147136,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1480098673244883,"memoryUsage":8.965206146240234,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:57:56.334  INFO 47040 --- [http-nio-8080-exec-2] (98091206734647296) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:57:56.338  INFO 47040 --- [http-nio-8080-exec-2] (98091206734647296) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98091206734647296,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:58:00.541  INFO 47040 --- [http-nio-8080-exec-5] (98091224380084224) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:58:00.542  INFO 47040 --- [http-nio-8080-exec-5] (98091224380084224) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98091224380084224,"message":"Full authentication is required to access this resource"}
2024-04-30 18:58:00.543  INFO 47040 --- [http-nio-8080-exec-9] (98091224388472832) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:58:00.546  INFO 47040 --- [http-nio-8080-exec-9] (98091224388472832) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98091224388472832,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07570783750512926,"memoryUsage":8.970359802246094,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:58:01.377  INFO 47040 --- [http-nio-8080-exec-8] (98091227886522368) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:58:01.381  INFO 47040 --- [http-nio-8080-exec-8] (98091227886522368) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98091227886522368,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:58:05.547  INFO 47040 --- [http-nio-8080-exec-6] (98091245376770048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:58:05.548  INFO 47040 --- [http-nio-8080-exec-6] (98091245376770048) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98091245376770048,"message":"Full authentication is required to access this resource"}
2024-04-30 18:58:05.550  INFO 47040 --- [http-nio-8080-exec-7] (98091245389352960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:58:05.552  INFO 47040 --- [http-nio-8080-exec-7] (98091245389352960) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98091245389352960,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.15709909429941396,"memoryUsage":8.972969055175781,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:58:06.403  INFO 47040 --- [http-nio-8080-exec-10] (98091248967094272) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:58:06.407  INFO 47040 --- [http-nio-8080-exec-10] (98091248967094272) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98091248967094272,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:58:10.541  INFO 47040 --- [http-nio-8080-exec-1] (98091266323124224) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:58:10.543  INFO 47040 --- [http-nio-8080-exec-1] (98091266323124224) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98091266323124224,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.21633820724729816,"memoryUsage":8.975944519042969,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:58:11.358  INFO 47040 --- [http-nio-8080-exec-3] (98091269749870592) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:58:11.362  INFO 47040 --- [http-nio-8080-exec-3] (98091269749870592) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98091269749870592,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:58:16.346  INFO 47040 --- [http-nio-8080-exec-4] (98091290671058944) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:58:16.349  INFO 47040 --- [http-nio-8080-exec-4] (98091290671058944) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98091290671058944,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:58:21.380  INFO 47040 --- [http-nio-8080-exec-2] (98091311785185280) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:58:21.384  INFO 47040 --- [http-nio-8080-exec-2] (98091311785185280) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98091311785185280,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:58:26.367  INFO 47040 --- [http-nio-8080-exec-5] (98091332702179328) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:58:26.370  INFO 47040 --- [http-nio-8080-exec-5] (98091332702179328) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98091332702179328,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:58:31.368  INFO 47040 --- [http-nio-8080-exec-9] (98091353677893632) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:58:31.371  INFO 47040 --- [http-nio-8080-exec-9] (98091353677893632) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98091353677893632,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:58:36.372  INFO 47040 --- [http-nio-8080-exec-8] (98091374666190848) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:58:36.376  INFO 47040 --- [http-nio-8080-exec-8] (98091374666190848) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98091374666190848,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:58:41.391  INFO 47040 --- [http-nio-8080-exec-6] (98091395717402624) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:58:41.395  INFO 47040 --- [http-nio-8080-exec-6] (98091395717402624) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98091395717402624,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:58:46.122  INFO 47040 --- [http-nio-8080-exec-7] (98091415560654848) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:58:46.123  INFO 47040 --- [http-nio-8080-exec-7] (98091415560654848) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98091415560654848,"message":"Full authentication is required to access this resource"}
2024-04-30 18:58:46.125  INFO 47040 --- [http-nio-8080-exec-10] (98091415573237760) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:58:46.129  INFO 47040 --- [http-nio-8080-exec-10] (98091415573237760) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98091415573237760,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.16676729053464814,"memoryUsage":8.9996337890625,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:58:46.439  INFO 47040 --- [http-nio-8080-exec-1] (98091416890249216) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:58:46.444  INFO 47040 --- [http-nio-8080-exec-1] (98091416890249216) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98091416890249216,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:58:50.546  INFO 47040 --- [http-nio-8080-exec-3] (98091434116255744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:58:50.549  INFO 47040 --- [http-nio-8080-exec-3] (98091434116255744) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98091434116255744,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1607414931437278,"memoryUsage":8.980369567871094,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:58:51.481  INFO 47040 --- [http-nio-8080-exec-4] (98091438037929984) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:58:51.485  INFO 47040 --- [http-nio-8080-exec-4] (98091438037929984) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98091438037929984,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:58:55.545  INFO 47040 --- [http-nio-8080-exec-2] (98091455083581440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:58:55.545  INFO 47040 --- [http-nio-8080-exec-2] (98091455083581440) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98091455083581440,"message":"Full authentication is required to access this resource"}
2024-04-30 18:58:55.547  INFO 47040 --- [http-nio-8080-exec-5] (98091455091970048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:58:55.549  INFO 47040 --- [http-nio-8080-exec-5] (98091455091970048) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98091455091970048,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.12194146276418429,"memoryUsage":8.989593505859375,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:58:56.376  INFO 47040 --- [http-nio-8080-exec-9] (98091458569048064) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:58:56.380  INFO 47040 --- [http-nio-8080-exec-9] (98091458569048064) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98091458569048064,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:58:59.877  INFO 47040 --- [http-nio-8080-exec-8] (98091473249112064) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:58:59.879  INFO 47040 --- [http-nio-8080-exec-8] (98091473249112064) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98091473249112064,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.11413329820864067,"memoryUsage":8.98422622680664,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:59:01.359  INFO 47040 --- [http-nio-8080-exec-6] (98091479469264896) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:59:01.362  INFO 47040 --- [http-nio-8080-exec-6] (98091479469264896) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98091479469264896,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:59:04.887  INFO 47040 --- [http-nio-8080-exec-7] (98091494266769408) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:59:04.888  INFO 47040 --- [http-nio-8080-exec-7] (98091494266769408) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98091494266769408,"message":"Full authentication is required to access this resource"}
2024-04-30 18:59:04.890  INFO 47040 --- [http-nio-8080-exec-10] (98091494279352320) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:59:04.892  INFO 47040 --- [http-nio-8080-exec-10] (98091494279352320) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98091494279352320,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07407160477365157,"memoryUsage":8.995357513427734,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:59:06.362  INFO 47040 --- [http-nio-8080-exec-1] (98091500453367808) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:59:06.365  INFO 47040 --- [http-nio-8080-exec-1] (98091500453367808) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98091500453367808,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:59:09.887  INFO 47040 --- [http-nio-8080-exec-3] (98091515238289408) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:59:09.890  INFO 47040 --- [http-nio-8080-exec-3] (98091515238289408) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98091515238289408,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.08767471410419314,"memoryUsage":9.012920379638672,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:59:11.414  INFO 47040 --- [http-nio-8080-exec-4] (98091521642991616) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:59:11.418  INFO 47040 --- [http-nio-8080-exec-4] (98091521642991616) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98091521642991616,"code":200,"data":null,"message":"请求成功"}
2024-04-30 18:59:13.827  INFO 47040 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] (system) o.s.a.r.l.SimpleMessageListenerContainer : Waiting for workers to finish.
2024-04-30 18:59:14.764  INFO 47040 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] (system) o.s.a.r.l.SimpleMessageListenerContainer : Successfully waited for workers to finish.
2024-04-30 18:59:14.788  INFO 47040 --- [SpringApplicationShutdownHook] (system) com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-04-30 18:59:14.792  INFO 47040 --- [SpringApplicationShutdownHook] (system) com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-04-30 18:59:38.766  INFO 52112 --- [main] (system) c.example.MyProjectBackendApplication    : Starting MyProjectBackendApplication using Java 17.0.10 with PID 52112 (E:\k\study-monitor\study_monitor\my-project-backend\target\classes started by k in E:\k\study-monitor\study_monitor)
2024-04-30 18:59:38.767  INFO 52112 --- [main] (system) c.example.MyProjectBackendApplication    : The following 1 profile is active: "dev"
2024-04-30 18:59:39.418  INFO 52112 --- [main] (system) .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-30 18:59:39.420  INFO 52112 --- [main] (system) .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-30 18:59:39.446  INFO 52112 --- [main] (system) .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2024-04-30 18:59:40.060  INFO 52112 --- [main] (system) o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-04-30 18:59:40.069  INFO 52112 --- [main] (system) o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-04-30 18:59:40.069  INFO 52112 --- [main] (system) o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.11]
2024-04-30 18:59:40.165  INFO 52112 --- [main] (system) o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-04-30 18:59:40.165  INFO 52112 --- [main] (system) w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1369 ms
2024-04-30 18:59:40.507  WARN 52112 --- [main] (system) c.b.m.core.metadata.TableInfoHelper      : This primary key of "id" is primitive !不建议如此请使用包装类 in Class: "com.example.entity.dto.ClientDetail"
2024-04-30 18:59:40.833  WARN 52112 --- [main] (system) c.b.m.core.metadata.TableInfoHelper      : This primary key of "id" is primitive !不建议如此请使用包装类 in Class: "com.example.entity.dto.Client"
2024-04-30 18:59:40.895  INFO 52112 --- [main] (system) com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-04-30 18:59:41.076  INFO 52112 --- [main] (system) com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@735167e1
2024-04-30 18:59:41.078  INFO 52112 --- [main] (system) com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-04-30 18:59:41.577  INFO 52112 --- [main] (system) o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@112a50a1, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6258f9d1, org.springframework.security.web.context.SecurityContextHolderFilter@41120e48, org.springframework.security.web.header.HeaderWriterFilter@519e67e, org.springframework.security.web.authentication.logout.LogoutFilter@4280b20b, com.example.filter.JwtAuthenticationFilter@3ec211cc, com.example.filter.RequestLogFilter@240291d9, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@78e4fa1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@ea40c9f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@66f223fa, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3f31892e, org.springframework.security.web.session.SessionManagementFilter@1d5958d3, org.springframework.security.web.access.ExceptionTranslationFilter@42db3ff, org.springframework.security.web.access.intercept.AuthorizationFilter@1c879f07]
2024-04-30 18:59:41.836  WARN 52112 --- [main] (system) ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: org.springframework.amqp.rabbit.core.RabbitAdmin
2024-04-30 18:59:41.882  INFO 52112 --- [main] (system) o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-04-30 18:59:41.885  INFO 52112 --- [main] (system) o.s.a.r.c.CachingConnectionFactory       : Attempting to connect to: [localhost:5672]
2024-04-30 18:59:41.919  INFO 52112 --- [main] (system) o.s.a.r.c.CachingConnectionFactory       : Created new connection: rabbitConnectionFactory#165824f5:0/SimpleConnection@a5df98c [delegate=amqp://guest@127.0.0.1:5672/, localPort=2244]
2024-04-30 18:59:41.954  INFO 52112 --- [main] (system) c.example.MyProjectBackendApplication    : Started MyProjectBackendApplication in 3.577 seconds (process running for 4.168)
2024-04-30 18:59:41.962  INFO 52112 --- [http-nio-8080-exec-2] (system) o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-30 18:59:41.962  INFO 52112 --- [http-nio-8080-exec-2] (system) o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-04-30 18:59:41.963  INFO 52112 --- [http-nio-8080-exec-2] (system) o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-04-30 18:59:42.291  INFO 52112 --- [http-nio-8080-exec-2] (98091651146321920) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:59:42.391  INFO 52112 --- [http-nio-8080-exec-2] (98091651146321920) com.example.filter.RequestLogFilter      : 请求处理耗时: 101ms | 响应结果: {"code":401,"data":null,"id":98091651146321920,"message":"Full authentication is required to access this resource"}
2024-04-30 18:59:42.432  INFO 52112 --- [http-nio-8080-exec-1] (98091651737718784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:59:42.482  INFO 52112 --- [http-nio-8080-exec-1] (98091651737718784) com.example.filter.RequestLogFilter      : 请求处理耗时: 51ms | 响应结果: {"id":98091651737718784,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:59:45.550  INFO 52112 --- [http-nio-8080-exec-3] (98091664819752960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:59:45.554  INFO 52112 --- [http-nio-8080-exec-3] (98091664819752960) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98091664819752960,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:59:50.549  INFO 52112 --- [http-nio-8080-exec-4] (98091685787078656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:59:50.550  INFO 52112 --- [http-nio-8080-exec-4] (98091685787078656) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98091685787078656,"message":"Full authentication is required to access this resource"}
2024-04-30 18:59:50.554  INFO 52112 --- [http-nio-8080-exec-8] (98091685808050176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:59:50.558  INFO 52112 --- [http-nio-8080-exec-8] (98091685808050176) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98091685808050176,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 18:59:55.557  INFO 52112 --- [http-nio-8080-exec-5] (98091706792153088) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 18:59:55.558  INFO 52112 --- [http-nio-8080-exec-5] (98091706792153088) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98091706792153088,"message":"Full authentication is required to access this resource"}
2024-04-30 18:59:55.562  INFO 52112 --- [http-nio-8080-exec-7] (98091706813124608) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 18:59:55.566  INFO 52112 --- [http-nio-8080-exec-7] (98091706813124608) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98091706813124608,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:00:00.556  INFO 52112 --- [http-nio-8080-exec-6] (98091727759478784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:00:00.560  INFO 52112 --- [http-nio-8080-exec-6] (98091727759478784) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98091727759478784,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:00:05.545  INFO 52112 --- [http-nio-8080-exec-9] (98091748684861440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:00:05.546  INFO 52112 --- [http-nio-8080-exec-9] (98091748684861440) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98091748684861440,"message":"Full authentication is required to access this resource"}
2024-04-30 19:00:05.550  INFO 52112 --- [http-nio-8080-exec-10] (98091748705832960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:00:05.554  INFO 52112 --- [http-nio-8080-exec-10] (98091748705832960) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98091748705832960,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:00:10.545  INFO 52112 --- [http-nio-8080-exec-2] (98091769656381440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:00:10.548  INFO 52112 --- [http-nio-8080-exec-2] (98091769656381440) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98091769656381440,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:00:15.557  INFO 52112 --- [http-nio-8080-exec-1] (98091790678233088) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:00:15.558  INFO 52112 --- [http-nio-8080-exec-1] (98091790678233088) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98091790678233088,"message":"Full authentication is required to access this resource"}
2024-04-30 19:00:15.562  INFO 52112 --- [http-nio-8080-exec-3] (98091790699204608) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:00:15.565  INFO 52112 --- [http-nio-8080-exec-3] (98091790699204608) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98091790699204608,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:00:19.590  INFO 52112 --- [http-nio-8080-exec-4] (98091807593861120) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:00:19.593  INFO 52112 --- [http-nio-8080-exec-4] (98091807593861120) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98091807593861120,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:00:24.598  INFO 52112 --- [http-nio-8080-exec-8] (98091828598935552) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:00:24.599  INFO 52112 --- [http-nio-8080-exec-8] (98091828598935552) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98091828598935552,"message":"Full authentication is required to access this resource"}
2024-04-30 19:00:24.603  INFO 52112 --- [http-nio-8080-exec-5] (98091828619907072) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:00:24.606  INFO 52112 --- [http-nio-8080-exec-5] (98091828619907072) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98091828619907072,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:00:30.551  INFO 52112 --- [http-nio-8080-exec-7] (98091853567627264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:00:30.552  INFO 52112 --- [http-nio-8080-exec-7] (98091853567627264) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98091853567627264,"message":"Full authentication is required to access this resource"}
2024-04-30 19:00:30.556  INFO 52112 --- [http-nio-8080-exec-6] (98091853588598784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:00:30.558  INFO 52112 --- [http-nio-8080-exec-6] (98091853588598784) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98091853588598784,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:00:35.544  INFO 52112 --- [http-nio-8080-exec-9] (98091874509787136) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:00:35.548  INFO 52112 --- [http-nio-8080-exec-9] (98091874509787136) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98091874509787136,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:00:40.552  INFO 52112 --- [http-nio-8080-exec-10] (98091895514861568) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:00:40.553  INFO 52112 --- [http-nio-8080-exec-10] (98091895514861568) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98091895514861568,"message":"Full authentication is required to access this resource"}
2024-04-30 19:00:40.557  INFO 52112 --- [http-nio-8080-exec-2] (98091895531638784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:00:40.561  INFO 52112 --- [http-nio-8080-exec-2] (98091895531638784) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98091895531638784,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:00:45.543  INFO 52112 --- [http-nio-8080-exec-3] (98091916448632832) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:00:45.546  INFO 52112 --- [http-nio-8080-exec-3] (98091916448632832) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98091916448632832,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:00:50.558  INFO 52112 --- [http-nio-8080-exec-4] (98091937483067392) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:00:50.559  INFO 52112 --- [http-nio-8080-exec-4] (98091937483067392) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98091937483067392,"message":"Full authentication is required to access this resource"}
2024-04-30 19:00:50.562  INFO 52112 --- [http-nio-8080-exec-8] (98091937499844608) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:00:50.566  INFO 52112 --- [http-nio-8080-exec-8] (98091937499844608) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98091937499844608,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:00:55.551  INFO 52112 --- [http-nio-8080-exec-5] (98091958425227264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:00:55.559  INFO 52112 --- [http-nio-8080-exec-5] (98091958425227264) com.example.filter.RequestLogFilter      : 请求处理耗时: 8ms | 响应结果: {"id":98091958425227264,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:01:00.549  INFO 52112 --- [http-nio-8080-exec-7] (98091979388358656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:01:00.550  INFO 52112 --- [http-nio-8080-exec-7] (98091979388358656) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98091979388358656,"message":"Full authentication is required to access this resource"}
2024-04-30 19:01:00.554  INFO 52112 --- [http-nio-8080-exec-6] (98091979409330176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:01:00.558  INFO 52112 --- [http-nio-8080-exec-6] (98091979409330176) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98091979409330176,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:01:05.546  INFO 52112 --- [http-nio-8080-exec-9] (98092000347295744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:01:05.549  INFO 52112 --- [http-nio-8080-exec-9] (98092000347295744) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98092000347295744,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:01:10.545  INFO 52112 --- [http-nio-8080-exec-10] (98092021310427136) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:01:10.546  INFO 52112 --- [http-nio-8080-exec-10] (98092021310427136) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"code":401,"data":null,"id":98092021310427136,"message":"Full authentication is required to access this resource"}
2024-04-30 19:01:10.549  INFO 52112 --- [http-nio-8080-exec-2] (98092021331398656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:01:10.553  INFO 52112 --- [http-nio-8080-exec-2] (98092021331398656) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98092021331398656,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:01:15.551  INFO 52112 --- [http-nio-8080-exec-1] (98092042311307264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:01:15.552  INFO 52112 --- [http-nio-8080-exec-1] (98092042311307264) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98092042311307264,"message":"Full authentication is required to access this resource"}
2024-04-30 19:01:15.556  INFO 52112 --- [http-nio-8080-exec-3] (98092042332278784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:01:15.559  INFO 52112 --- [http-nio-8080-exec-3] (98092042332278784) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98092042332278784,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:01:20.543  INFO 52112 --- [http-nio-8080-exec-4] (98092063249272832) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:01:20.548  INFO 52112 --- [http-nio-8080-exec-4] (98092063249272832) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98092063249272832,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:02:04.548  INFO 52112 --- [http-nio-8080-exec-8] (98092247819620352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:02:04.549  INFO 52112 --- [http-nio-8080-exec-8] (98092247819620352) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98092247819620352,"message":"Full authentication is required to access this resource"}
2024-04-30 19:02:04.554  INFO 52112 --- [http-nio-8080-exec-5] (98092247844786176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:02:04.557  INFO 52112 --- [http-nio-8080-exec-5] (98092247844786176) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98092247844786176,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:03:04.547  INFO 52112 --- [http-nio-8080-exec-7] (98092499473666048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:03:04.548  INFO 52112 --- [http-nio-8080-exec-7] (98092499473666048) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98092499473666048,"message":"Full authentication is required to access this resource"}
2024-04-30 19:03:04.551  INFO 52112 --- [http-nio-8080-exec-6] (98092499490443264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:03:04.555  INFO 52112 --- [http-nio-8080-exec-6] (98092499490443264) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98092499490443264,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:04:04.549  INFO 52112 --- [http-nio-8080-exec-9] (98092751140294656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:04:04.549  INFO 52112 --- [http-nio-8080-exec-9] (98092751140294656) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98092751140294656,"message":"Full authentication is required to access this resource"}
2024-04-30 19:04:04.552  INFO 52112 --- [http-nio-8080-exec-10] (98092751152877568) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:04:04.557  INFO 52112 --- [http-nio-8080-exec-10] (98092751152877568) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98092751152877568,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:05:03.486  INFO 52112 --- [http-nio-8080-exec-2] (98092998339989504) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:05:03.488  INFO 52112 --- [http-nio-8080-exec-2] (98092998339989504) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"code":401,"data":null,"id":98092998339989504,"message":"Full authentication is required to access this resource"}
2024-04-30 19:05:03.492  INFO 52112 --- [http-nio-8080-exec-1] (98092998365155328) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:05:03.496  INFO 52112 --- [http-nio-8080-exec-1] (98092998365155328) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98092998365155328,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:05:04.584  INFO 52112 --- [http-nio-8080-exec-3] (98093002945335296) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:05:04.587  INFO 52112 --- [http-nio-8080-exec-3] (98093002945335296) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98093002945335296,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:05:09.585  INFO 52112 --- [http-nio-8080-exec-4] (98093023921049600) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:05:09.586  INFO 52112 --- [http-nio-8080-exec-4] (98093023921049600) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98093023921049600,"message":"Full authentication is required to access this resource"}
2024-04-30 19:05:09.590  INFO 52112 --- [http-nio-8080-exec-8] (98093023942021120) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:05:09.594  INFO 52112 --- [http-nio-8080-exec-8] (98093023942021120) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98093023942021120,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:05:14.594  INFO 52112 --- [http-nio-8080-exec-5] (98093044930318336) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:05:14.600  INFO 52112 --- [http-nio-8080-exec-5] (98093044930318336) com.example.filter.RequestLogFilter      : 请求处理耗时: 6ms | 响应结果: {"id":98093044930318336,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:05:19.588  INFO 52112 --- [http-nio-8080-exec-7] (98093065876672512) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:05:19.589  INFO 52112 --- [http-nio-8080-exec-7] (98093065876672512) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98093065876672512,"message":"Full authentication is required to access this resource"}
2024-04-30 19:05:19.593  INFO 52112 --- [http-nio-8080-exec-6] (98093065897644032) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:05:19.596  INFO 52112 --- [http-nio-8080-exec-6] (98093065897644032) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98093065897644032,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:05:24.587  INFO 52112 --- [http-nio-8080-exec-9] (98093086843998208) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:05:24.590  INFO 52112 --- [http-nio-8080-exec-9] (98093086843998208) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98093086843998208,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:05:30.556  INFO 52112 --- [http-nio-8080-exec-10] (98093111879798784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:05:30.557  INFO 52112 --- [http-nio-8080-exec-10] (98093111879798784) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98093111879798784,"message":"Full authentication is required to access this resource"}
2024-04-30 19:05:30.560  INFO 52112 --- [http-nio-8080-exec-2] (98093111896576000) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:05:30.563  INFO 52112 --- [http-nio-8080-exec-2] (98093111896576000) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98093111896576000,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:05:35.545  INFO 52112 --- [http-nio-8080-exec-1] (98093132805181440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:05:35.548  INFO 52112 --- [http-nio-8080-exec-1] (98093132805181440) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98093132805181440,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:05:40.551  INFO 52112 --- [http-nio-8080-exec-3] (98093153801867264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:05:40.552  INFO 52112 --- [http-nio-8080-exec-3] (98093153801867264) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98093153801867264,"message":"Full authentication is required to access this resource"}
2024-04-30 19:05:40.557  INFO 52112 --- [http-nio-8080-exec-4] (98093153827033088) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:05:40.561  INFO 52112 --- [http-nio-8080-exec-4] (98093153827033088) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98093153827033088,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:05:44.595  INFO 52112 --- [http-nio-8080-exec-8] (98093170763632640) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:05:44.598  INFO 52112 --- [http-nio-8080-exec-8] (98093170763632640) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98093170763632640,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:05:50.553  INFO 52112 --- [http-nio-8080-exec-5] (98093195753295872) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:05:50.554  INFO 52112 --- [http-nio-8080-exec-5] (98093195753295872) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98093195753295872,"message":"Full authentication is required to access this resource"}
2024-04-30 19:05:50.557  INFO 52112 --- [http-nio-8080-exec-7] (98093195770073088) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:05:50.560  INFO 52112 --- [http-nio-8080-exec-7] (98093195770073088) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98093195770073088,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:05:54.587  INFO 52112 --- [http-nio-8080-exec-6] (98093212673118208) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:05:54.590  INFO 52112 --- [http-nio-8080-exec-6] (98093212673118208) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98093212673118208,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:06:00.547  INFO 52112 --- [http-nio-8080-exec-9] (98093237671170048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:06:00.552  INFO 52112 --- [http-nio-8080-exec-9] (98093237671170048) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"code":401,"data":null,"id":98093237671170048,"message":"Full authentication is required to access this resource"}
2024-04-30 19:06:00.556  INFO 52112 --- [http-nio-8080-exec-10] (98093237708918784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:06:00.558  INFO 52112 --- [http-nio-8080-exec-10] (98093237708918784) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98093237708918784,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:06:04.585  INFO 52112 --- [http-nio-8080-exec-2] (98093254607769600) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:06:04.588  INFO 52112 --- [http-nio-8080-exec-2] (98093254607769600) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98093254607769600,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:06:10.543  INFO 52112 --- [http-nio-8080-exec-1] (98093279597432832) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:06:10.543  INFO 52112 --- [http-nio-8080-exec-1] (98093279597432832) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98093279597432832,"message":"Full authentication is required to access this resource"}
2024-04-30 19:06:10.546  INFO 52112 --- [http-nio-8080-exec-3] (98093279610015744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:06:10.549  INFO 52112 --- [http-nio-8080-exec-3] (98093279610015744) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98093279610015744,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:06:15.553  INFO 52112 --- [http-nio-8080-exec-4] (98093300610895872) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:06:15.553  INFO 52112 --- [http-nio-8080-exec-4] (98093300610895872) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98093300610895872,"message":"Full authentication is required to access this resource"}
2024-04-30 19:06:15.557  INFO 52112 --- [http-nio-8080-exec-8] (98093300627673088) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:06:15.560  INFO 52112 --- [http-nio-8080-exec-8] (98093300627673088) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98093300627673088,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:06:20.547  INFO 52112 --- [http-nio-8080-exec-5] (98093321557250048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:06:20.551  INFO 52112 --- [http-nio-8080-exec-5] (98093321557250048) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98093321557250048,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:06:25.545  INFO 52112 --- [http-nio-8080-exec-7] (98093342520381440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:06:25.546  INFO 52112 --- [http-nio-8080-exec-7] (98093342520381440) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98093342520381440,"message":"Full authentication is required to access this resource"}
2024-04-30 19:06:25.548  INFO 52112 --- [http-nio-8080-exec-6] (98093342532964352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:06:25.551  INFO 52112 --- [http-nio-8080-exec-6] (98093342532964352) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98093342532964352,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:06:30.546  INFO 52112 --- [http-nio-8080-exec-9] (98093363496095744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:06:30.549  INFO 52112 --- [http-nio-8080-exec-9] (98093363496095744) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98093363496095744,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:06:35.549  INFO 52112 --- [http-nio-8080-exec-10] (98093384480198656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:06:35.550  INFO 52112 --- [http-nio-8080-exec-10] (98093384480198656) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98093384480198656,"message":"Full authentication is required to access this resource"}
2024-04-30 19:06:35.554  INFO 52112 --- [http-nio-8080-exec-2] (98093384501170176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:06:35.557  INFO 52112 --- [http-nio-8080-exec-2] (98093384501170176) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98093384501170176,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:06:40.554  INFO 52112 --- [http-nio-8080-exec-1] (98093405468495872) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:06:40.556  INFO 52112 --- [http-nio-8080-exec-1] (98093405468495872) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98093405468495872,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:06:45.550  INFO 52112 --- [http-nio-8080-exec-3] (98093426427432960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:06:45.550  INFO 52112 --- [http-nio-8080-exec-3] (98093426427432960) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98093426427432960,"message":"Full authentication is required to access this resource"}
2024-04-30 19:06:45.553  INFO 52112 --- [http-nio-8080-exec-4] (98093426440015872) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:06:45.556  INFO 52112 --- [http-nio-8080-exec-4] (98093426440015872) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98093426440015872,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:06:50.555  INFO 52112 --- [http-nio-8080-exec-8] (98093447419924480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:06:50.556  INFO 52112 --- [http-nio-8080-exec-8] (98093447419924480) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98093447419924480,"message":"Full authentication is required to access this resource"}
2024-04-30 19:06:50.559  INFO 52112 --- [http-nio-8080-exec-5] (98093447436701696) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:06:50.561  INFO 52112 --- [http-nio-8080-exec-5] (98093447436701696) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98093447436701696,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:06:55.551  INFO 52112 --- [http-nio-8080-exec-7] (98093468374667264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:06:55.554  INFO 52112 --- [http-nio-8080-exec-7] (98093468374667264) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98093468374667264,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:07:00.554  INFO 52112 --- [http-nio-8080-exec-6] (98093489358770176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:07:00.555  INFO 52112 --- [http-nio-8080-exec-6] (98093489358770176) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98093489358770176,"message":"Full authentication is required to access this resource"}
2024-04-30 19:07:00.558  INFO 52112 --- [http-nio-8080-exec-9] (98093489375547392) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:07:00.560  INFO 52112 --- [http-nio-8080-exec-9] (98093489375547392) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98093489375547392,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:07:05.546  INFO 52112 --- [http-nio-8080-exec-10] (98093510296735744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:07:05.549  INFO 52112 --- [http-nio-8080-exec-10] (98093510296735744) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98093510296735744,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:07:18.806  INFO 52112 --- [http-nio-8080-exec-2] (98093565913206784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:07:18.807  INFO 52112 --- [http-nio-8080-exec-2] (98093565913206784) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98093565913206784,"message":"Full authentication is required to access this resource"}
2024-04-30 19:07:18.813  INFO 52112 --- [http-nio-8080-exec-1] (98093565938372608) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:07:18.816  INFO 52112 --- [http-nio-8080-exec-1] (98093565938372608) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98093565938372608,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:07:20.557  INFO 52112 --- [http-nio-8080-exec-3] (98093573257433088) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:07:20.560  INFO 52112 --- [http-nio-8080-exec-3] (98093573257433088) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98093573257433088,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:07:25.546  INFO 52112 --- [http-nio-8080-exec-4] (98093594182815744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:07:25.547  INFO 52112 --- [http-nio-8080-exec-4] (98093594182815744) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98093594182815744,"message":"Full authentication is required to access this resource"}
2024-04-30 19:07:25.550  INFO 52112 --- [http-nio-8080-exec-8] (98093594199592960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:07:25.552  INFO 52112 --- [http-nio-8080-exec-8] (98093594199592960) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98093594199592960,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:07:30.555  INFO 52112 --- [http-nio-8080-exec-5] (98093615192084480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:07:30.556  INFO 52112 --- [http-nio-8080-exec-5] (98093615192084480) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98093615192084480,"message":"Full authentication is required to access this resource"}
2024-04-30 19:07:30.559  INFO 52112 --- [http-nio-8080-exec-7] (98093615208861696) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:07:30.562  INFO 52112 --- [http-nio-8080-exec-7] (98093615208861696) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98093615208861696,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:07:35.307  INFO 52112 --- [http-nio-8080-exec-6] (98093635123417088) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:07:35.311  INFO 52112 --- [http-nio-8080-exec-6] (98093635123417088) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98093635123417088,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:07:40.555  INFO 52112 --- [http-nio-8080-exec-9] (98093657135124480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:07:40.556  INFO 52112 --- [http-nio-8080-exec-9] (98093657135124480) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98093657135124480,"message":"Full authentication is required to access this resource"}
2024-04-30 19:07:40.559  INFO 52112 --- [http-nio-8080-exec-10] (98093657151901696) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:07:40.562  INFO 52112 --- [http-nio-8080-exec-10] (98093657151901696) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98093657151901696,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:07:45.557  INFO 52112 --- [http-nio-8080-exec-2] (98093678115033088) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:07:45.560  INFO 52112 --- [http-nio-8080-exec-2] (98093678115033088) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98093678115033088,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:07:50.546  INFO 52112 --- [http-nio-8080-exec-1] (98093699040415744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:07:50.547  INFO 52112 --- [http-nio-8080-exec-1] (98093699040415744) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98093699040415744,"message":"Full authentication is required to access this resource"}
2024-04-30 19:07:50.550  INFO 52112 --- [http-nio-8080-exec-3] (98093699057192960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:07:50.553  INFO 52112 --- [http-nio-8080-exec-3] (98093699057192960) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98093699057192960,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:07:55.555  INFO 52112 --- [http-nio-8080-exec-4] (98093720049684480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:07:55.556  INFO 52112 --- [http-nio-8080-exec-4] (98093720049684480) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98093720049684480,"message":"Full authentication is required to access this resource"}
2024-04-30 19:07:55.558  INFO 52112 --- [http-nio-8080-exec-8] (98093720062267392) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:07:55.561  INFO 52112 --- [http-nio-8080-exec-8] (98093720062267392) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98093720062267392,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:08:00.556  INFO 52112 --- [http-nio-8080-exec-5] (98093741025398784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:08:00.559  INFO 52112 --- [http-nio-8080-exec-5] (98093741025398784) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98093741025398784,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:08:05.555  INFO 52112 --- [http-nio-8080-exec-7] (98093761992724480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:08:05.556  INFO 52112 --- [http-nio-8080-exec-7] (98093761992724480) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98093761992724480,"message":"Full authentication is required to access this resource"}
2024-04-30 19:08:05.558  INFO 52112 --- [http-nio-8080-exec-6] (98093762005307392) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:08:05.561  INFO 52112 --- [http-nio-8080-exec-6] (98093762005307392) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98093762005307392,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:08:10.555  INFO 52112 --- [http-nio-8080-exec-9] (98093782964244480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:08:10.558  INFO 52112 --- [http-nio-8080-exec-9] (98093782964244480) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98093782964244480,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:08:15.552  INFO 52112 --- [http-nio-8080-exec-10] (98093803923181568) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:08:15.553  INFO 52112 --- [http-nio-8080-exec-10] (98093803923181568) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98093803923181568,"message":"Full authentication is required to access this resource"}
2024-04-30 19:08:15.556  INFO 52112 --- [http-nio-8080-exec-2] (98093803939958784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 127.0.0.1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:08:15.559  INFO 52112 --- [http-nio-8080-exec-2] (98093803939958784) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98093803939958784,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:08:20.557  INFO 52112 --- [http-nio-8080-exec-1] (98093824915673088) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:08:20.560  INFO 52112 --- [http-nio-8080-exec-1] (98093824915673088) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98093824915673088,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:08:25.547  INFO 52112 --- [http-nio-8080-exec-3] (98093845845250048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:08:25.547  INFO 52112 --- [http-nio-8080-exec-3] (98093845845250048) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98093845845250048,"message":"Full authentication is required to access this resource"}
2024-04-30 19:08:25.550  INFO 52112 --- [http-nio-8080-exec-4] (98093845857832960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:08:25.552  INFO 52112 --- [http-nio-8080-exec-4] (98093845857832960) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98093845857832960,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:08:30.547  INFO 52112 --- [http-nio-8080-exec-8] (98093866816770048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:08:30.550  INFO 52112 --- [http-nio-8080-exec-8] (98093866816770048) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98093866816770048,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:08:35.545  INFO 52112 --- [http-nio-8080-exec-5] (98093887779901440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:08:35.545  INFO 52112 --- [http-nio-8080-exec-5] (98093887779901440) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98093887779901440,"message":"Full authentication is required to access this resource"}
2024-04-30 19:08:35.548  INFO 52112 --- [http-nio-8080-exec-7] (98093887792484352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:08:35.552  INFO 52112 --- [http-nio-8080-exec-7] (98093887792484352) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98093887792484352,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:09:04.548  INFO 52112 --- [http-nio-8080-exec-6] (98094009427300352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:09:04.549  INFO 52112 --- [http-nio-8080-exec-6] (98094009427300352) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98094009427300352,"message":"Full authentication is required to access this resource"}
2024-04-30 19:09:04.552  INFO 52112 --- [http-nio-8080-exec-9] (98094009444077568) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:09:04.554  INFO 52112 --- [http-nio-8080-exec-9] (98094009444077568) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98094009444077568,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:09:16.908  INFO 52112 --- [http-nio-8080-exec-10] (98094061268897792) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:09:16.909  INFO 52112 --- [http-nio-8080-exec-10] (98094061268897792) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98094061268897792,"message":"Full authentication is required to access this resource"}
2024-04-30 19:09:16.913  INFO 52112 --- [http-nio-8080-exec-2] (98094061289869312) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:09:16.916  INFO 52112 --- [http-nio-8080-exec-2] (98094061289869312) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98094061289869312,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:09:20.555  INFO 52112 --- [http-nio-8080-exec-1] (98094076565524480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:09:20.558  INFO 52112 --- [http-nio-8080-exec-1] (98094076565524480) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98094076565524480,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:09:25.551  INFO 52112 --- [http-nio-8080-exec-3] (98094097520267264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:09:25.551  INFO 52112 --- [http-nio-8080-exec-3] (98094097520267264) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98094097520267264,"message":"Full authentication is required to access this resource"}
2024-04-30 19:09:25.554  INFO 52112 --- [http-nio-8080-exec-4] (98094097532850176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:09:25.556  INFO 52112 --- [http-nio-8080-exec-4] (98094097532850176) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98094097532850176,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:09:30.552  INFO 52112 --- [http-nio-8080-exec-8] (98094118495981568) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:09:30.555  INFO 52112 --- [http-nio-8080-exec-8] (98094118495981568) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98094118495981568,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:09:35.548  INFO 52112 --- [http-nio-8080-exec-5] (98094139450724352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:09:35.548  INFO 52112 --- [http-nio-8080-exec-5] (98094139450724352) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98094139450724352,"message":"Full authentication is required to access this resource"}
2024-04-30 19:09:35.551  INFO 52112 --- [http-nio-8080-exec-7] (98094139463307264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:09:35.554  INFO 52112 --- [http-nio-8080-exec-7] (98094139463307264) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98094139463307264,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:09:40.552  INFO 52112 --- [http-nio-8080-exec-6] (98094160439021568) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:09:40.553  INFO 52112 --- [http-nio-8080-exec-6] (98094160439021568) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98094160439021568,"message":"Full authentication is required to access this resource"}
2024-04-30 19:09:40.556  INFO 52112 --- [http-nio-8080-exec-9] (98094160455798784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:09:40.559  INFO 52112 --- [http-nio-8080-exec-9] (98094160455798784) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98094160455798784,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:09:45.547  INFO 52112 --- [http-nio-8080-exec-10] (98094181389570048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:09:45.549  INFO 52112 --- [http-nio-8080-exec-10] (98094181389570048) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98094181389570048,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:09:50.545  INFO 52112 --- [http-nio-8080-exec-2] (98094202352701440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:09:50.546  INFO 52112 --- [http-nio-8080-exec-2] (98094202352701440) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98094202352701440,"message":"Full authentication is required to access this resource"}
2024-04-30 19:09:50.547  INFO 52112 --- [http-nio-8080-exec-1] (98094202361090048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:09:50.550  INFO 52112 --- [http-nio-8080-exec-1] (98094202361090048) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98094202361090048,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:09:55.555  INFO 52112 --- [http-nio-8080-exec-3] (98094223366164480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:09:55.556  INFO 52112 --- [http-nio-8080-exec-3] (98094223366164480) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98094223366164480,"message":"Full authentication is required to access this resource"}
2024-04-30 19:09:55.559  INFO 52112 --- [http-nio-8080-exec-4] (98094223382941696) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:09:55.562  INFO 52112 --- [http-nio-8080-exec-4] (98094223382941696) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98094223382941696,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:10:00.557  INFO 52112 --- [http-nio-8080-exec-8] (98094244346073088) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:10:00.560  INFO 52112 --- [http-nio-8080-exec-8] (98094244346073088) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98094244346073088,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:10:05.555  INFO 52112 --- [http-nio-8080-exec-5] (98094265305010176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:10:05.556  INFO 52112 --- [http-nio-8080-exec-5] (98094265305010176) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"code":401,"data":null,"id":98094265305010176,"message":"Full authentication is required to access this resource"}
2024-04-30 19:10:05.559  INFO 52112 --- [http-nio-8080-exec-7] (98094265325981696) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:10:05.561  INFO 52112 --- [http-nio-8080-exec-7] (98094265325981696) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98094265325981696,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:10:10.550  INFO 52112 --- [http-nio-8080-exec-6] (98094286259752960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:10:10.552  INFO 52112 --- [http-nio-8080-exec-6] (98094286259752960) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98094286259752960,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:10:15.548  INFO 52112 --- [http-nio-8080-exec-9] (98094307218690048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:10:15.549  INFO 52112 --- [http-nio-8080-exec-9] (98094307218690048) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"code":401,"data":null,"id":98094307218690048,"message":"Full authentication is required to access this resource"}
2024-04-30 19:10:15.552  INFO 52112 --- [http-nio-8080-exec-10] (98094307239661568) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:10:15.555  INFO 52112 --- [http-nio-8080-exec-10] (98094307239661568) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98094307239661568,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:11:04.551  INFO 52112 --- [http-nio-8080-exec-2] (98094512756363264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:11:04.552  INFO 52112 --- [http-nio-8080-exec-2] (98094512756363264) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98094512756363264,"message":"Full authentication is required to access this resource"}
2024-04-30 19:11:04.556  INFO 52112 --- [http-nio-8080-exec-1] (98094512777334784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:11:04.559  INFO 52112 --- [http-nio-8080-exec-1] (98094512777334784) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98094512777334784,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:12:04.550  INFO 52112 --- [http-nio-8080-exec-3] (98094764410408960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:12:04.551  INFO 52112 --- [http-nio-8080-exec-3] (98094764410408960) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98094764410408960,"message":"Full authentication is required to access this resource"}
2024-04-30 19:12:04.554  INFO 52112 --- [http-nio-8080-exec-4] (98094764427186176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:12:04.556  INFO 52112 --- [http-nio-8080-exec-4] (98094764427186176) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98094764427186176,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:13:04.545  INFO 52112 --- [http-nio-8080-exec-8] (98095016043483136) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:13:04.545  INFO 52112 --- [http-nio-8080-exec-8] (98095016043483136) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98095016043483136,"message":"Full authentication is required to access this resource"}
2024-04-30 19:13:04.547  INFO 52112 --- [http-nio-8080-exec-5] (98095016056066048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:13:04.550  INFO 52112 --- [http-nio-8080-exec-5] (98095016056066048) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98095016056066048,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:14:04.545  INFO 52112 --- [http-nio-8080-exec-7] (98095267705917440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:14:04.546  INFO 52112 --- [http-nio-8080-exec-7] (98095267705917440) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98095267705917440,"message":"Full authentication is required to access this resource"}
2024-04-30 19:14:04.548  INFO 52112 --- [http-nio-8080-exec-6] (98095267718500352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:14:04.551  INFO 52112 --- [http-nio-8080-exec-6] (98095267718500352) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98095267718500352,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:14:34.143  INFO 52112 --- [http-nio-8080-exec-9] (98095391848927232) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:14:34.144  INFO 52112 --- [http-nio-8080-exec-9] (98095391848927232) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98095391848927232,"message":"Full authentication is required to access this resource"}
2024-04-30 19:14:34.147  INFO 52112 --- [http-nio-8080-exec-10] (98095391865704448) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:14:34.151  INFO 52112 --- [http-nio-8080-exec-10] (98095391865704448) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98095391865704448,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:14:34.591  INFO 52112 --- [http-nio-8080-exec-2] (98095393727975424) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:14:34.593  INFO 52112 --- [http-nio-8080-exec-2] (98095393727975424) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98095393727975424,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:14:36.825  INFO 52112 --- [http-nio-8080-exec-1] (98095403098050560) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:14:36.828  INFO 52112 --- [http-nio-8080-exec-1] (98095403098050560) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98095403098050560,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:14:42.547  INFO 52112 --- [http-nio-8080-exec-3] (98095427097858048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:14:42.548  INFO 52112 --- [http-nio-8080-exec-3] (98095427097858048) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98095427097858048,"message":"Full authentication is required to access this resource"}
2024-04-30 19:14:42.551  INFO 52112 --- [http-nio-8080-exec-4] (98095427114635264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:14:42.554  INFO 52112 --- [http-nio-8080-exec-4] (98095427114635264) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98095427114635264,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:14:47.547  INFO 52112 --- [http-nio-8080-exec-8] (98095448069378048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:14:47.550  INFO 52112 --- [http-nio-8080-exec-8] (98095448069378048) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98095448069378048,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:14:52.553  INFO 52112 --- [http-nio-8080-exec-5] (98095469066063872) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:14:52.554  INFO 52112 --- [http-nio-8080-exec-5] (98095469066063872) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98095469066063872,"message":"Full authentication is required to access this resource"}
2024-04-30 19:14:52.556  INFO 52112 --- [http-nio-8080-exec-7] (98095469078646784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:14:52.559  INFO 52112 --- [http-nio-8080-exec-7] (98095469078646784) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98095469078646784,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:14:52.832  INFO 52112 --- [http-nio-8080-exec-6] (98095470236274688) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/detail" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:14:52.876  INFO 52112 --- [http-nio-8080-exec-6] (98095470236274688) com.example.filter.RequestLogFilter      : 请求处理耗时: 44ms | 响应结果: {"id":98095470236274688,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:14:56.701  INFO 52112 --- [http-nio-8080-exec-9] (98095486464036864) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:14:56.754  INFO 52112 --- [http-nio-8080-exec-9] (98095486464036864) com.example.filter.RequestLogFilter      : 请求处理耗时: 53ms | 响应结果: {"id":98095486464036864,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:14:57.546  INFO 52112 --- [http-nio-8080-exec-10] (98095490008223744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:14:57.549  INFO 52112 --- [http-nio-8080-exec-10] (98095490008223744) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98095490008223744,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.08709506107275625,"memoryUsage":8.730216979980469,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:15:01.372  INFO 52112 --- [http-nio-8080-exec-2] (98095506055630848) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:15:01.376  INFO 52112 --- [http-nio-8080-exec-2] (98095506055630848) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98095506055630848,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:15:01.828  INFO 52112 --- [http-nio-8080-exec-1] (98095507968233472) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:15:01.829  INFO 52112 --- [http-nio-8080-exec-1] (98095507968233472) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98095507968233472,"message":"Full authentication is required to access this resource"}
2024-04-30 19:15:01.831  INFO 52112 --- [http-nio-8080-exec-3] (98095507980816384) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:15:01.833  INFO 52112 --- [http-nio-8080-exec-3] (98095507980816384) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98095507980816384,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.10840269520412207,"memoryUsage":8.748050689697266,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:15:06.352  INFO 52112 --- [http-nio-8080-exec-4] (98095526943264768) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:15:06.357  INFO 52112 --- [http-nio-8080-exec-4] (98095526943264768) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98095526943264768,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:15:06.825  INFO 52112 --- [http-nio-8080-exec-8] (98095528927170560) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:15:06.827  INFO 52112 --- [http-nio-8080-exec-8] (98095528927170560) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98095528927170560,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.100718449234106,"memoryUsage":8.760875701904297,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:15:11.367  INFO 52112 --- [http-nio-8080-exec-5] (98095547977699328) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:15:11.372  INFO 52112 --- [http-nio-8080-exec-5] (98095547977699328) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98095547977699328,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:15:12.543  INFO 52112 --- [http-nio-8080-exec-7] (98095552910200832) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:15:12.544  INFO 52112 --- [http-nio-8080-exec-7] (98095552910200832) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98095552910200832,"message":"Full authentication is required to access this resource"}
2024-04-30 19:15:12.546  INFO 52112 --- [http-nio-8080-exec-6] (98095552922783744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:15:12.549  INFO 52112 --- [http-nio-8080-exec-6] (98095552922783744) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98095552922783744,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.10952256033578174,"memoryUsage":8.73263931274414,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:15:16.362  INFO 52112 --- [http-nio-8080-exec-9] (98095568928247808) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:15:16.367  INFO 52112 --- [http-nio-8080-exec-9] (98095568928247808) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98095568928247808,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:15:16.828  INFO 52112 --- [http-nio-8080-exec-10] (98095570882793472) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:15:16.831  INFO 52112 --- [http-nio-8080-exec-10] (98095570882793472) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98095570882793472,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09949204199119539,"memoryUsage":8.717376708984375,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:15:21.361  INFO 52112 --- [http-nio-8080-exec-2] (98095589895573504) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:15:21.366  INFO 52112 --- [http-nio-8080-exec-2] (98095589895573504) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98095589895573504,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:15:21.829  INFO 52112 --- [http-nio-8080-exec-1] (98095591858507776) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:15:21.829  INFO 52112 --- [http-nio-8080-exec-1] (98095591858507776) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98095591858507776,"message":"Full authentication is required to access this resource"}
2024-04-30 19:15:21.832  INFO 52112 --- [http-nio-8080-exec-3] (98095591871090688) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:15:21.834  INFO 52112 --- [http-nio-8080-exec-3] (98095591871090688) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98095591871090688,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0863818424566088,"memoryUsage":8.717632293701172,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:15:26.330  INFO 52112 --- [http-nio-8080-exec-4] (98095610737070080) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:15:26.335  INFO 52112 --- [http-nio-8080-exec-4] (98095610737070080) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98095610737070080,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:15:26.826  INFO 52112 --- [http-nio-8080-exec-8] (98095612817444864) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:15:26.828  INFO 52112 --- [http-nio-8080-exec-8] (98095612817444864) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98095612817444864,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.08247073946282389,"memoryUsage":8.725288391113281,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:15:31.345  INFO 52112 --- [http-nio-8080-exec-5] (98095631771504640) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:15:31.349  INFO 52112 --- [http-nio-8080-exec-5] (98095631771504640) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98095631771504640,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:15:31.826  INFO 52112 --- [http-nio-8080-exec-7] (98095633788964864) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:15:31.826  INFO 52112 --- [http-nio-8080-exec-7] (98095633788964864) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98095633788964864,"message":"Full authentication is required to access this resource"}
2024-04-30 19:15:31.828  INFO 52112 --- [http-nio-8080-exec-6] (98095633797353472) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:15:31.831  INFO 52112 --- [http-nio-8080-exec-6] (98095633797353472) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98095633797353472,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.08742225293711127,"memoryUsage":8.720207214355469,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:15:36.364  INFO 52112 --- [http-nio-8080-exec-9] (98095652822716416) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:15:36.368  INFO 52112 --- [http-nio-8080-exec-9] (98095652822716416) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98095652822716416,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:15:36.825  INFO 52112 --- [http-nio-8080-exec-10] (98095654756290560) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:15:36.827  INFO 52112 --- [http-nio-8080-exec-10] (98095654756290560) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98095654756290560,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.08854513935191359,"memoryUsage":8.758129119873047,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:15:41.373  INFO 52112 --- [http-nio-8080-exec-2] (98095673831985152) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:15:41.377  INFO 52112 --- [http-nio-8080-exec-2] (98095673831985152) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98095673831985152,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:15:41.826  INFO 52112 --- [http-nio-8080-exec-1] (98095675732004864) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:15:41.827  INFO 52112 --- [http-nio-8080-exec-1] (98095675732004864) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98095675732004864,"message":"Full authentication is required to access this resource"}
2024-04-30 19:15:41.829  INFO 52112 --- [http-nio-8080-exec-3] (98095675744587776) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:15:41.831  INFO 52112 --- [http-nio-8080-exec-3] (98095675744587776) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98095675744587776,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.08491122321955055,"memoryUsage":8.726478576660156,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:15:46.337  INFO 52112 --- [http-nio-8080-exec-4] (98095694652510208) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:15:46.340  INFO 52112 --- [http-nio-8080-exec-4] (98095694652510208) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98095694652510208,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:15:46.827  INFO 52112 --- [http-nio-8080-exec-8] (98095696707719168) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:15:46.830  INFO 52112 --- [http-nio-8080-exec-8] (98095696707719168) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98095696707719168,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.06679966978536049,"memoryUsage":8.727996826171875,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:15:51.338  INFO 52112 --- [http-nio-8080-exec-5] (98095715624030208) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:15:51.341  INFO 52112 --- [http-nio-8080-exec-5] (98095715624030208) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98095715624030208,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:15:51.829  INFO 52112 --- [http-nio-8080-exec-7] (98095717687627776) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:15:51.830  INFO 52112 --- [http-nio-8080-exec-7] (98095717687627776) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98095717687627776,"message":"Full authentication is required to access this resource"}
2024-04-30 19:15:51.832  INFO 52112 --- [http-nio-8080-exec-6] (98095717700210688) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:15:51.835  INFO 52112 --- [http-nio-8080-exec-6] (98095717700210688) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98095717700210688,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0698320238417773,"memoryUsage":8.725028991699219,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:15:56.340  INFO 52112 --- [http-nio-8080-exec-9] (98095736608133120) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:15:56.344  INFO 52112 --- [http-nio-8080-exec-9] (98095736608133120) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98095736608133120,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:15:56.826  INFO 52112 --- [http-nio-8080-exec-10] (98095738646564864) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:15:56.831  INFO 52112 --- [http-nio-8080-exec-10] (98095738646564864) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98095738646564864,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.10442276857295564,"memoryUsage":8.733829498291016,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:16:01.358  INFO 52112 --- [http-nio-8080-exec-2] (98095757655150592) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:16:01.362  INFO 52112 --- [http-nio-8080-exec-2] (98095757655150592) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98095757655150592,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:16:01.827  INFO 52112 --- [http-nio-8080-exec-1] (98095759618084864) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:16:01.827  INFO 52112 --- [http-nio-8080-exec-1] (98095759618084864) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98095759618084864,"message":"Full authentication is required to access this resource"}
2024-04-30 19:16:01.829  INFO 52112 --- [http-nio-8080-exec-3] (98095759630667776) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:16:01.832  INFO 52112 --- [http-nio-8080-exec-3] (98095759630667776) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98095759630667776,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09152839606097396,"memoryUsage":8.749496459960938,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:16:06.361  INFO 52112 --- [http-nio-8080-exec-4] (98095778639253504) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:16:06.365  INFO 52112 --- [http-nio-8080-exec-4] (98095778639253504) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98095778639253504,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:16:06.825  INFO 52112 --- [http-nio-8080-exec-8] (98095780585410560) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:16:06.827  INFO 52112 --- [http-nio-8080-exec-8] (98095780585410560) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98095780585410560,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09081789607436634,"memoryUsage":8.747100830078125,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:16:11.342  INFO 52112 --- [http-nio-8080-exec-5] (98095799531081728) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:16:11.348  INFO 52112 --- [http-nio-8080-exec-5] (98095799531081728) com.example.filter.RequestLogFilter      : 请求处理耗时: 6ms | 响应结果: {"id":98095799531081728,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:16:11.830  INFO 52112 --- [http-nio-8080-exec-7] (98095801577902080) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:16:11.831  INFO 52112 --- [http-nio-8080-exec-7] (98095801577902080) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98095801577902080,"message":"Full authentication is required to access this resource"}
2024-04-30 19:16:11.833  INFO 52112 --- [http-nio-8080-exec-6] (98095801590484992) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:16:11.836  INFO 52112 --- [http-nio-8080-exec-6] (98095801590484992) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98095801590484992,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09653830672212532,"memoryUsage":8.747451782226562,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:16:16.344  INFO 52112 --- [http-nio-8080-exec-9] (98095820510990336) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:16:16.348  INFO 52112 --- [http-nio-8080-exec-9] (98095820510990336) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98095820510990336,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:16:16.834  INFO 52112 --- [http-nio-8080-exec-10] (98095822566199296) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:16:16.835  INFO 52112 --- [http-nio-8080-exec-10] (98095822566199296) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98095822566199296,"message":"Full authentication is required to access this resource"}
2024-04-30 19:16:16.837  INFO 52112 --- [http-nio-8080-exec-2] (98095822578782208) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:16:16.839  INFO 52112 --- [http-nio-8080-exec-2] (98095822578782208) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98095822578782208,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.08795385137427893,"memoryUsage":8.730934143066406,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:16:21.325  INFO 52112 --- [http-nio-8080-exec-1] (98095841402818560) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:16:21.330  INFO 52112 --- [http-nio-8080-exec-1] (98095841402818560) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98095841402818560,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:16:21.830  INFO 52112 --- [http-nio-8080-exec-3] (98095843520942080) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:16:21.832  INFO 52112 --- [http-nio-8080-exec-3] (98095843520942080) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98095843520942080,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07667666303162486,"memoryUsage":8.72311019897461,"networkUpload":0.001953125,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:16:26.344  INFO 52112 --- [http-nio-8080-exec-4] (98095862454030336) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:16:26.347  INFO 52112 --- [http-nio-8080-exec-4] (98095862454030336) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98095862454030336,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:16:26.837  INFO 52112 --- [http-nio-8080-exec-8] (98095864521822208) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:16:26.838  INFO 52112 --- [http-nio-8080-exec-8] (98095864521822208) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98095864521822208,"message":"Full authentication is required to access this resource"}
2024-04-30 19:16:26.840  INFO 52112 --- [http-nio-8080-exec-5] (98095864534405120) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:16:26.842  INFO 52112 --- [http-nio-8080-exec-5] (98095864534405120) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98095864534405120,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.10830591553078628,"memoryUsage":8.746871948242188,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:16:31.341  INFO 52112 --- [http-nio-8080-exec-7] (98095883412967424) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:16:31.345  INFO 52112 --- [http-nio-8080-exec-7] (98095883412967424) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98095883412967424,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:16:31.828  INFO 52112 --- [http-nio-8080-exec-6] (98095885455593472) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:16:31.831  INFO 52112 --- [http-nio-8080-exec-6] (98095885455593472) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98095885455593472,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.08783557608622883,"memoryUsage":8.75278091430664,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:16:36.352  INFO 52112 --- [http-nio-8080-exec-9] (98095904430624768) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:16:36.356  INFO 52112 --- [http-nio-8080-exec-9] (98095904430624768) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98095904430624768,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:16:36.825  INFO 52112 --- [http-nio-8080-exec-10] (98095906414530560) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:16:36.826  INFO 52112 --- [http-nio-8080-exec-10] (98095906414530560) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98095906414530560,"message":"Full authentication is required to access this resource"}
2024-04-30 19:16:36.828  INFO 52112 --- [http-nio-8080-exec-2] (98095906427113472) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:16:36.830  INFO 52112 --- [http-nio-8080-exec-2] (98095906427113472) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98095906427113472,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09213559322033898,"memoryUsage":8.764049530029297,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:16:41.336  INFO 52112 --- [http-nio-8080-exec-1] (98095925335035904) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:16:41.340  INFO 52112 --- [http-nio-8080-exec-1] (98095925335035904) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98095925335035904,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:16:41.825  INFO 52112 --- [http-nio-8080-exec-3] (98095927386050560) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:16:41.828  INFO 52112 --- [http-nio-8080-exec-3] (98095927386050560) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98095927386050560,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.12627084180561204,"memoryUsage":8.762443542480469,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:16:46.343  INFO 52112 --- [http-nio-8080-exec-4] (98095946331721728) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:16:46.346  INFO 52112 --- [http-nio-8080-exec-4] (98095946331721728) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98095946331721728,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:16:47.546  INFO 52112 --- [http-nio-8080-exec-8] (98095951381663744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:16:47.547  INFO 52112 --- [http-nio-8080-exec-8] (98095951381663744) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98095951381663744,"message":"Full authentication is required to access this resource"}
2024-04-30 19:16:47.550  INFO 52112 --- [http-nio-8080-exec-5] (98095951394246656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:16:47.552  INFO 52112 --- [http-nio-8080-exec-5] (98095951394246656) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98095951394246656,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.062125193720099725,"memoryUsage":8.764339447021484,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:16:51.342  INFO 52112 --- [http-nio-8080-exec-7] (98095967299047424) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:16:51.345  INFO 52112 --- [http-nio-8080-exec-7] (98095967299047424) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98095967299047424,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:16:52.551  INFO 52112 --- [http-nio-8080-exec-6] (98095972374155264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:16:52.552  INFO 52112 --- [http-nio-8080-exec-6] (98095972374155264) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98095972374155264,"message":"Full authentication is required to access this resource"}
2024-04-30 19:16:52.554  INFO 52112 --- [http-nio-8080-exec-9] (98095972386738176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:16:52.557  INFO 52112 --- [http-nio-8080-exec-9] (98095972386738176) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98095972386738176,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09367172050098879,"memoryUsage":8.76517105102539,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:16:56.357  INFO 52112 --- [http-nio-8080-exec-10] (98095988337676288) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:16:56.361  INFO 52112 --- [http-nio-8080-exec-10] (98095988337676288) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98095988337676288,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:16:56.825  INFO 52112 --- [http-nio-8080-exec-2] (98095990300610560) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:16:56.828  INFO 52112 --- [http-nio-8080-exec-2] (98095990300610560) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98095990300610560,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07423728813559322,"memoryUsage":8.78054428100586,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:17:01.367  INFO 52112 --- [http-nio-8080-exec-1] (98096009351139328) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:17:01.371  INFO 52112 --- [http-nio-8080-exec-1] (98096009351139328) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096009351139328,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:17:02.545  INFO 52112 --- [http-nio-8080-exec-3] (98096014292029440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:17:02.546  INFO 52112 --- [http-nio-8080-exec-3] (98096014292029440) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98096014292029440,"message":"Full authentication is required to access this resource"}
2024-04-30 19:17:02.548  INFO 52112 --- [http-nio-8080-exec-4] (98096014304612352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:17:02.550  INFO 52112 --- [http-nio-8080-exec-4] (98096014304612352) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98096014304612352,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09486666666666667,"memoryUsage":8.775505065917969,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:17:06.350  INFO 52112 --- [http-nio-8080-exec-8] (98096030251356160) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:17:06.354  INFO 52112 --- [http-nio-8080-exec-8] (98096030251356160) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096030251356160,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:17:07.552  INFO 52112 --- [http-nio-8080-exec-5] (98096035292909568) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:17:07.553  INFO 52112 --- [http-nio-8080-exec-5] (98096035292909568) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98096035292909568,"message":"Full authentication is required to access this resource"}
2024-04-30 19:17:07.555  INFO 52112 --- [http-nio-8080-exec-7] (98096035305492480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:17:07.557  INFO 52112 --- [http-nio-8080-exec-7] (98096035305492480) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98096035305492480,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0927974103048287,"memoryUsage":8.777809143066406,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:17:11.324  INFO 52112 --- [http-nio-8080-exec-6] (98096051113824256) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:17:11.328  INFO 52112 --- [http-nio-8080-exec-6] (98096051113824256) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096051113824256,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:17:12.549  INFO 52112 --- [http-nio-8080-exec-9] (98096056251846656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:17:12.551  INFO 52112 --- [http-nio-8080-exec-9] (98096056251846656) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98096056251846656,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07405115511551155,"memoryUsage":8.77988052368164,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:17:16.376  INFO 52112 --- [http-nio-8080-exec-10] (98096072303448064) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:17:16.380  INFO 52112 --- [http-nio-8080-exec-10] (98096072303448064) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096072303448064,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:17:17.541  INFO 52112 --- [http-nio-8080-exec-2] (98096077189812224) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:17:17.542  INFO 52112 --- [http-nio-8080-exec-2] (98096077189812224) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98096077189812224,"message":"Full authentication is required to access this resource"}
2024-04-30 19:17:17.544  INFO 52112 --- [http-nio-8080-exec-1] (98096077202395136) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:17:17.546  INFO 52112 --- [http-nio-8080-exec-1] (98096077202395136) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98096077202395136,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.06531302876480541,"memoryUsage":8.77874755859375,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:17:21.377  INFO 52112 --- [http-nio-8080-exec-3] (98096093279162368) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:17:21.381  INFO 52112 --- [http-nio-8080-exec-3] (98096093279162368) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096093279162368,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:17:22.093  INFO 52112 --- [http-nio-8080-exec-4] (98096096282284032) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:17:22.097  INFO 52112 --- [http-nio-8080-exec-4] (98096096282284032) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096096282284032,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.11387096774193549,"memoryUsage":8.779281616210938,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:17:26.376  INFO 52112 --- [http-nio-8080-exec-8] (98096114246488064) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:17:26.381  INFO 52112 --- [http-nio-8080-exec-8] (98096114246488064) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98096114246488064,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:17:27.551  INFO 52112 --- [http-nio-8080-exec-5] (98096119174795264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:17:27.551  INFO 52112 --- [http-nio-8080-exec-5] (98096119174795264) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98096119174795264,"message":"Full authentication is required to access this resource"}
2024-04-30 19:17:27.554  INFO 52112 --- [http-nio-8080-exec-7] (98096119183183872) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:17:27.556  INFO 52112 --- [http-nio-8080-exec-7] (98096119183183872) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98096119183183872,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.11696059791516424,"memoryUsage":8.799522399902344,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:17:31.382  INFO 52112 --- [http-nio-8080-exec-6] (98096135243173888) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:17:31.387  INFO 52112 --- [http-nio-8080-exec-6] (98096135243173888) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98096135243173888,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:17:32.551  INFO 52112 --- [http-nio-8080-exec-9] (98096140146315264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:17:32.554  INFO 52112 --- [http-nio-8080-exec-9] (98096140146315264) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98096140146315264,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.16481385729058945,"memoryUsage":9.030467987060547,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:17:36.378  INFO 52112 --- [http-nio-8080-exec-10] (98096156197916672) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:17:36.382  INFO 52112 --- [http-nio-8080-exec-10] (98096156197916672) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096156197916672,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:17:37.548  INFO 52112 --- [http-nio-8080-exec-2] (98096161105252352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:17:37.549  INFO 52112 --- [http-nio-8080-exec-2] (98096161105252352) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98096161105252352,"message":"Full authentication is required to access this resource"}
2024-04-30 19:17:37.551  INFO 52112 --- [http-nio-8080-exec-1] (98096161117835264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:17:37.555  INFO 52112 --- [http-nio-8080-exec-1] (98096161117835264) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096161117835264,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1304664240820377,"memoryUsage":9.030036926269531,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:17:41.397  INFO 52112 --- [http-nio-8080-exec-3] (98096177244934144) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:17:41.401  INFO 52112 --- [http-nio-8080-exec-3] (98096177244934144) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98096177244934144,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:17:42.555  INFO 52112 --- [http-nio-8080-exec-4] (98096182106132480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:17:42.556  INFO 52112 --- [http-nio-8080-exec-4] (98096182106132480) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98096182106132480,"message":"Full authentication is required to access this resource"}
2024-04-30 19:17:42.558  INFO 52112 --- [http-nio-8080-exec-8] (98096182118715392) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:17:42.561  INFO 52112 --- [http-nio-8080-exec-8] (98096182118715392) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98096182118715392,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.12918032786885245,"memoryUsage":9.014472961425781,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:17:46.423  INFO 52112 --- [http-nio-8080-exec-5] (98096198329700352) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:17:46.427  INFO 52112 --- [http-nio-8080-exec-5] (98096198329700352) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096198329700352,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:17:47.547  INFO 52112 --- [http-nio-8080-exec-7] (98096203044098048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:17:47.551  INFO 52112 --- [http-nio-8080-exec-7] (98096203044098048) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096203044098048,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.15577263489149676,"memoryUsage":9.027999877929688,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:17:51.440  INFO 52112 --- [http-nio-8080-exec-6] (98096219372523520) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:17:51.444  INFO 52112 --- [http-nio-8080-exec-6] (98096219372523520) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096219372523520,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:17:52.542  INFO 52112 --- [http-nio-8080-exec-9] (98096223994646528) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:17:52.543  INFO 52112 --- [http-nio-8080-exec-9] (98096223994646528) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98096223994646528,"message":"Full authentication is required to access this resource"}
2024-04-30 19:17:52.545  INFO 52112 --- [http-nio-8080-exec-10] (98096224007229440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:17:52.548  INFO 52112 --- [http-nio-8080-exec-10] (98096224007229440) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98096224007229440,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1664444021083381,"memoryUsage":9.025508880615234,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:17:56.423  INFO 52112 --- [http-nio-8080-exec-2] (98096240272740352) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:17:56.427  INFO 52112 --- [http-nio-8080-exec-2] (98096240272740352) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096240272740352,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:17:57.553  INFO 52112 --- [http-nio-8080-exec-1] (98096245012303872) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:17:57.554  INFO 52112 --- [http-nio-8080-exec-1] (98096245012303872) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98096245012303872,"message":"Full authentication is required to access this resource"}
2024-04-30 19:17:57.556  INFO 52112 --- [http-nio-8080-exec-3] (98096245024886784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:17:57.560  INFO 52112 --- [http-nio-8080-exec-3] (98096245024886784) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096245024886784,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.14720545788506953,"memoryUsage":8.998779296875,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:18:01.324  INFO 52112 --- [http-nio-8080-exec-4] (98096260829024256) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:18:01.328  INFO 52112 --- [http-nio-8080-exec-4] (98096260829024256) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096260829024256,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:18:02.542  INFO 52112 --- [http-nio-8080-exec-8] (98096265937686528) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:18:02.544  INFO 52112 --- [http-nio-8080-exec-8] (98096265937686528) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98096265937686528,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.06737516179576265,"memoryUsage":8.9969482421875,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:18:06.337  INFO 52112 --- [http-nio-8080-exec-5] (98096281855070208) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:18:06.341  INFO 52112 --- [http-nio-8080-exec-5] (98096281855070208) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096281855070208,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:18:07.542  INFO 52112 --- [http-nio-8080-exec-7] (98096286909206528) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:18:07.543  INFO 52112 --- [http-nio-8080-exec-7] (98096286909206528) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98096286909206528,"message":"Full authentication is required to access this resource"}
2024-04-30 19:18:07.545  INFO 52112 --- [http-nio-8080-exec-6] (98096286921789440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:18:07.547  INFO 52112 --- [http-nio-8080-exec-6] (98096286921789440) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98096286921789440,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.055411844792375764,"memoryUsage":8.97037124633789,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:18:11.317  INFO 52112 --- [http-nio-8080-exec-9] (98096302742704128) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:18:11.320  INFO 52112 --- [http-nio-8080-exec-9] (98096302742704128) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98096302742704128,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:18:12.553  INFO 52112 --- [http-nio-8080-exec-10] (98096307926863872) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:18:12.553  INFO 52112 --- [http-nio-8080-exec-10] (98096307926863872) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98096307926863872,"message":"Full authentication is required to access this resource"}
2024-04-30 19:18:12.555  INFO 52112 --- [http-nio-8080-exec-2] (98096307935252480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:18:12.557  INFO 52112 --- [http-nio-8080-exec-2] (98096307935252480) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98096307935252480,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.10189139719341062,"memoryUsage":8.909645080566406,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:18:16.371  INFO 52112 --- [http-nio-8080-exec-1] (98096323940716544) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:18:16.375  INFO 52112 --- [http-nio-8080-exec-1] (98096323940716544) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096323940716544,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:18:17.548  INFO 52112 --- [http-nio-8080-exec-3] (98096328877412352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:18:17.550  INFO 52112 --- [http-nio-8080-exec-3] (98096328877412352) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98096328877412352,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.11929488931402023,"memoryUsage":8.972797393798828,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:18:21.332  INFO 52112 --- [http-nio-8080-exec-4] (98096344748658688) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:18:21.336  INFO 52112 --- [http-nio-8080-exec-4] (98096344748658688) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096344748658688,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:18:22.551  INFO 52112 --- [http-nio-8080-exec-8] (98096349861515264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:18:22.552  INFO 52112 --- [http-nio-8080-exec-8] (98096349861515264) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98096349861515264,"message":"Full authentication is required to access this resource"}
2024-04-30 19:18:22.554  INFO 52112 --- [http-nio-8080-exec-5] (98096349874098176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:18:22.556  INFO 52112 --- [http-nio-8080-exec-5] (98096349874098176) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98096349874098176,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.05938580435224731,"memoryUsage":8.970512390136719,"networkUpload":0.001953125,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:18:26.322  INFO 52112 --- [http-nio-8080-exec-7] (98096365678235648) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:18:26.326  INFO 52112 --- [http-nio-8080-exec-7] (98096365678235648) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096365678235648,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:18:31.375  INFO 52112 --- [http-nio-8080-exec-6] (98096386872053760) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:18:31.379  INFO 52112 --- [http-nio-8080-exec-6] (98096386872053760) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096386872053760,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:18:36.333  INFO 52112 --- [http-nio-8080-exec-9] (98096407667412992) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:18:36.337  INFO 52112 --- [http-nio-8080-exec-9] (98096407667412992) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096407667412992,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:18:41.330  INFO 52112 --- [http-nio-8080-exec-10] (98096428626350080) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:18:41.334  INFO 52112 --- [http-nio-8080-exec-10] (98096428626350080) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096428626350080,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:18:46.325  INFO 52112 --- [http-nio-8080-exec-2] (98096449576898560) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:18:46.329  INFO 52112 --- [http-nio-8080-exec-2] (98096449576898560) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096449576898560,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:18:51.320  INFO 52112 --- [http-nio-8080-exec-1] (98096470527447040) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:18:51.324  INFO 52112 --- [http-nio-8080-exec-1] (98096470527447040) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096470527447040,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:18:56.324  INFO 52112 --- [http-nio-8080-exec-3] (98096491515744256) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:18:56.328  INFO 52112 --- [http-nio-8080-exec-3] (98096491515744256) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096491515744256,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:19:01.333  INFO 52112 --- [http-nio-8080-exec-4] (98096512525012992) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:19:01.336  INFO 52112 --- [http-nio-8080-exec-4] (98096512525012992) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98096512525012992,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:19:04.547  INFO 52112 --- [http-nio-8080-exec-8] (98096526005506048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:19:04.548  INFO 52112 --- [http-nio-8080-exec-8] (98096526005506048) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98096526005506048,"message":"Full authentication is required to access this resource"}
2024-04-30 19:19:04.551  INFO 52112 --- [http-nio-8080-exec-5] (98096526022283264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:19:04.553  INFO 52112 --- [http-nio-8080-exec-5] (98096526022283264) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98096526022283264,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0753693913514979,"memoryUsage":8.981395721435547,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:19:06.325  INFO 52112 --- [http-nio-8080-exec-7] (98096533462978560) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:19:06.329  INFO 52112 --- [http-nio-8080-exec-7] (98096533462978560) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096533462978560,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:19:11.330  INFO 52112 --- [http-nio-8080-exec-6] (98096554455470080) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:19:11.335  INFO 52112 --- [http-nio-8080-exec-6] (98096554455470080) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98096554455470080,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:19:16.444  INFO 52112 --- [http-nio-8080-exec-9] (98096575905140736) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:19:16.447  INFO 52112 --- [http-nio-8080-exec-9] (98096575905140736) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98096575905140736,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:19:21.323  INFO 52112 --- [http-nio-8080-exec-10] (98096596369149952) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:19:21.327  INFO 52112 --- [http-nio-8080-exec-10] (98096596369149952) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096596369149952,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:19:26.350  INFO 52112 --- [http-nio-8080-exec-2] (98096617453916160) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:19:26.354  INFO 52112 --- [http-nio-8080-exec-2] (98096617453916160) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096617453916160,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:19:31.343  INFO 52112 --- [http-nio-8080-exec-1] (98096638396076032) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:19:31.347  INFO 52112 --- [http-nio-8080-exec-1] (98096638396076032) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096638396076032,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:19:36.382  INFO 52112 --- [http-nio-8080-exec-3] (98096659531173888) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:19:36.385  INFO 52112 --- [http-nio-8080-exec-3] (98096659531173888) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98096659531173888,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:19:41.353  INFO 52112 --- [http-nio-8080-exec-4] (98096680381059072) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:19:41.356  INFO 52112 --- [http-nio-8080-exec-4] (98096680381059072) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98096680381059072,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:19:46.319  INFO 52112 --- [http-nio-8080-exec-8] (98096701209972736) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:19:46.323  INFO 52112 --- [http-nio-8080-exec-8] (98096701209972736) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096701209972736,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:19:51.339  INFO 52112 --- [http-nio-8080-exec-5] (98096722265378816) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:19:51.343  INFO 52112 --- [http-nio-8080-exec-5] (98096722265378816) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096722265378816,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:19:56.332  INFO 52112 --- [http-nio-8080-exec-7] (98096743207538688) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:19:56.335  INFO 52112 --- [http-nio-8080-exec-7] (98096743207538688) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98096743207538688,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:20:01.330  INFO 52112 --- [http-nio-8080-exec-6] (98096764170670080) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:20:01.334  INFO 52112 --- [http-nio-8080-exec-6] (98096764170670080) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096764170670080,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:20:04.542  INFO 52112 --- [http-nio-8080-exec-9] (98096777642774528) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:20:04.543  INFO 52112 --- [http-nio-8080-exec-9] (98096777642774528) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98096777642774528,"message":"Full authentication is required to access this resource"}
2024-04-30 19:20:04.545  INFO 52112 --- [http-nio-8080-exec-10] (98096777655357440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:20:04.548  INFO 52112 --- [http-nio-8080-exec-10] (98096777655357440) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98096777655357440,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0787369001654716,"memoryUsage":9.306781768798828,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:20:06.328  INFO 52112 --- [http-nio-8080-exec-2] (98096785133801472) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:20:06.331  INFO 52112 --- [http-nio-8080-exec-2] (98096785133801472) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98096785133801472,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:20:11.348  INFO 52112 --- [http-nio-8080-exec-1] (98096806189207552) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:20:11.351  INFO 52112 --- [http-nio-8080-exec-1] (98096806189207552) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98096806189207552,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:20:16.331  INFO 52112 --- [http-nio-8080-exec-3] (98096827089424384) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:20:16.335  INFO 52112 --- [http-nio-8080-exec-3] (98096827089424384) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096827089424384,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:20:21.340  INFO 52112 --- [http-nio-8080-exec-4] (98096848098693120) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:20:21.344  INFO 52112 --- [http-nio-8080-exec-4] (98096848098693120) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096848098693120,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:20:26.329  INFO 52112 --- [http-nio-8080-exec-8] (98096869024075776) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:20:26.333  INFO 52112 --- [http-nio-8080-exec-8] (98096869024075776) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096869024075776,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:20:31.350  INFO 52112 --- [http-nio-8080-exec-5] (98096890083676160) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:20:31.354  INFO 52112 --- [http-nio-8080-exec-5] (98096890083676160) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096890083676160,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:20:36.339  INFO 52112 --- [http-nio-8080-exec-7] (98096911009058816) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:20:36.342  INFO 52112 --- [http-nio-8080-exec-7] (98096911009058816) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98096911009058816,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:20:41.327  INFO 52112 --- [http-nio-8080-exec-6] (98096931930247168) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:20:41.331  INFO 52112 --- [http-nio-8080-exec-6] (98096931930247168) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096931930247168,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:20:46.331  INFO 52112 --- [http-nio-8080-exec-9] (98096952918544384) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:20:46.335  INFO 52112 --- [http-nio-8080-exec-9] (98096952918544384) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096952918544384,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:20:51.325  INFO 52112 --- [http-nio-8080-exec-10] (98096973864898560) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:20:51.329  INFO 52112 --- [http-nio-8080-exec-10] (98096973864898560) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98096973864898560,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:20:56.308  INFO 52112 --- [http-nio-8080-exec-2] (98096994765115392) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:20:56.311  INFO 52112 --- [http-nio-8080-exec-2] (98096994765115392) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98096994765115392,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:21:01.337  INFO 52112 --- [http-nio-8080-exec-1] (98097015858270208) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:21:01.340  INFO 52112 --- [http-nio-8080-exec-1] (98097015858270208) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98097015858270208,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:21:04.548  INFO 52112 --- [http-nio-8080-exec-3] (98097029326180352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:21:04.549  INFO 52112 --- [http-nio-8080-exec-3] (98097029326180352) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98097029326180352,"message":"Full authentication is required to access this resource"}
2024-04-30 19:21:04.551  INFO 52112 --- [http-nio-8080-exec-4] (98097029338763264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:21:04.554  INFO 52112 --- [http-nio-8080-exec-4] (98097029338763264) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98097029338763264,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.058080461348345463,"memoryUsage":9.562854766845703,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:21:06.348  INFO 52112 --- [http-nio-8080-exec-8] (98097036875927552) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:21:06.352  INFO 52112 --- [http-nio-8080-exec-8] (98097036875927552) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98097036875927552,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:21:11.336  INFO 52112 --- [http-nio-8080-exec-5] (98097057797115904) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:21:11.340  INFO 52112 --- [http-nio-8080-exec-5] (98097057797115904) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98097057797115904,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:21:16.363  INFO 52112 --- [http-nio-8080-exec-7] (98097078881882112) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:21:16.367  INFO 52112 --- [http-nio-8080-exec-7] (98097078881882112) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98097078881882112,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:21:21.344  INFO 52112 --- [http-nio-8080-exec-6] (98097099773710336) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:21:21.347  INFO 52112 --- [http-nio-8080-exec-6] (98097099773710336) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98097099773710336,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:21:26.330  INFO 52112 --- [http-nio-8080-exec-9] (98097120686510080) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:21:26.334  INFO 52112 --- [http-nio-8080-exec-9] (98097120686510080) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98097120686510080,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:21:31.340  INFO 52112 --- [http-nio-8080-exec-10] (98097141699973120) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:21:31.343  INFO 52112 --- [http-nio-8080-exec-10] (98097141699973120) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98097141699973120,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:21:36.328  INFO 52112 --- [http-nio-8080-exec-2] (98097162621161472) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:21:36.332  INFO 52112 --- [http-nio-8080-exec-2] (98097162621161472) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98097162621161472,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:21:41.342  INFO 52112 --- [http-nio-8080-exec-1] (98097183651401728) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:21:41.346  INFO 52112 --- [http-nio-8080-exec-1] (98097183651401728) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98097183651401728,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:21:46.345  INFO 52112 --- [http-nio-8080-exec-3] (98097204635504640) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:21:46.349  INFO 52112 --- [http-nio-8080-exec-3] (98097204635504640) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98097204635504640,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:21:51.327  INFO 52112 --- [http-nio-8080-exec-4] (98097225531527168) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:21:51.331  INFO 52112 --- [http-nio-8080-exec-4] (98097225531527168) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98097225531527168,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:21:56.327  INFO 52112 --- [http-nio-8080-exec-8] (98097246503047168) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:21:56.330  INFO 52112 --- [http-nio-8080-exec-8] (98097246503047168) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98097246503047168,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:22:01.337  INFO 52112 --- [http-nio-8080-exec-5] (98097267512315904) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:22:01.340  INFO 52112 --- [http-nio-8080-exec-5] (98097267512315904) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98097267512315904,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:22:04.555  INFO 52112 --- [http-nio-8080-exec-7] (98097281013780480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:22:04.555  INFO 52112 --- [http-nio-8080-exec-7] (98097281013780480) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98097281013780480,"message":"Full authentication is required to access this resource"}
2024-04-30 19:22:04.557  INFO 52112 --- [http-nio-8080-exec-6] (98097281022169088) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:22:04.559  INFO 52112 --- [http-nio-8080-exec-6] (98097281022169088) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98097281022169088,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07938469990385937,"memoryUsage":9.671485900878906,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:22:06.354  INFO 52112 --- [http-nio-8080-exec-9] (98097288559333376) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:22:06.358  INFO 52112 --- [http-nio-8080-exec-9] (98097288559333376) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98097288559333376,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:22:11.519  INFO 52112 --- [http-nio-8080-exec-10] (98097310222913536) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:22:11.524  INFO 52112 --- [http-nio-8080-exec-10] (98097310222913536) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98097310222913536,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:22:16.394  INFO 52112 --- [http-nio-8080-exec-2] (98097330670145536) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:22:16.398  INFO 52112 --- [http-nio-8080-exec-2] (98097330670145536) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98097330670145536,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:22:21.358  INFO 52112 --- [http-nio-8080-exec-1] (98097351490670592) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:22:21.362  INFO 52112 --- [http-nio-8080-exec-1] (98097351490670592) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98097351490670592,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:22:26.348  INFO 52112 --- [http-nio-8080-exec-3] (98097372420247552) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:22:26.351  INFO 52112 --- [http-nio-8080-exec-3] (98097372420247552) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98097372420247552,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:22:31.388  INFO 52112 --- [http-nio-8080-exec-4] (98097393559539712) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:22:31.393  INFO 52112 --- [http-nio-8080-exec-4] (98097393559539712) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98097393559539712,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:22:36.335  INFO 52112 --- [http-nio-8080-exec-8] (98097414308761600) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:22:36.339  INFO 52112 --- [http-nio-8080-exec-8] (98097414308761600) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98097414308761600,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:22:41.312  INFO 52112 --- [http-nio-8080-exec-5] (98097435183812608) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:22:41.315  INFO 52112 --- [http-nio-8080-exec-5] (98097435183812608) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98097435183812608,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:22:46.375  INFO 52112 --- [http-nio-8080-exec-7] (98097456419573760) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:22:46.378  INFO 52112 --- [http-nio-8080-exec-7] (98097456419573760) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98097456419573760,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:22:51.374  INFO 52112 --- [http-nio-8080-exec-6] (98097477386899456) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:22:51.378  INFO 52112 --- [http-nio-8080-exec-6] (98097477386899456) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98097477386899456,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:22:56.354  INFO 52112 --- [http-nio-8080-exec-9] (98097498274533376) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:22:56.357  INFO 52112 --- [http-nio-8080-exec-9] (98097498274533376) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98097498274533376,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:23:01.347  INFO 52112 --- [http-nio-8080-exec-10] (98097519216693248) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:23:01.351  INFO 52112 --- [http-nio-8080-exec-10] (98097519216693248) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98097519216693248,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:23:04.552  INFO 52112 --- [http-nio-8080-exec-2] (98097532659437568) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:23:04.553  INFO 52112 --- [http-nio-8080-exec-2] (98097532659437568) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98097532659437568,"message":"Full authentication is required to access this resource"}
2024-04-30 19:23:04.555  INFO 52112 --- [http-nio-8080-exec-1] (98097532672020480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:23:04.558  INFO 52112 --- [http-nio-8080-exec-1] (98097532672020480) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98097532672020480,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07279486312943562,"memoryUsage":10.022357940673828,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:23:06.468  INFO 52112 --- [http-nio-8080-exec-3] (98097540691529728) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:23:06.471  INFO 52112 --- [http-nio-8080-exec-3] (98097540691529728) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98097540691529728,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:23:11.404  INFO 52112 --- [http-nio-8080-exec-4] (98097561398808576) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:23:11.408  INFO 52112 --- [http-nio-8080-exec-4] (98097561398808576) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98097561398808576,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:23:11.874  INFO 52112 --- [http-nio-8080-exec-8] (98097563365937152) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:23:11.874  INFO 52112 --- [http-nio-8080-exec-8] (98097563365937152) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98097563365937152,"message":"Full authentication is required to access this resource"}
2024-04-30 19:23:11.877  INFO 52112 --- [http-nio-8080-exec-5] (98097563382714368) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:23:11.880  INFO 52112 --- [http-nio-8080-exec-5] (98097563382714368) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98097563382714368,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1428752857505715,"memoryUsage":10.060890197753906,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:23:16.428  INFO 52112 --- [http-nio-8080-exec-7] (98097582470991872) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:23:16.432  INFO 52112 --- [http-nio-8080-exec-7] (98097582470991872) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98097582470991872,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:23:17.542  INFO 52112 --- [http-nio-8080-exec-6] (98097587143446528) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:23:17.543  INFO 52112 --- [http-nio-8080-exec-6] (98097587143446528) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98097587143446528,"message":"Full authentication is required to access this resource"}
2024-04-30 19:23:17.545  INFO 52112 --- [http-nio-8080-exec-9] (98097587156029440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:23:17.547  INFO 52112 --- [http-nio-8080-exec-9] (98097587156029440) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98097587156029440,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.15025194686211635,"memoryUsage":9.594379425048828,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:23:21.327  INFO 52112 --- [http-nio-8080-exec-10] (98097603018887168) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:23:21.332  INFO 52112 --- [http-nio-8080-exec-10] (98097603018887168) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98097603018887168,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:23:22.549  INFO 52112 --- [http-nio-8080-exec-2] (98097608144326656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:23:22.550  INFO 52112 --- [http-nio-8080-exec-2] (98097608144326656) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98097608144326656,"message":"Full authentication is required to access this resource"}
2024-04-30 19:23:22.552  INFO 52112 --- [http-nio-8080-exec-1] (98097608156909568) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:23:22.554  INFO 52112 --- [http-nio-8080-exec-1] (98097608156909568) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98097608156909568,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07340757843270405,"memoryUsage":9.607452392578125,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:23:26.340  INFO 52112 --- [http-nio-8080-exec-3] (98097624044933120) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:23:26.343  INFO 52112 --- [http-nio-8080-exec-3] (98097624044933120) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98097624044933120,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:23:27.542  INFO 52112 --- [http-nio-8080-exec-4] (98097629086486528) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:23:27.545  INFO 52112 --- [http-nio-8080-exec-4] (98097629086486528) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98097629086486528,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09756423982869379,"memoryUsage":9.596870422363281,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:23:31.395  INFO 52112 --- [http-nio-8080-exec-8] (98097645247139840) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:23:31.399  INFO 52112 --- [http-nio-8080-exec-8] (98097645247139840) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98097645247139840,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:23:32.556  INFO 52112 --- [http-nio-8080-exec-5] (98097650116726784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:23:32.556  INFO 52112 --- [http-nio-8080-exec-5] (98097650116726784) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98097650116726784,"message":"Full authentication is required to access this resource"}
2024-04-30 19:23:32.558  INFO 52112 --- [http-nio-8080-exec-7] (98097650125115392) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:23:32.560  INFO 52112 --- [http-nio-8080-exec-7] (98097650125115392) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98097650125115392,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09121713201409597,"memoryUsage":9.574607849121094,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:23:36.343  INFO 52112 --- [http-nio-8080-exec-6] (98097666000556032) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:23:36.347  INFO 52112 --- [http-nio-8080-exec-6] (98097666000556032) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98097666000556032,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:23:37.554  INFO 52112 --- [http-nio-8080-exec-9] (98097671079858176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:23:37.556  INFO 52112 --- [http-nio-8080-exec-9] (98097671079858176) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98097671079858176,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.08368967623701894,"memoryUsage":9.567207336425781,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:23:41.369  INFO 52112 --- [http-nio-8080-exec-10] (98097687081127936) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:23:41.373  INFO 52112 --- [http-nio-8080-exec-10] (98097687081127936) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98097687081127936,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:23:42.553  INFO 52112 --- [http-nio-8080-exec-2] (98097692047183872) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:23:42.553  INFO 52112 --- [http-nio-8080-exec-2] (98097692047183872) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98097692047183872,"message":"Full authentication is required to access this resource"}
2024-04-30 19:23:42.555  INFO 52112 --- [http-nio-8080-exec-1] (98097692055572480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:23:42.557  INFO 52112 --- [http-nio-8080-exec-1] (98097692055572480) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98097692055572480,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.11337228826650547,"memoryUsage":9.572837829589844,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:23:46.369  INFO 52112 --- [http-nio-8080-exec-3] (98097708052647936) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:23:46.373  INFO 52112 --- [http-nio-8080-exec-3] (98097708052647936) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98097708052647936,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:23:47.551  INFO 52112 --- [http-nio-8080-exec-4] (98097713010315264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:23:47.553  INFO 52112 --- [http-nio-8080-exec-4] (98097713010315264) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98097713010315264,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.2565339242651372,"memoryUsage":9.57052993774414,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:23:51.460  INFO 52112 --- [http-nio-8080-exec-8] (98097729405849600) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:23:51.464  INFO 52112 --- [http-nio-8080-exec-8] (98097729405849600) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98097729405849600,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:23:51.832  INFO 52112 --- [http-nio-8080-exec-5] (98097730966130688) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:23:51.833  INFO 52112 --- [http-nio-8080-exec-5] (98097730966130688) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98097730966130688,"message":"Full authentication is required to access this resource"}
2024-04-30 19:23:51.834  INFO 52112 --- [http-nio-8080-exec-7] (98097730974519296) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:23:51.837  INFO 52112 --- [http-nio-8080-exec-7] (98097730974519296) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98097730974519296,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.15748742422288148,"memoryUsage":9.621780395507812,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:23:52.316  INFO 52112 --- [http-nio-8080-exec-6] (98097732996173824) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:23:52.318  INFO 52112 --- [http-nio-8080-exec-6] (98097732996173824) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98097732996173824,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.15748742422288148,"memoryUsage":9.621780395507812,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:23:56.400  INFO 52112 --- [http-nio-8080-exec-9] (98097750125711360) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:23:56.403  INFO 52112 --- [http-nio-8080-exec-9] (98097750125711360) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98097750125711360,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:23:57.545  INFO 52112 --- [http-nio-8080-exec-10] (98097754928189440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:23:57.546  INFO 52112 --- [http-nio-8080-exec-10] (98097754928189440) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98097754928189440,"message":"Full authentication is required to access this resource"}
2024-04-30 19:23:57.548  INFO 52112 --- [http-nio-8080-exec-2] (98097754940772352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:23:57.550  INFO 52112 --- [http-nio-8080-exec-2] (98097754940772352) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98097754940772352,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.13971934106162295,"memoryUsage":9.664749145507812,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:24:01.368  INFO 52112 --- [http-nio-8080-exec-1] (98097770963013632) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:24:01.372  INFO 52112 --- [http-nio-8080-exec-1] (98097770963013632) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98097770963013632,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:24:02.553  INFO 52112 --- [http-nio-8080-exec-3] (98097775933263872) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:24:02.554  INFO 52112 --- [http-nio-8080-exec-3] (98097775933263872) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98097775933263872,"message":"Full authentication is required to access this resource"}
2024-04-30 19:24:02.556  INFO 52112 --- [http-nio-8080-exec-4] (98097775945846784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:24:02.558  INFO 52112 --- [http-nio-8080-exec-4] (98097775945846784) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98097775945846784,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.12091636166463332,"memoryUsage":9.671463012695312,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:24:06.354  INFO 52112 --- [http-nio-8080-exec-8] (98097791875813376) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:24:06.357  INFO 52112 --- [http-nio-8080-exec-8] (98097791875813376) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98097791875813376,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:24:07.542  INFO 52112 --- [http-nio-8080-exec-5] (98097796858646528) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:24:07.545  INFO 52112 --- [http-nio-8080-exec-5] (98097796858646528) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98097796858646528,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09954874880350062,"memoryUsage":9.674911499023438,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:24:11.355  INFO 52112 --- [http-nio-8080-exec-7] (98097812851527680) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:24:11.358  INFO 52112 --- [http-nio-8080-exec-7] (98097812851527680) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98097812851527680,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:24:12.548  INFO 52112 --- [http-nio-8080-exec-6] (98097817855332352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:24:12.549  INFO 52112 --- [http-nio-8080-exec-6] (98097817855332352) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98097817855332352,"message":"Full authentication is required to access this resource"}
2024-04-30 19:24:12.551  INFO 52112 --- [http-nio-8080-exec-9] (98097817867915264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:24:12.553  INFO 52112 --- [http-nio-8080-exec-9] (98097817867915264) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98097817867915264,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.10194076959237124,"memoryUsage":9.653690338134766,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:24:16.366  INFO 52112 --- [http-nio-8080-exec-10] (98097833869185024) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:24:16.369  INFO 52112 --- [http-nio-8080-exec-10] (98097833869185024) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98097833869185024,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:24:21.473  INFO 52112 --- [http-nio-8080-exec-2] (98097855289495552) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:24:21.476  INFO 52112 --- [http-nio-8080-exec-2] (98097855289495552) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98097855289495552,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:24:26.355  INFO 52112 --- [http-nio-8080-exec-1] (98097875766087680) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:24:26.358  INFO 52112 --- [http-nio-8080-exec-1] (98097875766087680) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98097875766087680,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:24:31.486  INFO 52112 --- [http-nio-8080-exec-3] (98097897287061504) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:24:31.490  INFO 52112 --- [http-nio-8080-exec-3] (98097897287061504) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98097897287061504,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:24:36.409  INFO 52112 --- [http-nio-8080-exec-4] (98097917935620096) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:24:36.412  INFO 52112 --- [http-nio-8080-exec-4] (98097917935620096) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98097917935620096,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:24:37.606  INFO 52112 --- [http-nio-8080-exec-8] (98097922956201984) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:24:37.606  INFO 52112 --- [http-nio-8080-exec-8] (98097922956201984) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98097922956201984,"message":"Full authentication is required to access this resource"}
2024-04-30 19:24:37.609  INFO 52112 --- [http-nio-8080-exec-5] (98097922968784896) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:24:37.613  INFO 52112 --- [http-nio-8080-exec-5] (98097922968784896) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98097922968784896,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.14547323780762064,"memoryUsage":9.779762268066406,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:24:41.335  INFO 52112 --- [http-nio-8080-exec-7] (98097938596761600) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:24:41.338  INFO 52112 --- [http-nio-8080-exec-7] (98097938596761600) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98097938596761600,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:24:42.605  INFO 52112 --- [http-nio-8080-exec-6] (98097943923527680) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:24:42.607  INFO 52112 --- [http-nio-8080-exec-6] (98097943923527680) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98097943923527680,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09633898305084745,"memoryUsage":9.908332824707031,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:24:46.485  INFO 52112 --- [http-nio-8080-exec-9] (98097960197427200) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:24:46.488  INFO 52112 --- [http-nio-8080-exec-9] (98097960197427200) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98097960197427200,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:24:47.613  INFO 52112 --- [http-nio-8080-exec-10] (98097964924407808) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:24:47.613  INFO 52112 --- [http-nio-8080-exec-10] (98097964924407808) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98097964924407808,"message":"Full authentication is required to access this resource"}
2024-04-30 19:24:47.615  INFO 52112 --- [http-nio-8080-exec-2] (98097964936990720) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:24:47.617  INFO 52112 --- [http-nio-8080-exec-2] (98097964936990720) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98097964936990720,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.3116084889249681,"memoryUsage":10.061580657958984,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:24:51.462  INFO 52112 --- [http-nio-8080-exec-1] (98097981072478208) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:24:51.470  INFO 52112 --- [http-nio-8080-exec-1] (98097981072478208) com.example.filter.RequestLogFilter      : 请求处理耗时: 8ms | 响应结果: {"id":98097981072478208,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:24:52.616  INFO 52112 --- [http-nio-8080-exec-3] (98097985912705024) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:24:52.621  INFO 52112 --- [http-nio-8080-exec-3] (98097985912705024) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98097985912705024,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.252984063487967,"memoryUsage":5.211338043212891,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:24:56.372  INFO 52112 --- [http-nio-8080-exec-4] (98098001666510848) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:24:56.376  INFO 52112 --- [http-nio-8080-exec-4] (98098001666510848) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98098001666510848,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:24:57.618  INFO 52112 --- [http-nio-8080-exec-8] (98098006892613632) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:24:57.618  INFO 52112 --- [http-nio-8080-exec-8] (98098006892613632) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98098006892613632,"message":"Full authentication is required to access this resource"}
2024-04-30 19:24:57.620  INFO 52112 --- [http-nio-8080-exec-5] (98098006901002240) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:24:57.622  INFO 52112 --- [http-nio-8080-exec-5] (98098006901002240) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98098006901002240,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09021855010660981,"memoryUsage":3.6818313598632812,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:25:01.357  INFO 52112 --- [http-nio-8080-exec-7] (98098022575116288) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:25:01.360  INFO 52112 --- [http-nio-8080-exec-7] (98098022575116288) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98098022575116288,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:25:02.614  INFO 52112 --- [http-nio-8080-exec-6] (98098027847356416) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:25:02.616  INFO 52112 --- [http-nio-8080-exec-6] (98098027847356416) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98098027847356416,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.12437311935807423,"memoryUsage":3.7164649963378906,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:25:06.425  INFO 52112 --- [http-nio-8080-exec-9] (98098043831848960) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:25:06.429  INFO 52112 --- [http-nio-8080-exec-9] (98098043831848960) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98098043831848960,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:25:08.544  INFO 52112 --- [http-nio-8080-exec-10] (98098052719579136) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:25:08.544  INFO 52112 --- [http-nio-8080-exec-10] (98098052719579136) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98098052719579136,"message":"Full authentication is required to access this resource"}
2024-04-30 19:25:08.547  INFO 52112 --- [http-nio-8080-exec-2] (98098052732162048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:25:08.550  INFO 52112 --- [http-nio-8080-exec-2] (98098052732162048) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98098052732162048,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.2183463379450528,"memoryUsage":4.117053985595703,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:25:11.354  INFO 52112 --- [http-nio-8080-exec-1] (98098064505573376) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:25:11.358  INFO 52112 --- [http-nio-8080-exec-1] (98098064505573376) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98098064505573376,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:25:13.549  INFO 52112 --- [http-nio-8080-exec-3] (98098073712070656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:25:13.550  INFO 52112 --- [http-nio-8080-exec-3] (98098073712070656) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98098073712070656,"message":"Full authentication is required to access this resource"}
2024-04-30 19:25:13.552  INFO 52112 --- [http-nio-8080-exec-4] (98098073724653568) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:25:13.554  INFO 52112 --- [http-nio-8080-exec-4] (98098073724653568) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98098073724653568,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09475276170436613,"memoryUsage":4.162220001220703,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:25:16.426  INFO 52112 --- [http-nio-8080-exec-8] (98098085774888960) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:25:16.429  INFO 52112 --- [http-nio-8080-exec-8] (98098085774888960) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98098085774888960,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:25:18.553  INFO 52112 --- [http-nio-8080-exec-5] (98098094700367872) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:25:18.554  INFO 52112 --- [http-nio-8080-exec-5] (98098094700367872) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98098094700367872,"message":"Full authentication is required to access this resource"}
2024-04-30 19:25:18.557  INFO 52112 --- [http-nio-8080-exec-7] (98098094717145088) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:25:18.559  INFO 52112 --- [http-nio-8080-exec-7] (98098094717145088) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98098094717145088,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1347741935483871,"memoryUsage":4.440120697021484,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:25:21.339  INFO 52112 --- [http-nio-8080-exec-6] (98098106385698816) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:25:21.344  INFO 52112 --- [http-nio-8080-exec-6] (98098106385698816) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98098106385698816,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:25:23.552  INFO 52112 --- [http-nio-8080-exec-9] (98098115667693568) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:25:23.555  INFO 52112 --- [http-nio-8080-exec-9] (98098115667693568) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98098115667693568,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.10660275452335943,"memoryUsage":4.627105712890625,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:25:26.465  INFO 52112 --- [http-nio-8080-exec-10] (98098127885701120) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:25:26.471  INFO 52112 --- [http-nio-8080-exec-10] (98098127885701120) com.example.filter.RequestLogFilter      : 请求处理耗时: 6ms | 响应结果: {"id":98098127885701120,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:25:28.541  INFO 52112 --- [http-nio-8080-exec-2] (98098136593076224) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:25:28.542  INFO 52112 --- [http-nio-8080-exec-2] (98098136593076224) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98098136593076224,"message":"Full authentication is required to access this resource"}
2024-04-30 19:25:28.544  INFO 52112 --- [http-nio-8080-exec-1] (98098136605659136) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:25:28.546  INFO 52112 --- [http-nio-8080-exec-1] (98098136605659136) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98098136605659136,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.2438034319453841,"memoryUsage":4.775886535644531,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:25:31.364  INFO 52112 --- [http-nio-8080-exec-3] (98098148433596416) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:25:31.368  INFO 52112 --- [http-nio-8080-exec-3] (98098148433596416) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98098148433596416,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:25:33.544  INFO 52112 --- [http-nio-8080-exec-4] (98098157577179136) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:25:33.547  INFO 52112 --- [http-nio-8080-exec-4] (98098157577179136) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98098157577179136,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1207494332577677,"memoryUsage":4.9541015625,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:25:36.397  INFO 52112 --- [http-nio-8080-exec-8] (98098169543528448) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:25:36.401  INFO 52112 --- [http-nio-8080-exec-8] (98098169543528448) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98098169543528448,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:25:37.618  INFO 52112 --- [http-nio-8080-exec-5] (98098174664773632) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:25:37.619  INFO 52112 --- [http-nio-8080-exec-5] (98098174664773632) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98098174664773632,"message":"Full authentication is required to access this resource"}
2024-04-30 19:25:37.621  INFO 52112 --- [http-nio-8080-exec-7] (98098174677356544) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:25:37.623  INFO 52112 --- [http-nio-8080-exec-7] (98098174677356544) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98098174677356544,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.16297364625671956,"memoryUsage":5.007381439208984,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:25:41.400  INFO 52112 --- [http-nio-8080-exec-6] (98098190527631360) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:25:41.403  INFO 52112 --- [http-nio-8080-exec-6] (98098190527631360) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98098190527631360,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:25:42.605  INFO 52112 --- [http-nio-8080-exec-9] (98098195581767680) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:25:42.607  INFO 52112 --- [http-nio-8080-exec-9] (98098195581767680) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98098195581767680,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1421657201858544,"memoryUsage":5.014972686767578,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:25:46.404  INFO 52112 --- [http-nio-8080-exec-10] (98098211515928576) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:25:46.408  INFO 52112 --- [http-nio-8080-exec-10] (98098211515928576) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98098211515928576,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:25:48.552  INFO 52112 --- [http-nio-8080-exec-2] (98098220525293568) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:25:48.553  INFO 52112 --- [http-nio-8080-exec-2] (98098220525293568) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98098220525293568,"message":"Full authentication is required to access this resource"}
2024-04-30 19:25:48.555  INFO 52112 --- [http-nio-8080-exec-1] (98098220537876480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:25:48.558  INFO 52112 --- [http-nio-8080-exec-1] (98098220537876480) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98098220537876480,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.15261017838405036,"memoryUsage":5.086780548095703,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:25:51.366  INFO 52112 --- [http-nio-8080-exec-3] (98098232323870720) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:25:51.369  INFO 52112 --- [http-nio-8080-exec-3] (98098232323870720) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98098232323870720,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:25:53.554  INFO 52112 --- [http-nio-8080-exec-4] (98098241505202176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:25:53.556  INFO 52112 --- [http-nio-8080-exec-4] (98098241505202176) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98098241505202176,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.13845113290497124,"memoryUsage":4.966510772705078,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:25:56.366  INFO 52112 --- [http-nio-8080-exec-8] (98098253299585024) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:25:56.369  INFO 52112 --- [http-nio-8080-exec-8] (98098253299585024) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98098253299585024,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:25:58.546  INFO 52112 --- [http-nio-8080-exec-5] (98098262443167744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:25:58.546  INFO 52112 --- [http-nio-8080-exec-5] (98098262443167744) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98098262443167744,"message":"Full authentication is required to access this resource"}
2024-04-30 19:25:58.548  INFO 52112 --- [http-nio-8080-exec-7] (98098262451556352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:25:58.550  INFO 52112 --- [http-nio-8080-exec-7] (98098262451556352) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98098262451556352,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07274818975434798,"memoryUsage":4.869846343994141,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:26:01.416  INFO 52112 --- [http-nio-8080-exec-6] (98098274480820224) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:26:01.419  INFO 52112 --- [http-nio-8080-exec-6] (98098274480820224) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98098274480820224,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:26:03.555  INFO 52112 --- [http-nio-8080-exec-9] (98098283452436480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:26:03.555  INFO 52112 --- [http-nio-8080-exec-9] (98098283452436480) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98098283452436480,"message":"Full authentication is required to access this resource"}
2024-04-30 19:26:03.558  INFO 52112 --- [http-nio-8080-exec-10] (98098283460825088) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:26:03.560  INFO 52112 --- [http-nio-8080-exec-10] (98098283460825088) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98098283460825088,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.16607223915439984,"memoryUsage":4.9439544677734375,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:26:06.349  INFO 52112 --- [http-nio-8080-exec-2] (98098295171321856) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:26:06.352  INFO 52112 --- [http-nio-8080-exec-2] (98098295171321856) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98098295171321856,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:26:08.544  INFO 52112 --- [http-nio-8080-exec-1] (98098304377819136) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:26:08.546  INFO 52112 --- [http-nio-8080-exec-1] (98098304377819136) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98098304377819136,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1146076405093673,"memoryUsage":4.9564361572265625,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:26:11.359  INFO 52112 --- [http-nio-8080-exec-3] (98098316184784896) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:26:11.365  INFO 52112 --- [http-nio-8080-exec-3] (98098316184784896) com.example.filter.RequestLogFilter      : 请求处理耗时: 6ms | 响应结果: {"id":98098316184784896,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:26:13.556  INFO 52112 --- [http-nio-8080-exec-4] (98098325399670784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:26:13.557  INFO 52112 --- [http-nio-8080-exec-4] (98098325399670784) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98098325399670784,"message":"Full authentication is required to access this resource"}
2024-04-30 19:26:13.560  INFO 52112 --- [http-nio-8080-exec-8] (98098325416448000) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:26:13.562  INFO 52112 --- [http-nio-8080-exec-8] (98098325416448000) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98098325416448000,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.11150788303463145,"memoryUsage":4.917396545410156,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:26:16.348  INFO 52112 --- [http-nio-8080-exec-5] (98098337110167552) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:26:16.351  INFO 52112 --- [http-nio-8080-exec-5] (98098337110167552) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98098337110167552,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:26:18.549  INFO 52112 --- [http-nio-8080-exec-7] (98098346341830656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:26:18.552  INFO 52112 --- [http-nio-8080-exec-7] (98098346341830656) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98098346341830656,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.08667736757624397,"memoryUsage":4.967617034912109,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:26:21.342  INFO 52112 --- [http-nio-8080-exec-6] (98098358056521728) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:26:21.346  INFO 52112 --- [http-nio-8080-exec-6] (98098358056521728) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98098358056521728,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:26:23.545  INFO 52112 --- [http-nio-8080-exec-9] (98098367296573440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:26:23.546  INFO 52112 --- [http-nio-8080-exec-9] (98098367296573440) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98098367296573440,"message":"Full authentication is required to access this resource"}
2024-04-30 19:26:23.548  INFO 52112 --- [http-nio-8080-exec-10] (98098367309156352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:26:23.550  INFO 52112 --- [http-nio-8080-exec-10] (98098367309156352) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98098367309156352,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07763058548973849,"memoryUsage":4.924594879150391,"networkUpload":0.001953125,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:26:26.315  INFO 52112 --- [http-nio-8080-exec-2] (98098378914795520) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:26:26.318  INFO 52112 --- [http-nio-8080-exec-2] (98098378914795520) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98098378914795520,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:26:28.550  INFO 52112 --- [http-nio-8080-exec-1] (98098388289064960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:26:28.550  INFO 52112 --- [http-nio-8080-exec-1] (98098388289064960) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98098388289064960,"message":"Full authentication is required to access this resource"}
2024-04-30 19:26:28.553  INFO 52112 --- [http-nio-8080-exec-3] (98098388297453568) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:26:28.555  INFO 52112 --- [http-nio-8080-exec-3] (98098388297453568) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98098388297453568,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.05460422254315384,"memoryUsage":4.921825408935547,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:26:31.362  INFO 52112 --- [http-nio-8080-exec-4] (98098400083447808) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:26:31.366  INFO 52112 --- [http-nio-8080-exec-4] (98098400083447808) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98098400083447808,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:26:33.548  INFO 52112 --- [http-nio-8080-exec-8] (98098409252196352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:26:33.550  INFO 52112 --- [http-nio-8080-exec-8] (98098409252196352) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98098409252196352,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1500366593347997,"memoryUsage":5.024227142333984,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:26:36.496  INFO 52112 --- [http-nio-8080-exec-5] (98098421617004544) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:26:36.501  INFO 52112 --- [http-nio-8080-exec-5] (98098421617004544) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98098421617004544,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:26:38.552  INFO 52112 --- [http-nio-8080-exec-7] (98098430240493568) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:26:38.553  INFO 52112 --- [http-nio-8080-exec-7] (98098430240493568) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98098430240493568,"message":"Full authentication is required to access this resource"}
2024-04-30 19:26:38.555  INFO 52112 --- [http-nio-8080-exec-6] (98098430253076480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:26:38.558  INFO 52112 --- [http-nio-8080-exec-6] (98098430253076480) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98098430253076480,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.2893337503909916,"memoryUsage":5.2106475830078125,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:26:41.359  INFO 52112 --- [http-nio-8080-exec-9] (98098442013904896) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:26:41.362  INFO 52112 --- [http-nio-8080-exec-9] (98098442013904896) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98098442013904896,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:26:43.556  INFO 52112 --- [http-nio-8080-exec-10] (98098451228790784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:26:43.559  INFO 52112 --- [http-nio-8080-exec-10] (98098451228790784) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98098451228790784,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1208135593220339,"memoryUsage":5.153472900390625,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:26:46.349  INFO 52112 --- [http-nio-8080-exec-2] (98098462943481856) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:26:46.353  INFO 52112 --- [http-nio-8080-exec-2] (98098462943481856) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98098462943481856,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:26:48.556  INFO 52112 --- [http-nio-8080-exec-1] (98098472200310784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:26:48.556  INFO 52112 --- [http-nio-8080-exec-1] (98098472200310784) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98098472200310784,"message":"Full authentication is required to access this resource"}
2024-04-30 19:26:48.559  INFO 52112 --- [http-nio-8080-exec-3] (98098472212893696) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:26:48.561  INFO 52112 --- [http-nio-8080-exec-3] (98098472212893696) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98098472212893696,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.10520701380092005,"memoryUsage":5.1637115478515625,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:26:51.373  INFO 52112 --- [http-nio-8080-exec-4] (98098484015665152) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:26:51.377  INFO 52112 --- [http-nio-8080-exec-4] (98098484015665152) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98098484015665152,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:26:53.542  INFO 52112 --- [http-nio-8080-exec-8] (98098493113110528) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:26:53.545  INFO 52112 --- [http-nio-8080-exec-8] (98098493113110528) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98098493113110528,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1390874473912753,"memoryUsage":5.179878234863281,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:26:56.392  INFO 52112 --- [http-nio-8080-exec-5] (98098505066876928) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:26:56.396  INFO 52112 --- [http-nio-8080-exec-5] (98098505066876928) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98098505066876928,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:27:01.508  INFO 52112 --- [http-nio-8080-exec-7] (98098526520741888) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:27:01.511  INFO 52112 --- [http-nio-8080-exec-7] (98098526520741888) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98098526520741888,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:27:04.555  INFO 52112 --- [http-nio-8080-exec-6] (98098539304980480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:27:04.556  INFO 52112 --- [http-nio-8080-exec-6] (98098539304980480) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98098539304980480,"message":"Full authentication is required to access this resource"}
2024-04-30 19:27:04.558  INFO 52112 --- [http-nio-8080-exec-9] (98098539317563392) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:27:04.560  INFO 52112 --- [http-nio-8080-exec-9] (98098539317563392) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98098539317563392,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.2049246922067371,"memoryUsage":5.444423675537109,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:27:06.380  INFO 52112 --- [http-nio-8080-exec-10] (98098546959585280) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:27:06.383  INFO 52112 --- [http-nio-8080-exec-10] (98098546959585280) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98098546959585280,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:27:11.477  INFO 52112 --- [http-nio-8080-exec-2] (98098568337952768) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:27:11.480  INFO 52112 --- [http-nio-8080-exec-2] (98098568337952768) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98098568337952768,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:27:16.439  INFO 52112 --- [http-nio-8080-exec-1] (98098589150089216) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:27:16.444  INFO 52112 --- [http-nio-8080-exec-1] (98098589150089216) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98098589150089216,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:27:21.397  INFO 52112 --- [http-nio-8080-exec-3] (98098609945448448) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:27:21.400  INFO 52112 --- [http-nio-8080-exec-3] (98098609945448448) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98098609945448448,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:27:26.362  INFO 52112 --- [http-nio-8080-exec-4] (98098630770167808) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:27:26.365  INFO 52112 --- [http-nio-8080-exec-4] (98098630770167808) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98098630770167808,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:27:31.364  INFO 52112 --- [http-nio-8080-exec-8] (98098651750076416) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:27:31.367  INFO 52112 --- [http-nio-8080-exec-8] (98098651750076416) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98098651750076416,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:27:36.424  INFO 52112 --- [http-nio-8080-exec-5] (98098672973254656) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:27:36.427  INFO 52112 --- [http-nio-8080-exec-5] (98098672973254656) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98098672973254656,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:27:41.379  INFO 52112 --- [http-nio-8080-exec-7] (98098693756030976) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:27:41.383  INFO 52112 --- [http-nio-8080-exec-7] (98098693756030976) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98098693756030976,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:27:46.383  INFO 52112 --- [http-nio-8080-exec-6] (98098714744328192) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:27:46.387  INFO 52112 --- [http-nio-8080-exec-6] (98098714744328192) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98098714744328192,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:27:49.851  INFO 52112 --- [http-nio-8080-exec-9] (98098729290174464) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:27:49.852  INFO 52112 --- [http-nio-8080-exec-9] (98098729290174464) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98098729290174464,"message":"Full authentication is required to access this resource"}
2024-04-30 19:27:49.855  INFO 52112 --- [http-nio-8080-exec-10] (98098729306951680) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:27:49.858  INFO 52112 --- [http-nio-8080-exec-10] (98098729306951680) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98098729306951680,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.10645472061657033,"memoryUsage":8.085670471191406,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:27:51.382  INFO 52112 --- [http-nio-8080-exec-2] (98098735711653888) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:27:51.386  INFO 52112 --- [http-nio-8080-exec-2] (98098735711653888) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98098735711653888,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:27:52.615  INFO 52112 --- [http-nio-8080-exec-1] (98098740883230720) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:27:52.617  INFO 52112 --- [http-nio-8080-exec-1] (98098740883230720) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98098740883230720,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1294803170946541,"memoryUsage":8.194381713867188,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:27:56.362  INFO 52112 --- [http-nio-8080-exec-3] (98098756599287808) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:27:56.365  INFO 52112 --- [http-nio-8080-exec-3] (98098756599287808) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98098756599287808,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:27:58.541  INFO 52112 --- [http-nio-8080-exec-4] (98098765738676224) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:27:58.541  INFO 52112 --- [http-nio-8080-exec-4] (98098765738676224) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98098765738676224,"message":"Full authentication is required to access this resource"}
2024-04-30 19:27:58.543  INFO 52112 --- [http-nio-8080-exec-8] (98098765747064832) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:27:58.546  INFO 52112 --- [http-nio-8080-exec-8] (98098765747064832) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98098765747064832,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.13437312537492502,"memoryUsage":8.21847915649414,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:28:01.417  INFO 52112 --- [http-nio-8080-exec-5] (98098777797300224) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:28:01.420  INFO 52112 --- [http-nio-8080-exec-5] (98098777797300224) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98098777797300224,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:28:03.542  INFO 52112 --- [http-nio-8080-exec-7] (98098786714390528) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:28:03.544  INFO 52112 --- [http-nio-8080-exec-7] (98098786714390528) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98098786714390528,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.16519490349438629,"memoryUsage":8.244346618652344,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:28:06.353  INFO 52112 --- [http-nio-8080-exec-6] (98098798504579072) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:28:06.356  INFO 52112 --- [http-nio-8080-exec-6] (98098798504579072) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98098798504579072,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:28:08.546  INFO 52112 --- [http-nio-8080-exec-9] (98098807702687744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:28:08.546  INFO 52112 --- [http-nio-8080-exec-9] (98098807702687744) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98098807702687744,"message":"Full authentication is required to access this resource"}
2024-04-30 19:28:08.548  INFO 52112 --- [http-nio-8080-exec-10] (98098807711076352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:28:08.550  INFO 52112 --- [http-nio-8080-exec-10] (98098807711076352) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98098807711076352,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1374,"memoryUsage":8.296272277832031,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:28:11.509  INFO 52112 --- [http-nio-8080-exec-2] (98098820130410496) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:28:11.513  INFO 52112 --- [http-nio-8080-exec-2] (98098820130410496) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98098820130410496,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:28:13.544  INFO 52112 --- [http-nio-8080-exec-1] (98098828665819136) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:28:13.546  INFO 52112 --- [http-nio-8080-exec-1] (98098828665819136) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98098828665819136,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.22889581740102358,"memoryUsage":8.432819366455078,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:28:16.415  INFO 52112 --- [http-nio-8080-exec-3] (98098840707665920) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:28:16.418  INFO 52112 --- [http-nio-8080-exec-3] (98098840707665920) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98098840707665920,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:28:18.543  INFO 52112 --- [http-nio-8080-exec-4] (98098849633144832) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:28:18.543  INFO 52112 --- [http-nio-8080-exec-4] (98098849633144832) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98098849633144832,"message":"Full authentication is required to access this resource"}
2024-04-30 19:28:18.545  INFO 52112 --- [http-nio-8080-exec-8] (98098849641533440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:28:18.547  INFO 52112 --- [http-nio-8080-exec-8] (98098849641533440) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98098849641533440,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1115184642047727,"memoryUsage":8.564350128173828,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:28:21.371  INFO 52112 --- [http-nio-8080-exec-5] (98098861494636544) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:28:21.374  INFO 52112 --- [http-nio-8080-exec-5] (98098861494636544) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98098861494636544,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:28:23.549  INFO 52112 --- [http-nio-8080-exec-7] (98098870629830656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:28:23.550  INFO 52112 --- [http-nio-8080-exec-7] (98098870629830656) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98098870629830656,"message":"Full authentication is required to access this resource"}
2024-04-30 19:28:23.551  INFO 52112 --- [http-nio-8080-exec-6] (98098870638219264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:28:23.553  INFO 52112 --- [http-nio-8080-exec-6] (98098870638219264) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98098870638219264,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.10133101464784965,"memoryUsage":8.575122833251953,"networkUpload":0.001953125,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:28:26.409  INFO 52112 --- [http-nio-8080-exec-9] (98098882625540096) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:28:26.414  INFO 52112 --- [http-nio-8080-exec-9] (98098882625540096) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98098882625540096,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:28:28.543  INFO 52112 --- [http-nio-8080-exec-10] (98098891576184832) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:28:28.546  INFO 52112 --- [http-nio-8080-exec-10] (98098891576184832) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98098891576184832,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.15200254291163381,"memoryUsage":8.600154876708984,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:28:31.444  INFO 52112 --- [http-nio-8080-exec-2] (98098903743860736) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:28:31.448  INFO 52112 --- [http-nio-8080-exec-2] (98098903743860736) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98098903743860736,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:28:33.546  INFO 52112 --- [http-nio-8080-exec-1] (98098912560287744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:28:33.547  INFO 52112 --- [http-nio-8080-exec-1] (98098912560287744) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98098912560287744,"message":"Full authentication is required to access this resource"}
2024-04-30 19:28:33.549  INFO 52112 --- [http-nio-8080-exec-3] (98098912572870656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:28:33.551  INFO 52112 --- [http-nio-8080-exec-3] (98098912572870656) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98098912572870656,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.16266666666666665,"memoryUsage":8.599716186523438,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:28:36.368  INFO 52112 --- [http-nio-8080-exec-4] (98098924396613632) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:28:36.372  INFO 52112 --- [http-nio-8080-exec-4] (98098924396613632) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98098924396613632,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:28:38.543  INFO 52112 --- [http-nio-8080-exec-8] (98098933519224832) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:28:38.545  INFO 52112 --- [http-nio-8080-exec-8] (98098933519224832) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98098933519224832,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.13866666666666666,"memoryUsage":8.656986236572266,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:28:41.391  INFO 52112 --- [http-nio-8080-exec-5] (98098945464602624) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:28:41.395  INFO 52112 --- [http-nio-8080-exec-5] (98098945464602624) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98098945464602624,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:28:43.545  INFO 52112 --- [http-nio-8080-exec-7] (98098954499133440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:28:43.545  INFO 52112 --- [http-nio-8080-exec-7] (98098954499133440) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98098954499133440,"message":"Full authentication is required to access this resource"}
2024-04-30 19:28:43.548  INFO 52112 --- [http-nio-8080-exec-6] (98098954511716352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:28:43.550  INFO 52112 --- [http-nio-8080-exec-6] (98098954511716352) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98098954511716352,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1280655737704918,"memoryUsage":8.654155731201172,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:28:46.375  INFO 52112 --- [http-nio-8080-exec-9] (98098966369013760) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:28:46.378  INFO 52112 --- [http-nio-8080-exec-9] (98098966369013760) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98098966369013760,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:28:48.544  INFO 52112 --- [http-nio-8080-exec-10] (98098975466459136) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:28:48.546  INFO 52112 --- [http-nio-8080-exec-10] (98098975466459136) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98098975466459136,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.13547532295462072,"memoryUsage":8.474395751953125,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:28:51.326  INFO 52112 --- [http-nio-8080-exec-2] (98098987135012864) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:28:51.330  INFO 52112 --- [http-nio-8080-exec-2] (98098987135012864) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98098987135012864,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:28:53.554  INFO 52112 --- [http-nio-8080-exec-1] (98098996479922176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:28:53.554  INFO 52112 --- [http-nio-8080-exec-1] (98098996479922176) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98098996479922176,"message":"Full authentication is required to access this resource"}
2024-04-30 19:28:53.557  INFO 52112 --- [http-nio-8080-exec-3] (98098996492505088) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:28:53.559  INFO 52112 --- [http-nio-8080-exec-3] (98098996492505088) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98098996492505088,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.08193934448524412,"memoryUsage":8.467227935791016,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:28:56.367  INFO 52112 --- [http-nio-8080-exec-4] (98099008278499328) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:28:56.370  INFO 52112 --- [http-nio-8080-exec-4] (98099008278499328) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98099008278499328,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:28:58.619  INFO 52112 --- [http-nio-8080-exec-8] (98099017724071936) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:28:58.620  INFO 52112 --- [http-nio-8080-exec-8] (98099017724071936) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98099017724071936,"message":"Full authentication is required to access this resource"}
2024-04-30 19:28:58.623  INFO 52112 --- [http-nio-8080-exec-5] (98099017740849152) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:28:58.626  INFO 52112 --- [http-nio-8080-exec-5] (98099017740849152) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98099017740849152,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.13129739978331528,"memoryUsage":8.492607116699219,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:29:01.377  INFO 52112 --- [http-nio-8080-exec-7] (98099029291962368) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:29:01.380  INFO 52112 --- [http-nio-8080-exec-7] (98099029291962368) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98099029291962368,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:29:03.556  INFO 52112 --- [http-nio-8080-exec-6] (98099038431350784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:29:03.558  INFO 52112 --- [http-nio-8080-exec-6] (98099038431350784) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099038431350784,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0872293476761826,"memoryUsage":8.384719848632812,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:29:06.402  INFO 52112 --- [http-nio-8080-exec-9] (98099050368339968) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:29:06.407  INFO 52112 --- [http-nio-8080-exec-9] (98099050368339968) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98099050368339968,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:29:08.542  INFO 52112 --- [http-nio-8080-exec-10] (98099059344150528) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:29:08.542  INFO 52112 --- [http-nio-8080-exec-10] (98099059344150528) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98099059344150528,"message":"Full authentication is required to access this resource"}
2024-04-30 19:29:08.544  INFO 52112 --- [http-nio-8080-exec-2] (98099059352539136) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:29:08.547  INFO 52112 --- [http-nio-8080-exec-2] (98099059352539136) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98099059352539136,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.18347160178685387,"memoryUsage":8.334243774414062,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:29:11.349  INFO 52112 --- [http-nio-8080-exec-1] (98099071117561856) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:29:11.353  INFO 52112 --- [http-nio-8080-exec-1] (98099071117561856) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98099071117561856,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:29:13.551  INFO 52112 --- [http-nio-8080-exec-3] (98099080353419264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:29:13.552  INFO 52112 --- [http-nio-8080-exec-3] (98099080353419264) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98099080353419264,"message":"Full authentication is required to access this resource"}
2024-04-30 19:29:13.554  INFO 52112 --- [http-nio-8080-exec-4] (98099080366002176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:29:13.565  INFO 52112 --- [http-nio-8080-exec-4] (98099080366002176) com.example.filter.RequestLogFilter      : 请求处理耗时: 11ms | 响应结果: {"id":98099080366002176,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1345243650423305,"memoryUsage":8.412017822265625,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:29:16.418  INFO 52112 --- [http-nio-8080-exec-8] (98099092378488832) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:29:16.421  INFO 52112 --- [http-nio-8080-exec-8] (98099092378488832) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98099092378488832,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:29:18.551  INFO 52112 --- [http-nio-8080-exec-5] (98099101324939264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:29:18.553  INFO 52112 --- [http-nio-8080-exec-5] (98099101324939264) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099101324939264,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.19863485503162376,"memoryUsage":8.481693267822266,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:29:21.365  INFO 52112 --- [http-nio-8080-exec-7] (98099113127710720) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:29:21.369  INFO 52112 --- [http-nio-8080-exec-7] (98099113127710720) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98099113127710720,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:29:23.549  INFO 52112 --- [http-nio-8080-exec-6] (98099122288070656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:29:23.550  INFO 52112 --- [http-nio-8080-exec-6] (98099122288070656) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98099122288070656,"message":"Full authentication is required to access this resource"}
2024-04-30 19:29:23.551  INFO 52112 --- [http-nio-8080-exec-9] (98099122296459264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:29:23.553  INFO 52112 --- [http-nio-8080-exec-9] (98099122296459264) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099122296459264,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09170516444873475,"memoryUsage":8.50692367553711,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:29:26.343  INFO 52112 --- [http-nio-8080-exec-10] (98099134006956032) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:29:26.347  INFO 52112 --- [http-nio-8080-exec-10] (98099134006956032) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98099134006956032,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:29:28.550  INFO 52112 --- [http-nio-8080-exec-2] (98099143263784960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:29:28.552  INFO 52112 --- [http-nio-8080-exec-2] (98099143263784960) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099143263784960,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07919989187728071,"memoryUsage":8.610122680664062,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:29:31.376  INFO 52112 --- [http-nio-8080-exec-1] (98099155116888064) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:29:31.380  INFO 52112 --- [http-nio-8080-exec-1] (98099155116888064) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98099155116888064,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:29:33.548  INFO 52112 --- [http-nio-8080-exec-3] (98099164226916352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:29:33.549  INFO 52112 --- [http-nio-8080-exec-3] (98099164226916352) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98099164226916352,"message":"Full authentication is required to access this resource"}
2024-04-30 19:29:33.550  INFO 52112 --- [http-nio-8080-exec-4] (98099164235304960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:29:33.552  INFO 52112 --- [http-nio-8080-exec-4] (98099164235304960) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099164235304960,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.18772563176895307,"memoryUsage":8.690681457519531,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:29:36.356  INFO 52112 --- [http-nio-8080-exec-8] (98099176004521984) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:29:36.360  INFO 52112 --- [http-nio-8080-exec-8] (98099176004521984) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98099176004521984,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:29:38.545  INFO 52112 --- [http-nio-8080-exec-5] (98099185185853440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:29:38.550  INFO 52112 --- [http-nio-8080-exec-5] (98099185185853440) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98099185185853440,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1610056164749933,"memoryUsage":8.77066421508789,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:29:41.355  INFO 52112 --- [http-nio-8080-exec-7] (98099196971847680) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:29:41.359  INFO 52112 --- [http-nio-8080-exec-7] (98099196971847680) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98099196971847680,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:29:43.547  INFO 52112 --- [http-nio-8080-exec-6] (98099206165762048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:29:43.548  INFO 52112 --- [http-nio-8080-exec-6] (98099206165762048) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98099206165762048,"message":"Full authentication is required to access this resource"}
2024-04-30 19:29:43.550  INFO 52112 --- [http-nio-8080-exec-9] (98099206178344960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:29:43.553  INFO 52112 --- [http-nio-8080-exec-9] (98099206178344960) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98099206178344960,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09226387601006755,"memoryUsage":8.775497436523438,"networkUpload":0.001953125,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:29:46.395  INFO 52112 --- [http-nio-8080-exec-10] (98099218111139840) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:29:46.399  INFO 52112 --- [http-nio-8080-exec-10] (98099218111139840) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98099218111139840,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:29:48.551  INFO 52112 --- [http-nio-8080-exec-2] (98099227154059264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:29:48.551  INFO 52112 --- [http-nio-8080-exec-2] (98099227154059264) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98099227154059264,"message":"Full authentication is required to access this resource"}
2024-04-30 19:29:48.554  INFO 52112 --- [http-nio-8080-exec-1] (98099227166642176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:29:48.556  INFO 52112 --- [http-nio-8080-exec-1] (98099227166642176) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099227166642176,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.2098199883863475,"memoryUsage":8.78036117553711,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:29:51.393  INFO 52112 --- [http-nio-8080-exec-3] (98099239074271232) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:29:51.399  INFO 52112 --- [http-nio-8080-exec-3] (98099239074271232) com.example.filter.RequestLogFilter      : 请求处理耗时: 6ms | 响应结果: {"id":98099239074271232,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:29:53.546  INFO 52112 --- [http-nio-8080-exec-4] (98099248104607744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:29:53.548  INFO 52112 --- [http-nio-8080-exec-4] (98099248104607744) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099248104607744,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.15253459243229064,"memoryUsage":8.849864959716797,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:29:56.359  INFO 52112 --- [http-nio-8080-exec-8] (98099259903184896) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:29:56.362  INFO 52112 --- [http-nio-8080-exec-8] (98099259903184896) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98099259903184896,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:29:58.555  INFO 52112 --- [http-nio-8080-exec-5] (98099269113876480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:29:58.556  INFO 52112 --- [http-nio-8080-exec-5] (98099269113876480) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98099269113876480,"message":"Full authentication is required to access this resource"}
2024-04-30 19:29:58.558  INFO 52112 --- [http-nio-8080-exec-7] (98099269126459392) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:29:58.560  INFO 52112 --- [http-nio-8080-exec-7] (98099269126459392) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099269126459392,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.11696701802108127,"memoryUsage":8.794429779052734,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:30:01.346  INFO 52112 --- [http-nio-8080-exec-6] (98099280820178944) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:30:01.349  INFO 52112 --- [http-nio-8080-exec-6] (98099280820178944) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98099280820178944,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:30:04.547  INFO 52112 --- [http-nio-8080-exec-9] (98099294246146048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:30:04.547  INFO 52112 --- [http-nio-8080-exec-9] (98099294246146048) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98099294246146048,"message":"Full authentication is required to access this resource"}
2024-04-30 19:30:04.550  INFO 52112 --- [http-nio-8080-exec-10] (98099294258728960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:30:04.552  INFO 52112 --- [http-nio-8080-exec-10] (98099294258728960) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099294258728960,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09951867669988475,"memoryUsage":8.840885162353516,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:30:06.414  INFO 52112 --- [http-nio-8080-exec-2] (98099302076911616) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:30:06.418  INFO 52112 --- [http-nio-8080-exec-2] (98099302076911616) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98099302076911616,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:30:07.619  INFO 52112 --- [http-nio-8080-exec-1] (98099307131047936) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:30:07.621  INFO 52112 --- [http-nio-8080-exec-1] (98099307131047936) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099307131047936,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1597408546561089,"memoryUsage":8.882648468017578,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:30:11.381  INFO 52112 --- [http-nio-8080-exec-3] (98099322910019584) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:30:11.385  INFO 52112 --- [http-nio-8080-exec-3] (98099322910019584) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98099322910019584,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:30:12.614  INFO 52112 --- [http-nio-8080-exec-4] (98099328081596416) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:30:12.615  INFO 52112 --- [http-nio-8080-exec-4] (98099328081596416) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98099328081596416,"message":"Full authentication is required to access this resource"}
2024-04-30 19:30:12.616  INFO 52112 --- [http-nio-8080-exec-8] (98099328089985024) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:30:12.619  INFO 52112 --- [http-nio-8080-exec-8] (98099328089985024) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98099328089985024,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.20192748967416246,"memoryUsage":8.942920684814453,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:30:16.395  INFO 52112 --- [http-nio-8080-exec-5] (98099343940259840) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:30:16.398  INFO 52112 --- [http-nio-8080-exec-5] (98099343940259840) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98099343940259840,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:30:18.547  INFO 52112 --- [http-nio-8080-exec-7] (98099352966402048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:30:18.548  INFO 52112 --- [http-nio-8080-exec-7] (98099352966402048) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98099352966402048,"message":"Full authentication is required to access this resource"}
2024-04-30 19:30:18.549  INFO 52112 --- [http-nio-8080-exec-6] (98099352974790656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:30:18.552  INFO 52112 --- [http-nio-8080-exec-6] (98099352974790656) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98099352974790656,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.13069630598234716,"memoryUsage":8.836322784423828,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:30:21.362  INFO 52112 --- [http-nio-8080-exec-9] (98099364773367808) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:30:21.365  INFO 52112 --- [http-nio-8080-exec-9] (98099364773367808) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98099364773367808,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:30:23.554  INFO 52112 --- [http-nio-8080-exec-10] (98099373967282176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:30:23.554  INFO 52112 --- [http-nio-8080-exec-10] (98099373967282176) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98099373967282176,"message":"Full authentication is required to access this resource"}
2024-04-30 19:30:23.555  INFO 52112 --- [http-nio-8080-exec-2] (98099373971476480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:30:23.557  INFO 52112 --- [http-nio-8080-exec-2] (98099373971476480) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099373971476480,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09852183346894494,"memoryUsage":8.838748931884766,"networkUpload":0.001953125,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:30:26.349  INFO 52112 --- [http-nio-8080-exec-1] (98099385690361856) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:30:26.352  INFO 52112 --- [http-nio-8080-exec-1] (98099385690361856) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98099385690361856,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:30:27.607  INFO 52112 --- [http-nio-8080-exec-3] (98099390966796288) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:30:27.608  INFO 52112 --- [http-nio-8080-exec-3] (98099390966796288) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"id":98099390966796288,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.12335426372290866,"memoryUsage":8.8740234375,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:30:31.395  INFO 52112 --- [http-nio-8080-exec-4] (98099406854819840) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:30:31.399  INFO 52112 --- [http-nio-8080-exec-4] (98099406854819840) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98099406854819840,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:30:32.608  INFO 52112 --- [http-nio-8080-exec-8] (98099411942510592) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:30:32.608  INFO 52112 --- [http-nio-8080-exec-8] (98099411942510592) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98099411942510592,"message":"Full authentication is required to access this resource"}
2024-04-30 19:30:32.610  INFO 52112 --- [http-nio-8080-exec-5] (98099411950899200) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:30:32.612  INFO 52112 --- [http-nio-8080-exec-5] (98099411950899200) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099411950899200,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.17839860636170077,"memoryUsage":8.925773620605469,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:30:36.346  INFO 52112 --- [http-nio-8080-exec-7] (98099427620818944) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:30:36.349  INFO 52112 --- [http-nio-8080-exec-7] (98099427620818944) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98099427620818944,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:30:38.549  INFO 52112 --- [http-nio-8080-exec-6] (98099436860870656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:30:38.550  INFO 52112 --- [http-nio-8080-exec-6] (98099436860870656) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98099436860870656,"message":"Full authentication is required to access this resource"}
2024-04-30 19:30:38.551  INFO 52112 --- [http-nio-8080-exec-9] (98099436869259264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:30:38.553  INFO 52112 --- [http-nio-8080-exec-9] (98099436869259264) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099436869259264,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09471160250432929,"memoryUsage":8.877445220947266,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:30:41.357  INFO 52112 --- [http-nio-8080-exec-10] (98099448638476288) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:30:41.361  INFO 52112 --- [http-nio-8080-exec-10] (98099448638476288) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98099448638476288,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:30:43.550  INFO 52112 --- [http-nio-8080-exec-2] (98099457836584960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:30:43.552  INFO 52112 --- [http-nio-8080-exec-2] (98099457836584960) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099457836584960,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.10286723739638538,"memoryUsage":8.923877716064453,"networkUpload":0.001953125,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:30:46.338  INFO 52112 --- [http-nio-8080-exec-1] (98099469530304512) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:30:46.343  INFO 52112 --- [http-nio-8080-exec-1] (98099469530304512) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98099469530304512,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:30:48.544  INFO 52112 --- [http-nio-8080-exec-3] (98099478782939136) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:30:48.545  INFO 52112 --- [http-nio-8080-exec-3] (98099478782939136) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98099478782939136,"message":"Full authentication is required to access this resource"}
2024-04-30 19:30:48.546  INFO 52112 --- [http-nio-8080-exec-4] (98099478791327744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:30:48.548  INFO 52112 --- [http-nio-8080-exec-4] (98099478791327744) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099478791327744,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.08565163765931205,"memoryUsage":8.923416137695312,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:30:51.330  INFO 52112 --- [http-nio-8080-exec-8] (98099490468270080) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:30:51.334  INFO 52112 --- [http-nio-8080-exec-8] (98099490468270080) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98099490468270080,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:30:53.555  INFO 52112 --- [http-nio-8080-exec-5] (98099499800596480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:30:53.555  INFO 52112 --- [http-nio-8080-exec-5] (98099499800596480) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98099499800596480,"message":"Full authentication is required to access this resource"}
2024-04-30 19:30:53.557  INFO 52112 --- [http-nio-8080-exec-7] (98099499808985088) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:30:53.559  INFO 52112 --- [http-nio-8080-exec-7] (98099499808985088) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099499808985088,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.071098544927936,"memoryUsage":8.927860260009766,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:30:56.581  INFO 52112 --- [http-nio-8080-exec-6] (98099512492560384) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:30:56.584  INFO 52112 --- [http-nio-8080-exec-6] (98099512492560384) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98099512492560384,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:30:58.545  INFO 52112 --- [http-nio-8080-exec-9] (98099520730173440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:30:58.547  INFO 52112 --- [http-nio-8080-exec-9] (98099520730173440) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099520730173440,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.24382500476220711,"memoryUsage":9.16250228881836,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:31:01.350  INFO 52112 --- [http-nio-8080-exec-10] (98099532495196160) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:31:01.354  INFO 52112 --- [http-nio-8080-exec-10] (98099532495196160) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98099532495196160,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:31:03.542  INFO 52112 --- [http-nio-8080-exec-2] (98099541689110528) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:31:03.542  INFO 52112 --- [http-nio-8080-exec-2] (98099541689110528) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98099541689110528,"message":"Full authentication is required to access this resource"}
2024-04-30 19:31:03.544  INFO 52112 --- [http-nio-8080-exec-1] (98099541697499136) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:31:03.546  INFO 52112 --- [http-nio-8080-exec-1] (98099541697499136) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099541697499136,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.05931801233814657,"memoryUsage":9.153194427490234,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:31:06.370  INFO 52112 --- [http-nio-8080-exec-3] (98099553550602240) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:31:06.372  INFO 52112 --- [http-nio-8080-exec-3] (98099553550602240) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099553550602240,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:31:08.548  INFO 52112 --- [http-nio-8080-exec-4] (98099562685796352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:31:08.549  INFO 52112 --- [http-nio-8080-exec-4] (98099562685796352) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98099562685796352,"message":"Full authentication is required to access this resource"}
2024-04-30 19:31:08.550  INFO 52112 --- [http-nio-8080-exec-8] (98099562694184960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:31:08.552  INFO 52112 --- [http-nio-8080-exec-8] (98099562694184960) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099562694184960,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.08157414646859526,"memoryUsage":9.157669067382812,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:31:11.336  INFO 52112 --- [http-nio-8080-exec-5] (98099574379515904) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:31:11.339  INFO 52112 --- [http-nio-8080-exec-5] (98099574379515904) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98099574379515904,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:31:13.555  INFO 52112 --- [http-nio-8080-exec-7] (98099583686676480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:31:13.555  INFO 52112 --- [http-nio-8080-exec-7] (98099583686676480) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98099583686676480,"message":"Full authentication is required to access this resource"}
2024-04-30 19:31:13.557  INFO 52112 --- [http-nio-8080-exec-6] (98099583695065088) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:31:13.559  INFO 52112 --- [http-nio-8080-exec-6] (98099583695065088) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099583695065088,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0700144857556736,"memoryUsage":9.157432556152344,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:31:16.359  INFO 52112 --- [http-nio-8080-exec-9] (98099595447504896) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:31:16.363  INFO 52112 --- [http-nio-8080-exec-9] (98099595447504896) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98099595447504896,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:31:18.546  INFO 52112 --- [http-nio-8080-exec-10] (98099604620447744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:31:18.548  INFO 52112 --- [http-nio-8080-exec-10] (98099604620447744) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099604620447744,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.08111475409836065,"memoryUsage":9.130146026611328,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:31:21.320  INFO 52112 --- [http-nio-8080-exec-2] (98099616255447040) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:31:21.324  INFO 52112 --- [http-nio-8080-exec-2] (98099616255447040) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98099616255447040,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:31:23.552  INFO 52112 --- [http-nio-8080-exec-1] (98099625617133568) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:31:23.553  INFO 52112 --- [http-nio-8080-exec-1] (98099625617133568) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98099625617133568,"message":"Full authentication is required to access this resource"}
2024-04-30 19:31:23.554  INFO 52112 --- [http-nio-8080-exec-3] (98099625625522176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:31:23.556  INFO 52112 --- [http-nio-8080-exec-3] (98099625625522176) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099625625522176,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.10717190889370933,"memoryUsage":9.12698745727539,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:31:26.334  INFO 52112 --- [http-nio-8080-exec-4] (98099637285687296) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:31:26.337  INFO 52112 --- [http-nio-8080-exec-4] (98099637285687296) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98099637285687296,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:31:28.544  INFO 52112 --- [http-nio-8080-exec-8] (98099646555099136) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:31:28.546  INFO 52112 --- [http-nio-8080-exec-8] (98099646555099136) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099646555099136,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.06429209929175549,"memoryUsage":9.129806518554688,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:31:31.339  INFO 52112 --- [http-nio-8080-exec-5] (98099658278178816) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:31:31.342  INFO 52112 --- [http-nio-8080-exec-5] (98099658278178816) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98099658278178816,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:31:33.541  INFO 52112 --- [http-nio-8080-exec-7] (98099667514036224) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:31:33.541  INFO 52112 --- [http-nio-8080-exec-7] (98099667514036224) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98099667514036224,"message":"Full authentication is required to access this resource"}
2024-04-30 19:31:33.543  INFO 52112 --- [http-nio-8080-exec-6] (98099667522424832) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:31:33.545  INFO 52112 --- [http-nio-8080-exec-6] (98099667522424832) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099667522424832,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07517641305107245,"memoryUsage":9.130416870117188,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:31:36.328  INFO 52112 --- [http-nio-8080-exec-9] (98099679203561472) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:31:36.331  INFO 52112 --- [http-nio-8080-exec-9] (98099679203561472) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98099679203561472,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:31:41.327  INFO 52112 --- [http-nio-8080-exec-10] (98099700170887168) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:31:41.330  INFO 52112 --- [http-nio-8080-exec-10] (98099700170887168) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98099700170887168,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:31:46.312  INFO 52112 --- [http-nio-8080-exec-2] (98099721079492608) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:31:46.316  INFO 52112 --- [http-nio-8080-exec-2] (98099721079492608) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98099721079492608,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:31:50.912  INFO 52112 --- [http-nio-8080-exec-1] (98099740373291008) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:31:50.912  INFO 52112 --- [http-nio-8080-exec-1] (98099740373291008) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98099740373291008,"message":"Full authentication is required to access this resource"}
2024-04-30 19:31:50.915  INFO 52112 --- [http-nio-8080-exec-3] (98099740385873920) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:31:50.918  INFO 52112 --- [http-nio-8080-exec-3] (98099740385873920) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98099740385873920,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.05925473427000611,"memoryUsage":9.113082885742188,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:31:51.397  INFO 52112 --- [http-nio-8080-exec-4] (98099742407528448) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:31:51.401  INFO 52112 --- [http-nio-8080-exec-4] (98099742407528448) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98099742407528448,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:31:52.604  INFO 52112 --- [http-nio-8080-exec-8] (98099747470053376) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:31:52.606  INFO 52112 --- [http-nio-8080-exec-8] (98099747470053376) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099747470053376,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1578438326133213,"memoryUsage":9.12152099609375,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:31:56.321  INFO 52112 --- [http-nio-8080-exec-5] (98099763060281344) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:31:56.324  INFO 52112 --- [http-nio-8080-exec-5] (98099763060281344) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98099763060281344,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:31:57.611  INFO 52112 --- [http-nio-8080-exec-7] (98099768470933504) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:31:57.611  INFO 52112 --- [http-nio-8080-exec-7] (98099768470933504) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98099768470933504,"message":"Full authentication is required to access this resource"}
2024-04-30 19:31:57.613  INFO 52112 --- [http-nio-8080-exec-6] (98099768479322112) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:31:57.615  INFO 52112 --- [http-nio-8080-exec-6] (98099768479322112) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099768479322112,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09463179628355127,"memoryUsage":9.099796295166016,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:32:01.339  INFO 52112 --- [http-nio-8080-exec-9] (98099784107298816) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:32:01.342  INFO 52112 --- [http-nio-8080-exec-9] (98099784107298816) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98099784107298816,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:32:02.614  INFO 52112 --- [http-nio-8080-exec-10] (98099789455036416) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:32:02.616  INFO 52112 --- [http-nio-8080-exec-10] (98099789455036416) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099789455036416,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09891451831750339,"memoryUsage":9.149250030517578,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:32:06.358  INFO 52112 --- [http-nio-8080-exec-2] (98099805158510592) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:32:06.362  INFO 52112 --- [http-nio-8080-exec-2] (98099805158510592) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98099805158510592,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:32:07.615  INFO 52112 --- [http-nio-8080-exec-1] (98099810430750720) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:32:07.616  INFO 52112 --- [http-nio-8080-exec-1] (98099810430750720) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98099810430750720,"message":"Full authentication is required to access this resource"}
2024-04-30 19:32:07.617  INFO 52112 --- [http-nio-8080-exec-3] (98099810439139328) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:32:07.619  INFO 52112 --- [http-nio-8080-exec-3] (98099810439139328) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099810439139328,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07243419710263212,"memoryUsage":9.16650390625,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:32:11.297  INFO 52112 --- [http-nio-8080-exec-4] (98099825874178048) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:32:11.300  INFO 52112 --- [http-nio-8080-exec-4] (98099825874178048) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98099825874178048,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:32:12.619  INFO 52112 --- [http-nio-8080-exec-8] (98099831419047936) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:32:12.620  INFO 52112 --- [http-nio-8080-exec-8] (98099831419047936) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98099831419047936,"message":"Full authentication is required to access this resource"}
2024-04-30 19:32:12.622  INFO 52112 --- [http-nio-8080-exec-5] (98099831431630848) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:32:12.624  INFO 52112 --- [http-nio-8080-exec-5] (98099831431630848) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099831431630848,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07114679216554778,"memoryUsage":9.160652160644531,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:32:16.354  INFO 52112 --- [http-nio-8080-exec-7] (98099847084773376) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:32:16.357  INFO 52112 --- [http-nio-8080-exec-7] (98099847084773376) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98099847084773376,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:32:17.609  INFO 52112 --- [http-nio-8080-exec-6] (98099852348624896) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:32:17.612  INFO 52112 --- [http-nio-8080-exec-6] (98099852348624896) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98099852348624896,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.11005979367895394,"memoryUsage":9.158302307128906,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:32:21.354  INFO 52112 --- [http-nio-8080-exec-9] (98099868056293376) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:32:21.356  INFO 52112 --- [http-nio-8080-exec-9] (98099868056293376) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099868056293376,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:32:22.618  INFO 52112 --- [http-nio-8080-exec-10] (98099873357893632) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:32:22.619  INFO 52112 --- [http-nio-8080-exec-10] (98099873357893632) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98099873357893632,"message":"Full authentication is required to access this resource"}
2024-04-30 19:32:22.621  INFO 52112 --- [http-nio-8080-exec-2] (98099873370476544) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:32:22.623  INFO 52112 --- [http-nio-8080-exec-2] (98099873370476544) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099873370476544,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1199166498622034,"memoryUsage":9.159046173095703,"networkUpload":0.001953125,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:32:26.338  INFO 52112 --- [http-nio-8080-exec-1] (98099888960704512) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:32:26.340  INFO 52112 --- [http-nio-8080-exec-1] (98099888960704512) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099888960704512,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:32:27.620  INFO 52112 --- [http-nio-8080-exec-3] (98099894337802240) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:32:27.622  INFO 52112 --- [http-nio-8080-exec-3] (98099894337802240) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099894337802240,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09677634208072465,"memoryUsage":9.156105041503906,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:32:31.350  INFO 52112 --- [http-nio-8080-exec-4] (98099909982556160) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:32:31.353  INFO 52112 --- [http-nio-8080-exec-4] (98099909982556160) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98099909982556160,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:32:33.555  INFO 52112 --- [http-nio-8080-exec-8] (98099919230996480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:32:33.555  INFO 52112 --- [http-nio-8080-exec-8] (98099919230996480) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98099919230996480,"message":"Full authentication is required to access this resource"}
2024-04-30 19:32:33.557  INFO 52112 --- [http-nio-8080-exec-5] (98099919239385088) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:32:33.559  INFO 52112 --- [http-nio-8080-exec-5] (98099919239385088) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099919239385088,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.11959322033898305,"memoryUsage":9.186447143554688,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:32:36.408  INFO 52112 --- [http-nio-8080-exec-7] (98099931197345792) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:32:36.412  INFO 52112 --- [http-nio-8080-exec-7] (98099931197345792) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98099931197345792,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:32:38.540  INFO 52112 --- [http-nio-8080-exec-6] (98099940139601920) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:32:38.542  INFO 52112 --- [http-nio-8080-exec-6] (98099940139601920) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099940139601920,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.15348288075560804,"memoryUsage":9.200313568115234,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:32:41.410  INFO 52112 --- [http-nio-8080-exec-9] (98099952177254400) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:32:41.413  INFO 52112 --- [http-nio-8080-exec-9] (98099952177254400) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98099952177254400,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:32:43.541  INFO 52112 --- [http-nio-8080-exec-10] (98099961115316224) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:32:43.541  INFO 52112 --- [http-nio-8080-exec-10] (98099961115316224) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98099961115316224,"message":"Full authentication is required to access this resource"}
2024-04-30 19:32:43.544  INFO 52112 --- [http-nio-8080-exec-2] (98099961127899136) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:32:43.546  INFO 52112 --- [http-nio-8080-exec-2] (98099961127899136) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98099961127899136,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09426924381146151,"memoryUsage":9.207962036132812,"networkUpload":0.00390625,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:32:46.335  INFO 52112 --- [http-nio-8080-exec-1] (98099972834201600) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:32:46.338  INFO 52112 --- [http-nio-8080-exec-1] (98099972834201600) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98099972834201600,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:32:48.546  INFO 52112 --- [http-nio-8080-exec-3] (98099982107807744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:32:48.546  INFO 52112 --- [http-nio-8080-exec-3] (98099982107807744) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98099982107807744,"message":"Full authentication is required to access this resource"}
2024-04-30 19:32:48.549  INFO 52112 --- [http-nio-8080-exec-4] (98099982120390656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:32:48.550  INFO 52112 --- [http-nio-8080-exec-4] (98099982120390656) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"id":98099982120390656,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0827628278994103,"memoryUsage":9.398975372314453,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:32:51.388  INFO 52112 --- [http-nio-8080-exec-8] (98099994028019712) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:32:51.391  INFO 52112 --- [http-nio-8080-exec-8] (98099994028019712) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98099994028019712,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:32:53.547  INFO 52112 --- [http-nio-8080-exec-5] (98100003083522048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:32:53.549  INFO 52112 --- [http-nio-8080-exec-5] (98100003083522048) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98100003083522048,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.12354776604925978,"memoryUsage":9.397575378417969,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:32:56.342  INFO 52112 --- [http-nio-8080-exec-7] (98100014806601728) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:32:56.345  INFO 52112 --- [http-nio-8080-exec-7] (98100014806601728) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98100014806601728,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:32:58.554  INFO 52112 --- [http-nio-8080-exec-6] (98100024084402176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:32:58.554  INFO 52112 --- [http-nio-8080-exec-6] (98100024084402176) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98100024084402176,"message":"Full authentication is required to access this resource"}
2024-04-30 19:32:58.556  INFO 52112 --- [http-nio-8080-exec-9] (98100024092790784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:32:58.558  INFO 52112 --- [http-nio-8080-exec-9] (98100024092790784) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98100024092790784,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.12545138424501806,"memoryUsage":9.389598846435547,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:33:01.375  INFO 52112 --- [http-nio-8080-exec-10] (98100035916533760) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:33:01.379  INFO 52112 --- [http-nio-8080-exec-10] (98100035916533760) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98100035916533760,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:33:03.554  INFO 52112 --- [http-nio-8080-exec-2] (98100045051727872) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:33:03.555  INFO 52112 --- [http-nio-8080-exec-2] (98100045051727872) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98100045051727872,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09721949623814197,"memoryUsage":9.409137725830078,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:33:06.325  INFO 52112 --- [http-nio-8080-exec-1] (98100056678338560) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:33:06.329  INFO 52112 --- [http-nio-8080-exec-1] (98100056678338560) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98100056678338560,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:33:08.544  INFO 52112 --- [http-nio-8080-exec-3] (98100065985499136) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:33:08.544  INFO 52112 --- [http-nio-8080-exec-3] (98100065985499136) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98100065985499136,"message":"Full authentication is required to access this resource"}
2024-04-30 19:33:08.546  INFO 52112 --- [http-nio-8080-exec-4] (98100065993887744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:33:08.547  INFO 52112 --- [http-nio-8080-exec-4] (98100065993887744) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"id":98100065993887744,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.10961328976034858,"memoryUsage":9.252391815185547,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:33:11.314  INFO 52112 --- [http-nio-8080-exec-8] (98100077603721216) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:33:11.318  INFO 52112 --- [http-nio-8080-exec-8] (98100077603721216) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98100077603721216,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:33:13.544  INFO 52112 --- [http-nio-8080-exec-5] (98100086957019136) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:33:13.546  INFO 52112 --- [http-nio-8080-exec-5] (98100086957019136) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98100086957019136,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.06888135593220339,"memoryUsage":9.2720947265625,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:33:16.438  INFO 52112 --- [http-nio-8080-exec-7] (98100099095334912) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:33:16.441  INFO 52112 --- [http-nio-8080-exec-7] (98100099095334912) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98100099095334912,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:33:18.547  INFO 52112 --- [http-nio-8080-exec-6] (98100107941122048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:33:18.547  INFO 52112 --- [http-nio-8080-exec-6] (98100107941122048) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98100107941122048,"message":"Full authentication is required to access this resource"}
2024-04-30 19:33:18.550  INFO 52112 --- [http-nio-8080-exec-9] (98100107949510656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:33:18.552  INFO 52112 --- [http-nio-8080-exec-9] (98100107949510656) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98100107949510656,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.15782571634646908,"memoryUsage":9.309028625488281,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:33:21.469  INFO 52112 --- [http-nio-8080-exec-10] (98100120196878336) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:33:21.472  INFO 52112 --- [http-nio-8080-exec-10] (98100120196878336) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98100120196878336,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:33:23.545  INFO 52112 --- [http-nio-8080-exec-2] (98100128904253440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:33:23.547  INFO 52112 --- [http-nio-8080-exec-2] (98100128904253440) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98100128904253440,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.17506361323155217,"memoryUsage":9.214195251464844,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:33:26.414  INFO 52112 --- [http-nio-8080-exec-1] (98100140937711616) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:33:26.417  INFO 52112 --- [http-nio-8080-exec-1] (98100140937711616) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98100140937711616,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:33:28.546  INFO 52112 --- [http-nio-8080-exec-3] (98100149879967744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:33:28.547  INFO 52112 --- [http-nio-8080-exec-3] (98100149879967744) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98100149879967744,"message":"Full authentication is required to access this resource"}
2024-04-30 19:33:28.549  INFO 52112 --- [http-nio-8080-exec-4] (98100149892550656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:33:28.550  INFO 52112 --- [http-nio-8080-exec-4] (98100149892550656) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"id":98100149892550656,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.17915629503471767,"memoryUsage":9.22903823852539,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:33:31.358  INFO 52112 --- [http-nio-8080-exec-8] (98100161674350592) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:33:31.361  INFO 52112 --- [http-nio-8080-exec-8] (98100161674350592) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98100161674350592,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:33:33.552  INFO 52112 --- [http-nio-8080-exec-5] (98100170876653568) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:33:33.552  INFO 52112 --- [http-nio-8080-exec-5] (98100170876653568) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98100170876653568,"message":"Full authentication is required to access this resource"}
2024-04-30 19:33:33.555  INFO 52112 --- [http-nio-8080-exec-7] (98100170889236480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:33:33.557  INFO 52112 --- [http-nio-8080-exec-7] (98100170889236480) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98100170889236480,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.10616164310482795,"memoryUsage":9.252643585205078,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:33:36.376  INFO 52112 --- [http-nio-8080-exec-6] (98100182721368064) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:33:36.379  INFO 52112 --- [http-nio-8080-exec-6] (98100182721368064) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98100182721368064,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:33:41.387  INFO 52112 --- [http-nio-8080-exec-9] (98100203739025408) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:33:41.391  INFO 52112 --- [http-nio-8080-exec-9] (98100203739025408) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98100203739025408,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:33:44.051  INFO 52112 --- [http-nio-8080-exec-10] (98100214912651264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:33:44.052  INFO 52112 --- [http-nio-8080-exec-10] (98100214912651264) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98100214912651264,"message":"Full authentication is required to access this resource"}
2024-04-30 19:33:44.055  INFO 52112 --- [http-nio-8080-exec-2] (98100214929428480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:33:44.058  INFO 52112 --- [http-nio-8080-exec-2] (98100214929428480) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98100214929428480,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.15769380095768085,"memoryUsage":9.019943237304688,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:33:46.357  INFO 52112 --- [http-nio-8080-exec-1] (98100224584716288) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:33:46.360  INFO 52112 --- [http-nio-8080-exec-1] (98100224584716288) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98100224584716288,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:33:47.607  INFO 52112 --- [http-nio-8080-exec-3] (98100229827596288) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:33:47.609  INFO 52112 --- [http-nio-8080-exec-3] (98100229827596288) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98100229827596288,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07846164172092086,"memoryUsage":9.071258544921875,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:33:51.305  INFO 52112 --- [http-nio-8080-exec-4] (98100245338132480) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:33:51.308  INFO 52112 --- [http-nio-8080-exec-4] (98100245338132480) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98100245338132480,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:33:52.609  INFO 52112 --- [http-nio-8080-exec-8] (98100250807504896) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:33:52.609  INFO 52112 --- [http-nio-8080-exec-8] (98100250807504896) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98100250807504896,"message":"Full authentication is required to access this resource"}
2024-04-30 19:33:52.611  INFO 52112 --- [http-nio-8080-exec-5] (98100250815893504) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:33:52.613  INFO 52112 --- [http-nio-8080-exec-5] (98100250815893504) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98100250815893504,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.06087137794454868,"memoryUsage":9.074905395507812,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:33:56.327  INFO 52112 --- [http-nio-8080-exec-7] (98100266401927168) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:33:56.330  INFO 52112 --- [http-nio-8080-exec-7] (98100266401927168) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98100266401927168,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:33:58.555  INFO 52112 --- [http-nio-8080-exec-6] (98100275746836480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:33:58.556  INFO 52112 --- [http-nio-8080-exec-6] (98100275746836480) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98100275746836480,"message":"Full authentication is required to access this resource"}
2024-04-30 19:33:58.557  INFO 52112 --- [http-nio-8080-exec-9] (98100275755225088) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:33:58.560  INFO 52112 --- [http-nio-8080-exec-9] (98100275755225088) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98100275755225088,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.10264406779661017,"memoryUsage":9.060771942138672,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:34:01.375  INFO 52112 --- [http-nio-8080-exec-10] (98100287574773760) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:34:01.379  INFO 52112 --- [http-nio-8080-exec-10] (98100287574773760) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98100287574773760,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:34:03.554  INFO 52112 --- [http-nio-8080-exec-2] (98100296714162176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:34:03.556  INFO 52112 --- [http-nio-8080-exec-2] (98100296714162176) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98100296714162176,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09250084832032575,"memoryUsage":9.051620483398438,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:34:06.309  INFO 52112 --- [http-nio-8080-exec-1] (98100308269469696) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:34:06.312  INFO 52112 --- [http-nio-8080-exec-1] (98100308269469696) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98100308269469696,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:34:08.555  INFO 52112 --- [http-nio-8080-exec-3] (98100317689876480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:34:08.555  INFO 52112 --- [http-nio-8080-exec-3] (98100317689876480) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98100317689876480,"message":"Full authentication is required to access this resource"}
2024-04-30 19:34:08.557  INFO 52112 --- [http-nio-8080-exec-4] (98100317698265088) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:34:08.559  INFO 52112 --- [http-nio-8080-exec-4] (98100317698265088) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98100317698265088,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07871878393051031,"memoryUsage":9.063186645507812,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:34:11.362  INFO 52112 --- [http-nio-8080-exec-8] (98100329463287808) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:34:11.366  INFO 52112 --- [http-nio-8080-exec-8] (98100329463287808) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98100329463287808,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:34:12.610  INFO 52112 --- [http-nio-8080-exec-5] (98100334697779200) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:34:12.612  INFO 52112 --- [http-nio-8080-exec-5] (98100334697779200) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98100334697779200,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09991742361684558,"memoryUsage":9.06875991821289,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:34:16.354  INFO 52112 --- [http-nio-8080-exec-7] (98100350401253376) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:34:16.358  INFO 52112 --- [http-nio-8080-exec-7] (98100350401253376) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98100350401253376,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:34:18.543  INFO 52112 --- [http-nio-8080-exec-6] (98100359582584832) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:34:18.543  INFO 52112 --- [http-nio-8080-exec-6] (98100359582584832) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98100359582584832,"message":"Full authentication is required to access this resource"}
2024-04-30 19:34:18.545  INFO 52112 --- [http-nio-8080-exec-9] (98100359590973440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:34:18.547  INFO 52112 --- [http-nio-8080-exec-9] (98100359590973440) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98100359590973440,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.23922095366017462,"memoryUsage":9.241168975830078,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:34:21.362  INFO 52112 --- [http-nio-8080-exec-10] (98100371406327808) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:34:21.365  INFO 52112 --- [http-nio-8080-exec-10] (98100371406327808) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98100371406327808,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:34:23.550  INFO 52112 --- [http-nio-8080-exec-2] (98100380583464960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:34:23.550  INFO 52112 --- [http-nio-8080-exec-2] (98100380583464960) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98100380583464960,"message":"Full authentication is required to access this resource"}
2024-04-30 19:34:23.553  INFO 52112 --- [http-nio-8080-exec-1] (98100380596047872) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:34:23.554  INFO 52112 --- [http-nio-8080-exec-1] (98100380596047872) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"id":98100380596047872,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09527868852459016,"memoryUsage":9.19991683959961,"networkUpload":0.001953125,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:34:26.340  INFO 52112 --- [http-nio-8080-exec-3] (98100392285573120) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:34:26.343  INFO 52112 --- [http-nio-8080-exec-3] (98100392285573120) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98100392285573120,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:34:28.545  INFO 52112 --- [http-nio-8080-exec-4] (98100401534013440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:34:28.547  INFO 52112 --- [http-nio-8080-exec-4] (98100401534013440) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98100401534013440,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09298553858629545,"memoryUsage":9.251358032226562,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:34:31.396  INFO 52112 --- [http-nio-8080-exec-8] (98100413491974144) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:34:31.399  INFO 52112 --- [http-nio-8080-exec-8] (98100413491974144) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98100413491974144,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:34:33.546  INFO 52112 --- [http-nio-8080-exec-5] (98100422509727744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:34:33.547  INFO 52112 --- [http-nio-8080-exec-5] (98100422509727744) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98100422509727744,"message":"Full authentication is required to access this resource"}
2024-04-30 19:34:33.549  INFO 52112 --- [http-nio-8080-exec-7] (98100422522310656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:34:33.550  INFO 52112 --- [http-nio-8080-exec-7] (98100422522310656) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"id":98100422522310656,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1349570772609303,"memoryUsage":9.592647552490234,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:34:36.394  INFO 52112 --- [http-nio-8080-exec-6] (98100434455105536) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:34:36.401  INFO 52112 --- [http-nio-8080-exec-6] (98100434455105536) com.example.filter.RequestLogFilter      : 请求处理耗时: 7ms | 响应结果: {"id":98100434455105536,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:34:38.542  INFO 52112 --- [http-nio-8080-exec-9] (98100443464470528) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:34:38.545  INFO 52112 --- [http-nio-8080-exec-9] (98100443464470528) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98100443464470528,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.12710791175098313,"memoryUsage":9.574256896972656,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:34:41.429  INFO 52112 --- [http-nio-8080-exec-10] (98100455573426176) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:34:41.433  INFO 52112 --- [http-nio-8080-exec-10] (98100455573426176) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98100455573426176,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:34:43.555  INFO 52112 --- [http-nio-8080-exec-2] (98100464490516480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:34:43.555  INFO 52112 --- [http-nio-8080-exec-2] (98100464490516480) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98100464490516480,"message":"Full authentication is required to access this resource"}
2024-04-30 19:34:43.557  INFO 52112 --- [http-nio-8080-exec-1] (98100464498905088) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:34:43.559  INFO 52112 --- [http-nio-8080-exec-1] (98100464498905088) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98100464498905088,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.11707936507936507,"memoryUsage":9.58810806274414,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:34:46.367  INFO 52112 --- [http-nio-8080-exec-3] (98100476284899328) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:34:46.371  INFO 52112 --- [http-nio-8080-exec-3] (98100476284899328) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98100476284899328,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:34:48.552  INFO 52112 --- [http-nio-8080-exec-4] (98100485449453568) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:34:48.553  INFO 52112 --- [http-nio-8080-exec-4] (98100485449453568) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"id":98100485449453568,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.10883509207531554,"memoryUsage":9.262004852294922,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:34:51.360  INFO 52112 --- [http-nio-8080-exec-8] (98100497222864896) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:34:51.363  INFO 52112 --- [http-nio-8080-exec-8] (98100497222864896) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98100497222864896,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:34:53.555  INFO 52112 --- [http-nio-8080-exec-5] (98100506433556480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:34:53.555  INFO 52112 --- [http-nio-8080-exec-5] (98100506433556480) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98100506433556480,"message":"Full authentication is required to access this resource"}
2024-04-30 19:34:53.557  INFO 52112 --- [http-nio-8080-exec-7] (98100506441945088) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:34:53.559  INFO 52112 --- [http-nio-8080-exec-7] (98100506441945088) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98100506441945088,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1126123171771496,"memoryUsage":9.259201049804688,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:34:56.347  INFO 52112 --- [http-nio-8080-exec-6] (98100518144053248) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:34:56.350  INFO 52112 --- [http-nio-8080-exec-6] (98100518144053248) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98100518144053248,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:34:58.550  INFO 52112 --- [http-nio-8080-exec-9] (98100527384104960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:34:58.552  INFO 52112 --- [http-nio-8080-exec-9] (98100527384104960) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98100527384104960,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07758085649265568,"memoryUsage":9.646148681640625,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:35:01.520  INFO 52112 --- [http-nio-8080-exec-10] (98100539841187840) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:35:01.523  INFO 52112 --- [http-nio-8080-exec-10] (98100539841187840) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98100539841187840,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:35:03.555  INFO 52112 --- [http-nio-8080-exec-2] (98100548376596480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:35:03.555  INFO 52112 --- [http-nio-8080-exec-2] (98100548376596480) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98100548376596480,"message":"Full authentication is required to access this resource"}
2024-04-30 19:35:03.557  INFO 52112 --- [http-nio-8080-exec-1] (98100548384985088) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:35:03.559  INFO 52112 --- [http-nio-8080-exec-1] (98100548384985088) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98100548384985088,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.21925201600101593,"memoryUsage":9.83529281616211,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:35:06.380  INFO 52112 --- [http-nio-8080-exec-3] (98100560225505280) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:35:06.383  INFO 52112 --- [http-nio-8080-exec-3] (98100560225505280) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98100560225505280,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:35:08.555  INFO 52112 --- [http-nio-8080-exec-4] (98100569348116480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:35:08.557  INFO 52112 --- [http-nio-8080-exec-4] (98100569348116480) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98100569348116480,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.053927315357561546,"memoryUsage":9.754718780517578,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:35:11.309  INFO 52112 --- [http-nio-8080-exec-8] (98100580899229696) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:35:11.313  INFO 52112 --- [http-nio-8080-exec-8] (98100580899229696) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98100580899229696,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:35:13.544  INFO 52112 --- [http-nio-8080-exec-5] (98100590273499136) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:35:13.545  INFO 52112 --- [http-nio-8080-exec-5] (98100590273499136) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98100590273499136,"message":"Full authentication is required to access this resource"}
2024-04-30 19:35:13.546  INFO 52112 --- [http-nio-8080-exec-7] (98100590281887744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:35:13.548  INFO 52112 --- [http-nio-8080-exec-7] (98100590281887744) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98100590281887744,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.05425139893544425,"memoryUsage":9.763053894042969,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:35:16.337  INFO 52112 --- [http-nio-8080-exec-6] (98100601988190208) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:35:16.341  INFO 52112 --- [http-nio-8080-exec-6] (98100601988190208) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98100601988190208,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:35:21.315  INFO 52112 --- [http-nio-8080-exec-9] (98100622867435520) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:35:21.318  INFO 52112 --- [http-nio-8080-exec-9] (98100622867435520) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98100622867435520,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:35:26.428  INFO 52112 --- [http-nio-8080-exec-10] (98100644312911872) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:35:26.431  INFO 52112 --- [http-nio-8080-exec-10] (98100644312911872) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98100644312911872,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:35:31.377  INFO 52112 --- [http-nio-8080-exec-2] (98100665070522368) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:35:31.381  INFO 52112 --- [http-nio-8080-exec-2] (98100665070522368) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98100665070522368,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:35:36.434  INFO 52112 --- [http-nio-8080-exec-1] (98100686281117696) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:35:36.437  INFO 52112 --- [http-nio-8080-exec-1] (98100686281117696) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98100686281117696,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:35:41.460  INFO 52112 --- [http-nio-8080-exec-3] (98100707361689600) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:35:41.464  INFO 52112 --- [http-nio-8080-exec-3] (98100707361689600) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98100707361689600,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:35:46.413  INFO 52112 --- [http-nio-8080-exec-4] (98100728136077312) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:35:46.418  INFO 52112 --- [http-nio-8080-exec-4] (98100728136077312) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98100728136077312,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:35:51.360  INFO 52112 --- [http-nio-8080-exec-8] (98100748881104896) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:35:51.363  INFO 52112 --- [http-nio-8080-exec-8] (98100748881104896) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98100748881104896,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:35:56.390  INFO 52112 --- [http-nio-8080-exec-5] (98100769982648320) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:35:56.393  INFO 52112 --- [http-nio-8080-exec-5] (98100769982648320) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98100769982648320,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:36:01.473  INFO 52112 --- [http-nio-8080-exec-7] (98100791302295552) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:36:01.476  INFO 52112 --- [http-nio-8080-exec-7] (98100791302295552) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98100791302295552,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:36:04.547  INFO 52112 --- [http-nio-8080-exec-6] (98100804195586048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:36:04.548  INFO 52112 --- [http-nio-8080-exec-6] (98100804195586048) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98100804195586048,"message":"Full authentication is required to access this resource"}
2024-04-30 19:36:04.551  INFO 52112 --- [http-nio-8080-exec-9] (98100804212363264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:36:04.553  INFO 52112 --- [http-nio-8080-exec-9] (98100804212363264) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98100804212363264,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.18250435455777048,"memoryUsage":9.86956787109375,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:36:06.396  INFO 52112 --- [http-nio-8080-exec-10] (98100811950854144) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:36:06.399  INFO 52112 --- [http-nio-8080-exec-10] (98100811950854144) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98100811950854144,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:36:11.382  INFO 52112 --- [http-nio-8080-exec-2] (98100832863653888) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:36:11.386  INFO 52112 --- [http-nio-8080-exec-2] (98100832863653888) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98100832863653888,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:36:16.435  INFO 52112 --- [http-nio-8080-exec-1] (98100854057472000) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:36:16.439  INFO 52112 --- [http-nio-8080-exec-1] (98100854057472000) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98100854057472000,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:36:18.794  INFO 52112 --- [http-nio-8080-exec-3] (98100863951835136) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:36:18.795  INFO 52112 --- [http-nio-8080-exec-3] (98100863951835136) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98100863951835136,"message":"Full authentication is required to access this resource"}
2024-04-30 19:36:18.797  INFO 52112 --- [http-nio-8080-exec-4] (98100863964418048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:36:18.800  INFO 52112 --- [http-nio-8080-exec-4] (98100863964418048) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98100863964418048,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.182145476365091,"memoryUsage":10.114204406738281,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:36:21.435  INFO 52112 --- [http-nio-8080-exec-8] (98100875028992000) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:36:21.437  INFO 52112 --- [http-nio-8080-exec-8] (98100875028992000) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98100875028992000,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:36:23.546  INFO 52112 --- [http-nio-8080-exec-5] (98100883883167744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:36:23.548  INFO 52112 --- [http-nio-8080-exec-5] (98100883883167744) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98100883883167744,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.15267967079256042,"memoryUsage":9.694934844970703,"networkUpload":0.001953125,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:36:26.335  INFO 52112 --- [http-nio-8080-exec-7] (98100895581081600) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:36:26.338  INFO 52112 --- [http-nio-8080-exec-7] (98100895581081600) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98100895581081600,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:36:28.544  INFO 52112 --- [http-nio-8080-exec-6] (98100904846299136) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:36:28.544  INFO 52112 --- [http-nio-8080-exec-6] (98100904846299136) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98100904846299136,"message":"Full authentication is required to access this resource"}
2024-04-30 19:36:28.546  INFO 52112 --- [http-nio-8080-exec-9] (98100904854687744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:36:28.548  INFO 52112 --- [http-nio-8080-exec-9] (98100904854687744) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98100904854687744,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0806484994825802,"memoryUsage":9.689464569091797,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:36:31.332  INFO 52112 --- [http-nio-8080-exec-10] (98100916540018688) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:36:31.335  INFO 52112 --- [http-nio-8080-exec-10] (98100916540018688) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98100916540018688,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:36:33.542  INFO 52112 --- [http-nio-8080-exec-2] (98100925809430528) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:36:33.544  INFO 52112 --- [http-nio-8080-exec-2] (98100925809430528) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98100925809430528,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.10200680045336356,"memoryUsage":9.683372497558594,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:36:36.317  INFO 52112 --- [http-nio-8080-exec-1] (98100937448624128) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:36:36.320  INFO 52112 --- [http-nio-8080-exec-1] (98100937448624128) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98100937448624128,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:36:38.549  INFO 52112 --- [http-nio-8080-exec-3] (98100946810310656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:36:38.549  INFO 52112 --- [http-nio-8080-exec-3] (98100946810310656) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98100946810310656,"message":"Full authentication is required to access this resource"}
2024-04-30 19:36:38.551  INFO 52112 --- [http-nio-8080-exec-4] (98100946818699264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:36:38.552  INFO 52112 --- [http-nio-8080-exec-4] (98100946818699264) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"id":98100946818699264,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0635881907645723,"memoryUsage":9.67708969116211,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:36:41.342  INFO 52112 --- [http-nio-8080-exec-8] (98100958525001728) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:36:41.345  INFO 52112 --- [http-nio-8080-exec-8] (98100958525001728) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98100958525001728,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:36:43.551  INFO 52112 --- [http-nio-8080-exec-5] (98100967790219264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:36:43.553  INFO 52112 --- [http-nio-8080-exec-5] (98100967790219264) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98100967790219264,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.18883052253248547,"memoryUsage":9.389659881591797,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:36:46.351  INFO 52112 --- [http-nio-8080-exec-7] (98100979534270464) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:36:46.354  INFO 52112 --- [http-nio-8080-exec-7] (98100979534270464) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98100979534270464,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:36:48.554  INFO 52112 --- [http-nio-8080-exec-6] (98100988774322176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:36:48.554  INFO 52112 --- [http-nio-8080-exec-6] (98100988774322176) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98100988774322176,"message":"Full authentication is required to access this resource"}
2024-04-30 19:36:48.556  INFO 52112 --- [http-nio-8080-exec-9] (98100988782710784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:36:48.558  INFO 52112 --- [http-nio-8080-exec-9] (98100988782710784) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98100988782710784,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09572637808822518,"memoryUsage":9.38494873046875,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:36:51.326  INFO 52112 --- [http-nio-8080-exec-10] (98101000400932864) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:36:51.330  INFO 52112 --- [http-nio-8080-exec-10] (98101000400932864) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98101000400932864,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:36:53.544  INFO 52112 --- [http-nio-8080-exec-2] (98101009703899136) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:36:53.546  INFO 52112 --- [http-nio-8080-exec-2] (98101009703899136) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101009703899136,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07998619737750172,"memoryUsage":9.381473541259766,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:36:56.366  INFO 52112 --- [http-nio-8080-exec-1] (98101021540225024) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:36:56.369  INFO 52112 --- [http-nio-8080-exec-1] (98101021540225024) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98101021540225024,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:36:58.552  INFO 52112 --- [http-nio-8080-exec-3] (98101030708973568) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:36:58.552  INFO 52112 --- [http-nio-8080-exec-3] (98101030708973568) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98101030708973568,"message":"Full authentication is required to access this resource"}
2024-04-30 19:36:58.554  INFO 52112 --- [http-nio-8080-exec-4] (98101030717362176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:36:58.555  INFO 52112 --- [http-nio-8080-exec-4] (98101030717362176) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"id":98101030717362176,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0807094733947477,"memoryUsage":9.381362915039062,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:37:01.327  INFO 52112 --- [http-nio-8080-exec-8] (98101042343972864) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:37:01.329  INFO 52112 --- [http-nio-8080-exec-8] (98101042343972864) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98101042343972864,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:37:03.548  INFO 52112 --- [http-nio-8080-exec-5] (98101051663716352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:37:03.549  INFO 52112 --- [http-nio-8080-exec-5] (98101051663716352) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"id":98101051663716352,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.08807938018213946,"memoryUsage":9.391677856445312,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:37:06.332  INFO 52112 --- [http-nio-8080-exec-7] (98101063340658688) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:37:06.335  INFO 52112 --- [http-nio-8080-exec-7] (98101063340658688) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98101063340658688,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:37:08.543  INFO 52112 --- [http-nio-8080-exec-6] (98101072614264832) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:37:08.544  INFO 52112 --- [http-nio-8080-exec-6] (98101072614264832) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98101072614264832,"message":"Full authentication is required to access this resource"}
2024-04-30 19:37:08.545  INFO 52112 --- [http-nio-8080-exec-9] (98101072622653440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:37:08.547  INFO 52112 --- [http-nio-8080-exec-9] (98101072622653440) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101072622653440,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.071619098426247,"memoryUsage":9.385440826416016,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:37:11.300  INFO 52112 --- [http-nio-8080-exec-10] (98101084177960960) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:37:11.303  INFO 52112 --- [http-nio-8080-exec-10] (98101084177960960) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98101084177960960,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:37:13.542  INFO 52112 --- [http-nio-8080-exec-2] (98101093581590528) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:37:13.544  INFO 52112 --- [http-nio-8080-exec-2] (98101093581590528) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101093581590528,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.05723348503654668,"memoryUsage":9.385295867919922,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:37:16.860  INFO 52112 --- [http-nio-8080-exec-1] (98101107498291200) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:37:16.863  INFO 52112 --- [http-nio-8080-exec-1] (98101107498291200) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98101107498291200,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:37:18.546  INFO 52112 --- [http-nio-8080-exec-3] (98101114569887744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:37:18.546  INFO 52112 --- [http-nio-8080-exec-3] (98101114569887744) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98101114569887744,"message":"Full authentication is required to access this resource"}
2024-04-30 19:37:18.549  INFO 52112 --- [http-nio-8080-exec-4] (98101114582470656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:37:18.550  INFO 52112 --- [http-nio-8080-exec-4] (98101114582470656) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"id":98101114582470656,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1563125399190973,"memoryUsage":9.386001586914062,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:37:21.395  INFO 52112 --- [http-nio-8080-exec-8] (98101126519459840) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:37:21.398  INFO 52112 --- [http-nio-8080-exec-8] (98101126519459840) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98101126519459840,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:37:23.546  INFO 52112 --- [http-nio-8080-exec-5] (98101135541407744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:37:23.548  INFO 52112 --- [http-nio-8080-exec-5] (98101135541407744) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101135541407744,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.16194597429845267,"memoryUsage":9.394096374511719,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:37:26.373  INFO 52112 --- [http-nio-8080-exec-7] (98101147398705152) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:37:26.376  INFO 52112 --- [http-nio-8080-exec-7] (98101147398705152) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98101147398705152,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:37:28.555  INFO 52112 --- [http-nio-8080-exec-6] (98101156550676480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:37:28.555  INFO 52112 --- [http-nio-8080-exec-6] (98101156550676480) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98101156550676480,"message":"Full authentication is required to access this resource"}
2024-04-30 19:37:28.557  INFO 52112 --- [http-nio-8080-exec-9] (98101156559065088) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:37:28.559  INFO 52112 --- [http-nio-8080-exec-9] (98101156559065088) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101156559065088,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.10206831503065418,"memoryUsage":9.407878875732422,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:37:31.348  INFO 52112 --- [http-nio-8080-exec-10] (98101168265367552) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:37:31.352  INFO 52112 --- [http-nio-8080-exec-10] (98101168265367552) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98101168265367552,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:37:33.554  INFO 52112 --- [http-nio-8080-exec-2] (98101177518002176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:37:33.556  INFO 52112 --- [http-nio-8080-exec-2] (98101177518002176) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101177518002176,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.122,"memoryUsage":9.398555755615234,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:37:36.304  INFO 52112 --- [http-nio-8080-exec-1] (98101189052338176) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:37:36.307  INFO 52112 --- [http-nio-8080-exec-1] (98101189052338176) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98101189052338176,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:37:38.551  INFO 52112 --- [http-nio-8080-exec-3] (98101198476939264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:37:38.551  INFO 52112 --- [http-nio-8080-exec-3] (98101198476939264) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98101198476939264,"message":"Full authentication is required to access this resource"}
2024-04-30 19:37:38.553  INFO 52112 --- [http-nio-8080-exec-4] (98101198485327872) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:37:38.554  INFO 52112 --- [http-nio-8080-exec-4] (98101198485327872) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"id":98101198485327872,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.06449165402124431,"memoryUsage":9.405811309814453,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:37:41.398  INFO 52112 --- [http-nio-8080-exec-8] (98101210418122752) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:37:41.401  INFO 52112 --- [http-nio-8080-exec-8] (98101210418122752) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98101210418122752,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:37:43.555  INFO 52112 --- [http-nio-8080-exec-5] (98101219465236480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:37:43.556  INFO 52112 --- [http-nio-8080-exec-5] (98101219465236480) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98101219465236480,"message":"Full authentication is required to access this resource"}
2024-04-30 19:37:43.557  INFO 52112 --- [http-nio-8080-exec-7] (98101219473625088) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:37:43.559  INFO 52112 --- [http-nio-8080-exec-7] (98101219473625088) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101219473625088,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.13836065573770492,"memoryUsage":9.410205841064453,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:37:46.369  INFO 52112 --- [http-nio-8080-exec-6] (98101231268007936) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:37:46.372  INFO 52112 --- [http-nio-8080-exec-6] (98101231268007936) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98101231268007936,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:37:48.549  INFO 52112 --- [http-nio-8080-exec-9] (98101240411590656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:37:48.551  INFO 52112 --- [http-nio-8080-exec-9] (98101240411590656) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101240411590656,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0728952772073922,"memoryUsage":9.393836975097656,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:37:51.346  INFO 52112 --- [http-nio-8080-exec-10] (98101252143058944) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:37:51.350  INFO 52112 --- [http-nio-8080-exec-10] (98101252143058944) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98101252143058944,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:37:53.134  INFO 52112 --- [http-nio-8080-exec-2] (98101259642474496) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:37:53.135  INFO 52112 --- [http-nio-8080-exec-2] (98101259642474496) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98101259642474496,"message":"Full authentication is required to access this resource"}
2024-04-30 19:37:53.137  INFO 52112 --- [http-nio-8080-exec-1] (98101259655057408) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:37:53.140  INFO 52112 --- [http-nio-8080-exec-1] (98101259655057408) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98101259655057408,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.06774259171356886,"memoryUsage":9.38687515258789,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:37:56.332  INFO 52112 --- [http-nio-8080-exec-3] (98101273055858688) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:37:56.334  INFO 52112 --- [http-nio-8080-exec-3] (98101273055858688) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101273055858688,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:37:58.553  INFO 52112 --- [http-nio-8080-exec-4] (98101282371407872) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:37:58.553  INFO 52112 --- [http-nio-8080-exec-4] (98101282371407872) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98101282371407872,"message":"Full authentication is required to access this resource"}
2024-04-30 19:37:58.555  INFO 52112 --- [http-nio-8080-exec-8] (98101282379796480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:37:58.556  INFO 52112 --- [http-nio-8080-exec-8] (98101282379796480) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"id":98101282379796480,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.06353403851369677,"memoryUsage":9.446311950683594,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:38:01.326  INFO 52112 --- [http-nio-8080-exec-5] (98101294002212864) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:38:01.328  INFO 52112 --- [http-nio-8080-exec-5] (98101294002212864) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101294002212864,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:38:03.555  INFO 52112 --- [http-nio-8080-exec-7] (98101303351316480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:38:03.555  INFO 52112 --- [http-nio-8080-exec-7] (98101303351316480) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98101303351316480,"message":"Full authentication is required to access this resource"}
2024-04-30 19:38:03.557  INFO 52112 --- [http-nio-8080-exec-6] (98101303359705088) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:38:03.559  INFO 52112 --- [http-nio-8080-exec-6] (98101303359705088) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101303359705088,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.05035922916806553,"memoryUsage":9.482337951660156,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:38:06.362  INFO 52112 --- [http-nio-8080-exec-9] (98101315124727808) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:38:06.365  INFO 52112 --- [http-nio-8080-exec-9] (98101315124727808) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98101315124727808,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:38:07.608  INFO 52112 --- [http-nio-8080-exec-10] (98101320350830592) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:38:07.610  INFO 52112 --- [http-nio-8080-exec-10] (98101320350830592) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101320350830592,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.11299201761629507,"memoryUsage":9.597434997558594,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:38:11.359  INFO 52112 --- [http-nio-8080-exec-2] (98101336083664896) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:38:11.361  INFO 52112 --- [http-nio-8080-exec-2] (98101336083664896) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101336083664896,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:38:12.617  INFO 52112 --- [http-nio-8080-exec-1] (98101341360099328) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:38:12.617  INFO 52112 --- [http-nio-8080-exec-1] (98101341360099328) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98101341360099328,"message":"Full authentication is required to access this resource"}
2024-04-30 19:38:12.620  INFO 52112 --- [http-nio-8080-exec-3] (98101341372682240) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:38:12.620  INFO 52112 --- [http-nio-8080-exec-3] (98101341372682240) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"id":98101341372682240,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09947609692206942,"memoryUsage":9.621410369873047,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:38:16.335  INFO 52112 --- [http-nio-8080-exec-4] (98101356954521600) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:38:16.338  INFO 52112 --- [http-nio-8080-exec-4] (98101356954521600) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98101356954521600,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:38:17.605  INFO 52112 --- [http-nio-8080-exec-8] (98101362281287680) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:38:17.607  INFO 52112 --- [http-nio-8080-exec-8] (98101362281287680) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101362281287680,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.10647511685455045,"memoryUsage":9.306114196777344,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:38:21.360  INFO 52112 --- [http-nio-8080-exec-5] (98101378030899200) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:38:21.362  INFO 52112 --- [http-nio-8080-exec-5] (98101378030899200) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101378030899200,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:38:23.545  INFO 52112 --- [http-nio-8080-exec-7] (98101387195453440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:38:23.545  INFO 52112 --- [http-nio-8080-exec-7] (98101387195453440) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98101387195453440,"message":"Full authentication is required to access this resource"}
2024-04-30 19:38:23.547  INFO 52112 --- [http-nio-8080-exec-6] (98101387203842048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:38:23.549  INFO 52112 --- [http-nio-8080-exec-6] (98101387203842048) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101387203842048,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.11145469212153805,"memoryUsage":9.154586791992188,"networkUpload":0.001953125,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:38:26.403  INFO 52112 --- [http-nio-8080-exec-9] (98101399182774272) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:38:26.407  INFO 52112 --- [http-nio-8080-exec-9] (98101399182774272) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98101399182774272,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:38:28.548  INFO 52112 --- [http-nio-8080-exec-10] (98101408179556352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:38:28.548  INFO 52112 --- [http-nio-8080-exec-10] (98101408179556352) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98101408179556352,"message":"Full authentication is required to access this resource"}
2024-04-30 19:38:28.550  INFO 52112 --- [http-nio-8080-exec-2] (98101408187944960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:38:28.552  INFO 52112 --- [http-nio-8080-exec-2] (98101408187944960) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101408187944960,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1585691404164442,"memoryUsage":9.287109375,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:38:31.329  INFO 52112 --- [http-nio-8080-exec-1] (98101419843915776) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:38:31.333  INFO 52112 --- [http-nio-8080-exec-1] (98101419843915776) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98101419843915776,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:38:33.543  INFO 52112 --- [http-nio-8080-exec-3] (98101429130104832) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:38:33.544  INFO 52112 --- [http-nio-8080-exec-3] (98101429130104832) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"id":98101429130104832,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.12182224933902787,"memoryUsage":9.343727111816406,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:38:36.345  INFO 52112 --- [http-nio-8080-exec-4] (98101440882544640) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:38:36.349  INFO 52112 --- [http-nio-8080-exec-4] (98101440882544640) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98101440882544640,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:38:38.555  INFO 52112 --- [http-nio-8080-exec-8] (98101450151956480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:38:38.555  INFO 52112 --- [http-nio-8080-exec-8] (98101450151956480) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98101450151956480,"message":"Full authentication is required to access this resource"}
2024-04-30 19:38:38.557  INFO 52112 --- [http-nio-8080-exec-5] (98101450160345088) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:38:38.559  INFO 52112 --- [http-nio-8080-exec-5] (98101450160345088) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101450160345088,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.10366101694915254,"memoryUsage":9.338539123535156,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:38:41.358  INFO 52112 --- [http-nio-8080-exec-7] (98101461908590592) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:38:41.361  INFO 52112 --- [http-nio-8080-exec-7] (98101461908590592) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98101461908590592,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:38:43.549  INFO 52112 --- [http-nio-8080-exec-6] (98101471098310656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:38:43.550  INFO 52112 --- [http-nio-8080-exec-6] (98101471098310656) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"id":98101471098310656,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.13918829008649367,"memoryUsage":9.347427368164062,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:38:46.356  INFO 52112 --- [http-nio-8080-exec-9] (98101482871721984) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:38:46.358  INFO 52112 --- [http-nio-8080-exec-9] (98101482871721984) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101482871721984,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:38:48.544  INFO 52112 --- [http-nio-8080-exec-10] (98101492048859136) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:38:48.545  INFO 52112 --- [http-nio-8080-exec-10] (98101492048859136) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98101492048859136,"message":"Full authentication is required to access this resource"}
2024-04-30 19:38:48.546  INFO 52112 --- [http-nio-8080-exec-2] (98101492057247744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:38:48.548  INFO 52112 --- [http-nio-8080-exec-2] (98101492057247744) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101492057247744,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1251557070740182,"memoryUsage":9.347457885742188,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:38:51.390  INFO 52112 --- [http-nio-8080-exec-1] (98101503985848320) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:38:51.394  INFO 52112 --- [http-nio-8080-exec-1] (98101503985848320) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98101503985848320,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:38:53.555  INFO 52112 --- [http-nio-8080-exec-3] (98101513066516480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:38:53.555  INFO 52112 --- [http-nio-8080-exec-3] (98101513066516480) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98101513066516480,"message":"Full authentication is required to access this resource"}
2024-04-30 19:38:53.557  INFO 52112 --- [http-nio-8080-exec-4] (98101513074905088) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:38:53.559  INFO 52112 --- [http-nio-8080-exec-4] (98101513074905088) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101513074905088,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.17332641411520497,"memoryUsage":9.43868637084961,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:38:56.350  INFO 52112 --- [http-nio-8080-exec-8] (98101524789596160) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:38:56.354  INFO 52112 --- [http-nio-8080-exec-8] (98101524789596160) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98101524789596160,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:38:58.542  INFO 52112 --- [http-nio-8080-exec-5] (98101533983510528) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:38:58.544  INFO 52112 --- [http-nio-8080-exec-5] (98101533983510528) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101533983510528,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.11566454658710905,"memoryUsage":9.50076675415039,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:39:01.390  INFO 52112 --- [http-nio-8080-exec-7] (98101545928888320) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:39:01.393  INFO 52112 --- [http-nio-8080-exec-7] (98101545928888320) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98101545928888320,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:39:03.545  INFO 52112 --- [http-nio-8080-exec-6] (98101554967613440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:39:03.545  INFO 52112 --- [http-nio-8080-exec-6] (98101554967613440) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98101554967613440,"message":"Full authentication is required to access this resource"}
2024-04-30 19:39:03.547  INFO 52112 --- [http-nio-8080-exec-9] (98101554976002048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:39:03.549  INFO 52112 --- [http-nio-8080-exec-9] (98101554976002048) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101554976002048,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1585708550782818,"memoryUsage":9.565868377685547,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:39:06.351  INFO 52112 --- [http-nio-8080-exec-10] (98101566736830464) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:39:06.355  INFO 52112 --- [http-nio-8080-exec-10] (98101566736830464) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98101566736830464,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:39:08.550  INFO 52112 --- [http-nio-8080-exec-2] (98101575960104960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:39:08.551  INFO 52112 --- [http-nio-8080-exec-2] (98101575960104960) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98101575960104960,"message":"Full authentication is required to access this resource"}
2024-04-30 19:39:08.552  INFO 52112 --- [http-nio-8080-exec-1] (98101575968493568) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:39:08.554  INFO 52112 --- [http-nio-8080-exec-1] (98101575968493568) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101575968493568,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09285428609518731,"memoryUsage":9.564376831054688,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:39:11.338  INFO 52112 --- [http-nio-8080-exec-3] (98101587653824512) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:39:11.340  INFO 52112 --- [http-nio-8080-exec-3] (98101587653824512) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101587653824512,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:39:13.545  INFO 52112 --- [http-nio-8080-exec-4] (98101596910653440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:39:13.547  INFO 52112 --- [http-nio-8080-exec-4] (98101596910653440) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101596910653440,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09851515356973355,"memoryUsage":9.564399719238281,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:39:16.380  INFO 52112 --- [http-nio-8080-exec-8] (98101608801505280) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:39:16.383  INFO 52112 --- [http-nio-8080-exec-8] (98101608801505280) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98101608801505280,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:39:17.607  INFO 52112 --- [http-nio-8080-exec-5] (98101613947916288) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:39:17.607  INFO 52112 --- [http-nio-8080-exec-5] (98101613947916288) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98101613947916288,"message":"Full authentication is required to access this resource"}
2024-04-30 19:39:17.609  INFO 52112 --- [http-nio-8080-exec-7] (98101613956304896) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:39:17.611  INFO 52112 --- [http-nio-8080-exec-7] (98101613956304896) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101613956304896,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.08458800985491377,"memoryUsage":9.34146499633789,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:39:21.387  INFO 52112 --- [http-nio-8080-exec-6] (98101629802385408) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:39:21.390  INFO 52112 --- [http-nio-8080-exec-6] (98101629802385408) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98101629802385408,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:39:22.619  INFO 52112 --- [http-nio-8080-exec-9] (98101634969767936) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:39:22.620  INFO 52112 --- [http-nio-8080-exec-9] (98101634969767936) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98101634969767936,"message":"Full authentication is required to access this resource"}
2024-04-30 19:39:22.622  INFO 52112 --- [http-nio-8080-exec-10] (98101634982350848) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:39:22.623  INFO 52112 --- [http-nio-8080-exec-10] (98101634982350848) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"id":98101634982350848,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1284041573477174,"memoryUsage":9.394756317138672,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:39:26.325  INFO 52112 --- [http-nio-8080-exec-2] (98101650513858560) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:39:26.327  INFO 52112 --- [http-nio-8080-exec-2] (98101650513858560) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101650513858560,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:39:28.549  INFO 52112 --- [http-nio-8080-exec-1] (98101659841990656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:39:28.549  INFO 52112 --- [http-nio-8080-exec-1] (98101659841990656) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98101659841990656,"message":"Full authentication is required to access this resource"}
2024-04-30 19:39:28.551  INFO 52112 --- [http-nio-8080-exec-3] (98101659850379264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:39:28.553  INFO 52112 --- [http-nio-8080-exec-3] (98101659850379264) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101659850379264,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.06657999178869577,"memoryUsage":9.409786224365234,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:39:31.354  INFO 52112 --- [http-nio-8080-exec-4] (98101671607013376) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:39:31.357  INFO 52112 --- [http-nio-8080-exec-4] (98101671607013376) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98101671607013376,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:39:33.541  INFO 52112 --- [http-nio-8080-exec-8] (98101680779956224) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:39:33.543  INFO 52112 --- [http-nio-8080-exec-8] (98101680779956224) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101680779956224,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.04859093059403933,"memoryUsage":9.41131591796875,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:39:36.335  INFO 52112 --- [http-nio-8080-exec-5] (98101692498841600) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:39:36.338  INFO 52112 --- [http-nio-8080-exec-5] (98101692498841600) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98101692498841600,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:39:37.609  INFO 52112 --- [http-nio-8080-exec-7] (98101697842384896) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:39:37.609  INFO 52112 --- [http-nio-8080-exec-7] (98101697842384896) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98101697842384896,"message":"Full authentication is required to access this resource"}
2024-04-30 19:39:37.611  INFO 52112 --- [http-nio-8080-exec-6] (98101697850773504) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:39:37.612  INFO 52112 --- [http-nio-8080-exec-6] (98101697850773504) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"id":98101697850773504,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.06888602617126585,"memoryUsage":9.40781021118164,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:39:41.356  INFO 52112 --- [http-nio-8080-exec-9] (98101713558441984) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:39:41.359  INFO 52112 --- [http-nio-8080-exec-9] (98101713558441984) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98101713558441984,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:39:43.542  INFO 52112 --- [http-nio-8080-exec-10] (98101722727190528) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:39:43.543  INFO 52112 --- [http-nio-8080-exec-10] (98101722727190528) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98101722727190528,"message":"Full authentication is required to access this resource"}
2024-04-30 19:39:43.545  INFO 52112 --- [http-nio-8080-exec-2] (98101722739773440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:39:43.547  INFO 52112 --- [http-nio-8080-exec-2] (98101722739773440) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101722739773440,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1227463242631894,"memoryUsage":9.450092315673828,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:39:46.324  INFO 52112 --- [http-nio-8080-exec-1] (98101734395744256) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:39:46.327  INFO 52112 --- [http-nio-8080-exec-1] (98101734395744256) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98101734395744256,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:39:48.553  INFO 52112 --- [http-nio-8080-exec-3] (98101743744847872) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:39:48.553  INFO 52112 --- [http-nio-8080-exec-3] (98101743744847872) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98101743744847872,"message":"Full authentication is required to access this resource"}
2024-04-30 19:39:48.555  INFO 52112 --- [http-nio-8080-exec-4] (98101743753236480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:39:48.557  INFO 52112 --- [http-nio-8080-exec-4] (98101743753236480) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101743753236480,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09716544017443444,"memoryUsage":9.405948638916016,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:39:51.459  INFO 52112 --- [http-nio-8080-exec-8] (98101755933495296) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:39:51.462  INFO 52112 --- [http-nio-8080-exec-8] (98101755933495296) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98101755933495296,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:39:53.544  INFO 52112 --- [http-nio-8080-exec-5] (98101764678619136) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:39:53.546  INFO 52112 --- [http-nio-8080-exec-5] (98101764678619136) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101764678619136,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.2812520167796063,"memoryUsage":9.445213317871094,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:39:56.341  INFO 52112 --- [http-nio-8080-exec-7] (98101776410087424) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:39:56.344  INFO 52112 --- [http-nio-8080-exec-7] (98101776410087424) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98101776410087424,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:39:58.545  INFO 52112 --- [http-nio-8080-exec-6] (98101785654333440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:39:58.545  INFO 52112 --- [http-nio-8080-exec-6] (98101785654333440) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98101785654333440,"message":"Full authentication is required to access this resource"}
2024-04-30 19:39:58.547  INFO 52112 --- [http-nio-8080-exec-9] (98101785662722048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:39:58.549  INFO 52112 --- [http-nio-8080-exec-9] (98101785662722048) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101785662722048,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09557774607703282,"memoryUsage":9.465690612792969,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:40:01.336  INFO 52112 --- [http-nio-8080-exec-10] (98101797360635904) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:40:01.338  INFO 52112 --- [http-nio-8080-exec-10] (98101797360635904) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101797360635904,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:40:03.555  INFO 52112 --- [http-nio-8080-exec-2] (98101806667796480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:40:03.556  INFO 52112 --- [http-nio-8080-exec-2] (98101806667796480) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98101806667796480,"message":"Full authentication is required to access this resource"}
2024-04-30 19:40:03.557  INFO 52112 --- [http-nio-8080-exec-1] (98101806676185088) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:40:03.559  INFO 52112 --- [http-nio-8080-exec-1] (98101806676185088) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101806676185088,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07315254237288135,"memoryUsage":9.460380554199219,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:40:06.309  INFO 52112 --- [http-nio-8080-exec-3] (98101818218909696) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:40:06.312  INFO 52112 --- [http-nio-8080-exec-3] (98101818218909696) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98101818218909696,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:40:08.543  INFO 52112 --- [http-nio-8080-exec-4] (98101827588984832) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:40:08.545  INFO 52112 --- [http-nio-8080-exec-4] (98101827588984832) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101827588984832,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.047097480832420595,"memoryUsage":9.468502044677734,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:40:11.376  INFO 52112 --- [http-nio-8080-exec-8] (98101839471448064) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:40:11.378  INFO 52112 --- [http-nio-8080-exec-8] (98101839471448064) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101839471448064,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:40:13.546  INFO 52112 --- [http-nio-8080-exec-5] (98101848573087744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:40:13.546  INFO 52112 --- [http-nio-8080-exec-5] (98101848573087744) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98101848573087744,"message":"Full authentication is required to access this resource"}
2024-04-30 19:40:13.548  INFO 52112 --- [http-nio-8080-exec-7] (98101848581476352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:40:13.550  INFO 52112 --- [http-nio-8080-exec-7] (98101848581476352) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101848581476352,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0834799079962116,"memoryUsage":9.443435668945312,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:40:16.375  INFO 52112 --- [http-nio-8080-exec-6] (98101860438773760) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:40:16.378  INFO 52112 --- [http-nio-8080-exec-6] (98101860438773760) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98101860438773760,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:40:18.542  INFO 52112 --- [http-nio-8080-exec-9] (98101869527830528) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:40:18.544  INFO 52112 --- [http-nio-8080-exec-9] (98101869527830528) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101869527830528,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.08485054347826088,"memoryUsage":9.444252014160156,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:40:21.309  INFO 52112 --- [http-nio-8080-exec-10] (98101881133469696) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:40:21.313  INFO 52112 --- [http-nio-8080-exec-10] (98101881133469696) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98101881133469696,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:40:23.556  INFO 52112 --- [http-nio-8080-exec-2] (98101890558070784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:40:23.556  INFO 52112 --- [http-nio-8080-exec-2] (98101890558070784) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98101890558070784,"message":"Full authentication is required to access this resource"}
2024-04-30 19:40:23.558  INFO 52112 --- [http-nio-8080-exec-1] (98101890566459392) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:40:23.560  INFO 52112 --- [http-nio-8080-exec-1] (98101890566459392) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101890566459392,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.08140745367478659,"memoryUsage":9.439579010009766,"networkUpload":0.001953125,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:40:26.379  INFO 52112 --- [http-nio-8080-exec-3] (98101902398590976) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:40:26.382  INFO 52112 --- [http-nio-8080-exec-3] (98101902398590976) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98101902398590976,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:40:28.550  INFO 52112 --- [http-nio-8080-exec-4] (98101911504424960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:40:28.552  INFO 52112 --- [http-nio-8080-exec-4] (98101911504424960) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101911504424960,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.06557264487778083,"memoryUsage":9.449180603027344,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:40:31.307  INFO 52112 --- [http-nio-8080-exec-8] (98101923068121088) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:40:31.310  INFO 52112 --- [http-nio-8080-exec-8] (98101923068121088) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98101923068121088,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:40:33.547  INFO 52112 --- [http-nio-8080-exec-5] (98101932463362048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:40:33.547  INFO 52112 --- [http-nio-8080-exec-5] (98101932463362048) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98101932463362048,"message":"Full authentication is required to access this resource"}
2024-04-30 19:40:33.549  INFO 52112 --- [http-nio-8080-exec-7] (98101932471750656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:40:33.551  INFO 52112 --- [http-nio-8080-exec-7] (98101932471750656) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98101932471750656,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.080797481636936,"memoryUsage":9.441390991210938,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:40:36.345  INFO 52112 --- [http-nio-8080-exec-6] (98101944199024640) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:40:36.348  INFO 52112 --- [http-nio-8080-exec-6] (98101944199024640) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98101944199024640,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:40:41.329  INFO 52112 --- [http-nio-8080-exec-9] (98101965103435776) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:40:41.332  INFO 52112 --- [http-nio-8080-exec-9] (98101965103435776) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98101965103435776,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:40:46.366  INFO 52112 --- [http-nio-8080-exec-10] (98101986230145024) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:40:46.369  INFO 52112 --- [http-nio-8080-exec-10] (98101986230145024) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98101986230145024,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:40:51.343  INFO 52112 --- [http-nio-8080-exec-2] (98102007105196032) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:40:51.346  INFO 52112 --- [http-nio-8080-exec-2] (98102007105196032) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98102007105196032,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:40:56.351  INFO 52112 --- [http-nio-8080-exec-1] (98102028110270464) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:40:56.355  INFO 52112 --- [http-nio-8080-exec-1] (98102028110270464) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98102028110270464,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:41:01.353  INFO 52112 --- [http-nio-8080-exec-3] (98102049090179072) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:41:01.357  INFO 52112 --- [http-nio-8080-exec-3] (98102049090179072) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98102049090179072,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:41:04.553  INFO 52112 --- [http-nio-8080-exec-4] (98102062511951872) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:41:04.553  INFO 52112 --- [http-nio-8080-exec-4] (98102062511951872) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98102062511951872,"message":"Full authentication is required to access this resource"}
2024-04-30 19:41:04.555  INFO 52112 --- [http-nio-8080-exec-8] (98102062520340480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:41:04.557  INFO 52112 --- [http-nio-8080-exec-8] (98102062520340480) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98102062520340480,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07100672052134953,"memoryUsage":9.442501068115234,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:41:06.324  INFO 52112 --- [http-nio-8080-exec-5] (98102069940064256) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:41:06.327  INFO 52112 --- [http-nio-8080-exec-5] (98102069940064256) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98102069940064256,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:41:11.349  INFO 52112 --- [http-nio-8080-exec-7] (98102091016441856) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:41:11.351  INFO 52112 --- [http-nio-8080-exec-7] (98102091016441856) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98102091016441856,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:41:16.322  INFO 52112 --- [http-nio-8080-exec-6] (98102111874715648) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:41:16.325  INFO 52112 --- [http-nio-8080-exec-6] (98102111874715648) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98102111874715648,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:41:21.340  INFO 52112 --- [http-nio-8080-exec-9] (98102132921733120) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:41:21.343  INFO 52112 --- [http-nio-8080-exec-9] (98102132921733120) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98102132921733120,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:41:26.324  INFO 52112 --- [http-nio-8080-exec-10] (98102153826144256) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:41:26.327  INFO 52112 --- [http-nio-8080-exec-10] (98102153826144256) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98102153826144256,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:41:31.341  INFO 52112 --- [http-nio-8080-exec-2] (98102174868967424) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:41:31.344  INFO 52112 --- [http-nio-8080-exec-2] (98102174868967424) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98102174868967424,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:41:36.363  INFO 52112 --- [http-nio-8080-exec-1] (98102195932762112) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:41:36.366  INFO 52112 --- [http-nio-8080-exec-1] (98102195932762112) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98102195932762112,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:41:41.358  INFO 52112 --- [http-nio-8080-exec-3] (98102216883310592) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:41:41.361  INFO 52112 --- [http-nio-8080-exec-3] (98102216883310592) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98102216883310592,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:41:44.755  INFO 52112 --- [http-nio-8080-exec-4] (98102231131361280) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:41:44.756  INFO 52112 --- [http-nio-8080-exec-4] (98102231131361280) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98102231131361280,"message":"Full authentication is required to access this resource"}
2024-04-30 19:41:44.758  INFO 52112 --- [http-nio-8080-exec-8] (98102231143944192) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:41:44.760  INFO 52112 --- [http-nio-8080-exec-8] (98102231143944192) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98102231143944192,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07416694160343121,"memoryUsage":9.441341400146484,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:41:46.364  INFO 52112 --- [http-nio-8080-exec-5] (98102237879996416) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:41:46.367  INFO 52112 --- [http-nio-8080-exec-5] (98102237879996416) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98102237879996416,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:41:47.606  INFO 52112 --- [http-nio-8080-exec-7] (98102243089321984) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:41:47.608  INFO 52112 --- [http-nio-8080-exec-7] (98102243089321984) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98102243089321984,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09543821595607672,"memoryUsage":9.463951110839844,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:41:51.365  INFO 52112 --- [http-nio-8080-exec-6] (98102258855710720) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:41:51.368  INFO 52112 --- [http-nio-8080-exec-6] (98102258855710720) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98102258855710720,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:41:53.037  INFO 52112 --- [http-nio-8080-exec-9] (98102265868587008) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:41:53.038  INFO 52112 --- [http-nio-8080-exec-9] (98102265868587008) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98102265868587008,"message":"Full authentication is required to access this resource"}
2024-04-30 19:41:53.040  INFO 52112 --- [http-nio-8080-exec-10] (98102265881169920) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:41:53.042  INFO 52112 --- [http-nio-8080-exec-10] (98102265881169920) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98102265881169920,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.11010915994304699,"memoryUsage":9.473762512207031,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:41:56.421  INFO 52112 --- [http-nio-8080-exec-2] (98102280062111744) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:41:56.424  INFO 52112 --- [http-nio-8080-exec-2] (98102280062111744) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98102280062111744,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:41:58.543  INFO 52112 --- [http-nio-8080-exec-1] (98102288962424832) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:41:58.543  INFO 52112 --- [http-nio-8080-exec-1] (98102288962424832) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98102288962424832,"message":"Full authentication is required to access this resource"}
2024-04-30 19:41:58.545  INFO 52112 --- [http-nio-8080-exec-3] (98102288970813440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:41:58.547  INFO 52112 --- [http-nio-8080-exec-3] (98102288970813440) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98102288970813440,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.06792888165038002,"memoryUsage":9.645843505859375,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:42:01.359  INFO 52112 --- [http-nio-8080-exec-4] (98102300773584896) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:42:01.362  INFO 52112 --- [http-nio-8080-exec-4] (98102300773584896) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98102300773584896,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:42:03.548  INFO 52112 --- [http-nio-8080-exec-8] (98102309954916352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:42:03.548  INFO 52112 --- [http-nio-8080-exec-8] (98102309954916352) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98102309954916352,"message":"Full authentication is required to access this resource"}
2024-04-30 19:42:03.550  INFO 52112 --- [http-nio-8080-exec-5] (98102309963304960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:42:03.551  INFO 52112 --- [http-nio-8080-exec-5] (98102309963304960) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"id":98102309963304960,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07862013638186924,"memoryUsage":9.591400146484375,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:42:06.365  INFO 52112 --- [http-nio-8080-exec-7] (98102321770270720) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:42:06.369  INFO 52112 --- [http-nio-8080-exec-7] (98102321770270720) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98102321770270720,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:42:08.554  INFO 52112 --- [http-nio-8080-exec-6] (98102330951602176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:42:08.555  INFO 52112 --- [http-nio-8080-exec-6] (98102330951602176) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98102330951602176,"message":"Full authentication is required to access this resource"}
2024-04-30 19:42:08.557  INFO 52112 --- [http-nio-8080-exec-9] (98102330964185088) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:42:08.558  INFO 52112 --- [http-nio-8080-exec-9] (98102330964185088) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"id":98102330964185088,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0920652100385578,"memoryUsage":9.648994445800781,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:42:11.393  INFO 52112 --- [http-nio-8080-exec-10] (98102342859231232) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:42:11.395  INFO 52112 --- [http-nio-8080-exec-10] (98102342859231232) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98102342859231232,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:42:13.554  INFO 52112 --- [http-nio-8080-exec-2] (98102351923122176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:42:13.556  INFO 52112 --- [http-nio-8080-exec-2] (98102351923122176) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98102351923122176,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.12590345895715024,"memoryUsage":9.60940933227539,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:42:16.497  INFO 52112 --- [http-nio-8080-exec-1] (98102364266958848) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:42:16.501  INFO 52112 --- [http-nio-8080-exec-1] (98102364266958848) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98102364266958848,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:42:18.554  INFO 52112 --- [http-nio-8080-exec-3] (98102372894642176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:42:18.555  INFO 52112 --- [http-nio-8080-exec-3] (98102372894642176) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98102372894642176,"message":"Full authentication is required to access this resource"}
2024-04-30 19:42:18.556  INFO 52112 --- [http-nio-8080-exec-4] (98102372903030784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:42:18.558  INFO 52112 --- [http-nio-8080-exec-4] (98102372903030784) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98102372903030784,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.24493889062989657,"memoryUsage":9.824958801269531,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:42:21.314  INFO 52112 --- [http-nio-8080-exec-8] (98102384470921216) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:42:21.317  INFO 52112 --- [http-nio-8080-exec-8] (98102384470921216) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98102384470921216,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:42:23.550  INFO 52112 --- [http-nio-8080-exec-5] (98102393849384960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:42:23.551  INFO 52112 --- [http-nio-8080-exec-5] (98102393849384960) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"id":98102393849384960,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.05814911437594398,"memoryUsage":9.838134765625,"networkUpload":0.001953125,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:42:26.380  INFO 52112 --- [http-nio-8080-exec-7] (98102405719265280) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:42:26.383  INFO 52112 --- [http-nio-8080-exec-7] (98102405719265280) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98102405719265280,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:42:28.541  INFO 52112 --- [http-nio-8080-exec-6] (98102414783156224) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:42:28.542  INFO 52112 --- [http-nio-8080-exec-6] (98102414783156224) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98102414783156224,"message":"Full authentication is required to access this resource"}
2024-04-30 19:42:28.543  INFO 52112 --- [http-nio-8080-exec-9] (98102414791544832) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:42:28.545  INFO 52112 --- [http-nio-8080-exec-9] (98102414791544832) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98102414791544832,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.14201908200103147,"memoryUsage":9.659446716308594,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:42:31.443  INFO 52112 --- [http-nio-8080-exec-10] (98102426955026432) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:42:31.447  INFO 52112 --- [http-nio-8080-exec-10] (98102426955026432) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98102426955026432,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:42:33.541  INFO 52112 --- [http-nio-8080-exec-2] (98102435754676224) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:42:33.543  INFO 52112 --- [http-nio-8080-exec-2] (98102435754676224) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98102435754676224,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1976774193548387,"memoryUsage":10.23227310180664,"networkUpload":0.005859375,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:42:36.404  INFO 52112 --- [http-nio-8080-exec-1] (98102447762968576) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:42:36.407  INFO 52112 --- [http-nio-8080-exec-1] (98102447762968576) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98102447762968576,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:42:38.553  INFO 52112 --- [http-nio-8080-exec-3] (98102456776527872) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:42:38.553  INFO 52112 --- [http-nio-8080-exec-3] (98102456776527872) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98102456776527872,"message":"Full authentication is required to access this resource"}
2024-04-30 19:42:38.556  INFO 52112 --- [http-nio-8080-exec-4] (98102456789110784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:42:38.557  INFO 52112 --- [http-nio-8080-exec-4] (98102456789110784) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"id":98102456789110784,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.160023071007434,"memoryUsage":10.263057708740234,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:42:41.350  INFO 52112 --- [http-nio-8080-exec-8] (98102468507996160) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:42:41.353  INFO 52112 --- [http-nio-8080-exec-8] (98102468507996160) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98102468507996160,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:42:43.549  INFO 52112 --- [http-nio-8080-exec-5] (98102477731270656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:42:43.551  INFO 52112 --- [http-nio-8080-exec-5] (98102477731270656) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98102477731270656,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.05943188086045229,"memoryUsage":10.186912536621094,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:42:46.331  INFO 52112 --- [http-nio-8080-exec-7] (98102489399824384) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:42:46.334  INFO 52112 --- [http-nio-8080-exec-7] (98102489399824384) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98102489399824384,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:42:48.549  INFO 52112 --- [http-nio-8080-exec-6] (98102498702790656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:42:48.549  INFO 52112 --- [http-nio-8080-exec-6] (98102498702790656) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98102498702790656,"message":"Full authentication is required to access this resource"}
2024-04-30 19:42:48.551  INFO 52112 --- [http-nio-8080-exec-9] (98102498711179264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:42:48.553  INFO 52112 --- [http-nio-8080-exec-9] (98102498711179264) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98102498711179264,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09617855935069328,"memoryUsage":10.200462341308594,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:42:51.375  INFO 52112 --- [http-nio-8080-exec-10] (98102510555893760) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:42:51.378  INFO 52112 --- [http-nio-8080-exec-10] (98102510555893760) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98102510555893760,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:42:53.553  INFO 52112 --- [http-nio-8080-exec-2] (98102519691087872) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:42:53.553  INFO 52112 --- [http-nio-8080-exec-2] (98102519691087872) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98102519691087872,"message":"Full authentication is required to access this resource"}
2024-04-30 19:42:53.555  INFO 52112 --- [http-nio-8080-exec-1] (98102519699476480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:42:53.556  INFO 52112 --- [http-nio-8080-exec-1] (98102519699476480) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"id":98102519699476480,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.12070690230076692,"memoryUsage":10.181282043457031,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:42:56.330  INFO 52112 --- [http-nio-8080-exec-3] (98102531338670080) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:42:56.333  INFO 52112 --- [http-nio-8080-exec-3] (98102531338670080) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98102531338670080,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:43:01.386  INFO 52112 --- [http-nio-8080-exec-4] (98102552545071104) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:43:01.389  INFO 52112 --- [http-nio-8080-exec-4] (98102552545071104) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98102552545071104,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:43:04.552  INFO 52112 --- [http-nio-8080-exec-8] (98102565824237568) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:43:04.553  INFO 52112 --- [http-nio-8080-exec-8] (98102565824237568) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98102565824237568,"message":"Full authentication is required to access this resource"}
2024-04-30 19:43:04.556  INFO 52112 --- [http-nio-8080-exec-5] (98102565841014784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:43:04.558  INFO 52112 --- [http-nio-8080-exec-5] (98102565841014784) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98102565841014784,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.12837660634670864,"memoryUsage":10.210067749023438,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:43:06.389  INFO 52112 --- [http-nio-8080-exec-7] (98102573529174016) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:43:06.392  INFO 52112 --- [http-nio-8080-exec-7] (98102573529174016) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98102573529174016,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:43:11.391  INFO 52112 --- [http-nio-8080-exec-6] (98102594509082624) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:43:11.394  INFO 52112 --- [http-nio-8080-exec-6] (98102594509082624) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98102594509082624,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:43:16.351  INFO 52112 --- [http-nio-8080-exec-9] (98102615312830464) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:43:16.354  INFO 52112 --- [http-nio-8080-exec-9] (98102615312830464) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98102615312830464,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:43:18.593  INFO 52112 --- [http-nio-8080-exec-10] (98102624716460032) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:43:18.594  INFO 52112 --- [http-nio-8080-exec-10] (98102624716460032) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98102624716460032,"message":"Full authentication is required to access this resource"}
2024-04-30 19:43:18.596  INFO 52112 --- [http-nio-8080-exec-2] (98102624729042944) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:43:18.598  INFO 52112 --- [http-nio-8080-exec-2] (98102624729042944) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98102624729042944,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.11340066427167356,"memoryUsage":10.338516235351562,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:43:21.370  INFO 52112 --- [http-nio-8080-exec-1] (98102636364042240) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:43:21.376  INFO 52112 --- [http-nio-8080-exec-1] (98102636364042240) com.example.filter.RequestLogFilter      : 请求处理耗时: 6ms | 响应结果: {"id":98102636364042240,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:43:22.617  INFO 52112 --- [http-nio-8080-exec-3] (98102641594339328) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:43:22.619  INFO 52112 --- [http-nio-8080-exec-3] (98102641594339328) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98102641594339328,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09756578947368422,"memoryUsage":9.600418090820312,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:43:26.353  INFO 52112 --- [http-nio-8080-exec-4] (98102657264259072) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:43:26.356  INFO 52112 --- [http-nio-8080-exec-4] (98102657264259072) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98102657264259072,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:43:27.616  INFO 52112 --- [http-nio-8080-exec-8] (98102662561665024) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:43:27.617  INFO 52112 --- [http-nio-8080-exec-8] (98102662561665024) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98102662561665024,"message":"Full authentication is required to access this resource"}
2024-04-30 19:43:27.619  INFO 52112 --- [http-nio-8080-exec-5] (98102662574247936) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:43:27.620  INFO 52112 --- [http-nio-8080-exec-5] (98102662574247936) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"id":98102662574247936,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.08911819887429644,"memoryUsage":9.807929992675781,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:43:31.444  INFO 52112 --- [http-nio-8080-exec-7] (98102678613266432) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:43:31.450  INFO 52112 --- [http-nio-8080-exec-7] (98102678613266432) com.example.filter.RequestLogFilter      : 请求处理耗时: 7ms | 响应结果: {"id":98102678613266432,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:43:32.621  INFO 52112 --- [http-nio-8080-exec-6] (98102683554156544) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:43:32.622  INFO 52112 --- [http-nio-8080-exec-6] (98102683554156544) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98102683554156544,"message":"Full authentication is required to access this resource"}
2024-04-30 19:43:32.626  INFO 52112 --- [http-nio-8080-exec-9] (98102683575128064) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:43:32.629  INFO 52112 --- [http-nio-8080-exec-9] (98102683575128064) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98102683575128064,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.16218293620292082,"memoryUsage":4.4207763671875,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:43:36.362  INFO 52112 --- [http-nio-8080-exec-10] (98102699245047808) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:43:36.365  INFO 52112 --- [http-nio-8080-exec-10] (98102699245047808) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98102699245047808,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:43:37.605  INFO 52112 --- [http-nio-8080-exec-2] (98102704458567680) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:43:37.607  INFO 52112 --- [http-nio-8080-exec-2] (98102704458567680) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98102704458567680,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09252976784407636,"memoryUsage":3.6890296936035156,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:43:41.335  INFO 52112 --- [http-nio-8080-exec-1] (98102720103321600) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:43:41.338  INFO 52112 --- [http-nio-8080-exec-1] (98102720103321600) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98102720103321600,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:43:42.611  INFO 52112 --- [http-nio-8080-exec-3] (98102725455253504) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:43:42.612  INFO 52112 --- [http-nio-8080-exec-3] (98102725455253504) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98102725455253504,"message":"Full authentication is required to access this resource"}
2024-04-30 19:43:42.614  INFO 52112 --- [http-nio-8080-exec-4] (98102725467836416) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:43:42.615  INFO 52112 --- [http-nio-8080-exec-4] (98102725467836416) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"id":98102725467836416,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.08427501701837985,"memoryUsage":3.739757537841797,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:43:46.367  INFO 52112 --- [http-nio-8080-exec-8] (98102741209059328) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:43:46.371  INFO 52112 --- [http-nio-8080-exec-8] (98102741209059328) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98102741209059328,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:43:47.620  INFO 52112 --- [http-nio-8080-exec-5] (98102746464522240) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:43:47.621  INFO 52112 --- [http-nio-8080-exec-5] (98102746464522240) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98102746464522240,"message":"Full authentication is required to access this resource"}
2024-04-30 19:43:47.622  INFO 52112 --- [http-nio-8080-exec-7] (98102746472910848) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:43:47.624  INFO 52112 --- [http-nio-8080-exec-7] (98102746472910848) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98102746472910848,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.09328813559322034,"memoryUsage":3.815021514892578,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:43:51.340  INFO 52112 --- [http-nio-8080-exec-6] (98102762067333120) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:43:51.343  INFO 52112 --- [http-nio-8080-exec-6] (98102762067333120) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98102762067333120,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:43:53.547  INFO 52112 --- [http-nio-8080-exec-9] (98102771324162048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:43:53.547  INFO 52112 --- [http-nio-8080-exec-9] (98102771324162048) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98102771324162048,"message":"Full authentication is required to access this resource"}
2024-04-30 19:43:53.549  INFO 52112 --- [http-nio-8080-exec-10] (98102771332550656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:43:53.551  INFO 52112 --- [http-nio-8080-exec-10] (98102771332550656) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98102771332550656,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1145240032546786,"memoryUsage":3.827136993408203,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:43:56.364  INFO 52112 --- [http-nio-8080-exec-2] (98102783139516416) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:43:56.368  INFO 52112 --- [http-nio-8080-exec-2] (98102783139516416) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98102783139516416,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:43:58.547  INFO 52112 --- [http-nio-8080-exec-1] (98102792295682048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:43:58.549  INFO 52112 --- [http-nio-8080-exec-1] (98102792295682048) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98102792295682048,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.127245610467087,"memoryUsage":4.142215728759766,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:44:01.310  INFO 52112 --- [http-nio-8080-exec-3] (98102803884544000) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:44:01.314  INFO 52112 --- [http-nio-8080-exec-3] (98102803884544000) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98102803884544000,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:44:03.551  INFO 52112 --- [http-nio-8080-exec-4] (98102813283979264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:44:03.552  INFO 52112 --- [http-nio-8080-exec-4] (98102813283979264) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98102813283979264,"message":"Full authentication is required to access this resource"}
2024-04-30 19:44:03.553  INFO 52112 --- [http-nio-8080-exec-8] (98102813292367872) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:44:03.555  INFO 52112 --- [http-nio-8080-exec-8] (98102813292367872) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98102813292367872,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.07534991167278163,"memoryUsage":5.701534271240234,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:44:06.355  INFO 52112 --- [http-nio-8080-exec-5] (98102825044807680) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:44:06.358  INFO 52112 --- [http-nio-8080-exec-5] (98102825044807680) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98102825044807680,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:44:08.551  INFO 52112 --- [http-nio-8080-exec-7] (98102834255499264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:44:08.553  INFO 52112 --- [http-nio-8080-exec-7] (98102834255499264) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98102834255499264,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.10958276020174232,"memoryUsage":5.861930847167969,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:44:11.361  INFO 52112 --- [http-nio-8080-exec-6] (98102846041493504) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:44:11.364  INFO 52112 --- [http-nio-8080-exec-6] (98102846041493504) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98102846041493504,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:44:13.545  INFO 52112 --- [http-nio-8080-exec-9] (98102855201853440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:44:13.545  INFO 52112 --- [http-nio-8080-exec-9] (98102855201853440) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98102855201853440,"message":"Full authentication is required to access this resource"}
2024-04-30 19:44:13.547  INFO 52112 --- [http-nio-8080-exec-10] (98102855210242048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:44:13.549  INFO 52112 --- [http-nio-8080-exec-10] (98102855210242048) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98102855210242048,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.10709522539343826,"memoryUsage":5.982208251953125,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:44:16.410  INFO 52112 --- [http-nio-8080-exec-2] (98102867214340096) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:44:16.413  INFO 52112 --- [http-nio-8080-exec-2] (98102867214340096) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98102867214340096,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:44:18.549  INFO 52112 --- [http-nio-8080-exec-1] (98102876190150656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:44:18.549  INFO 52112 --- [http-nio-8080-exec-1] (98102876190150656) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98102876190150656,"message":"Full authentication is required to access this resource"}
2024-04-30 19:44:18.551  INFO 52112 --- [http-nio-8080-exec-3] (98102876198539264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:44:18.553  INFO 52112 --- [http-nio-8080-exec-3] (98102876198539264) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98102876198539264,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.13389928612772525,"memoryUsage":6.507747650146484,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:44:21.374  INFO 52112 --- [http-nio-8080-exec-4] (98102888039059456) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:44:21.378  INFO 52112 --- [http-nio-8080-exec-4] (98102888039059456) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98102888039059456,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:44:23.549  INFO 52112 --- [http-nio-8080-exec-8] (98102897161670656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:44:23.551  INFO 52112 --- [http-nio-8080-exec-8] (98102897161670656) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98102897161670656,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1548547826657051,"memoryUsage":6.705535888671875,"networkUpload":0.001953125,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:44:26.373  INFO 52112 --- [http-nio-8080-exec-5] (98102909006385152) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:44:26.376  INFO 52112 --- [http-nio-8080-exec-5] (98102909006385152) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98102909006385152,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:44:28.507  INFO 52112 --- [http-nio-8080-exec-7] (98102917957029888) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:44:28.507  INFO 52112 --- [http-nio-8080-exec-7] (98102917957029888) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98102917957029888,"message":"Full authentication is required to access this resource"}
2024-04-30 19:44:28.510  INFO 52112 --- [http-nio-8080-exec-6] (98102917969612800) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:44:28.512  INFO 52112 --- [http-nio-8080-exec-6] (98102917969612800) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98102917969612800,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.15244183747446122,"memoryUsage":7.007549285888672,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:44:31.585  INFO 52112 --- [http-nio-8080-exec-9] (98102930867097600) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:44:31.588  INFO 52112 --- [http-nio-8080-exec-9] (98102930867097600) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98102930867097600,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:44:33.546  INFO 52112 --- [http-nio-8080-exec-10] (98102939092127744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:44:33.546  INFO 52112 --- [http-nio-8080-exec-10] (98102939092127744) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98102939092127744,"message":"Full authentication is required to access this resource"}
2024-04-30 19:44:33.548  INFO 52112 --- [http-nio-8080-exec-2] (98102939100516352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:44:33.550  INFO 52112 --- [http-nio-8080-exec-2] (98102939100516352) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98102939100516352,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.36,"memoryUsage":7.5771942138671875,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:44:36.424  INFO 52112 --- [http-nio-8080-exec-1] (98102951163334656) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:44:36.428  INFO 52112 --- [http-nio-8080-exec-1] (98102951163334656) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98102951163334656,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:44:38.548  INFO 52112 --- [http-nio-8080-exec-3] (98102960072036352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:44:38.549  INFO 52112 --- [http-nio-8080-exec-3] (98102960072036352) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98102960072036352,"message":"Full authentication is required to access this resource"}
2024-04-30 19:44:38.551  INFO 52112 --- [http-nio-8080-exec-4] (98102960084619264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:44:38.553  INFO 52112 --- [http-nio-8080-exec-4] (98102960084619264) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98102960084619264,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.2141452584839835,"memoryUsage":7.839057922363281,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:44:41.406  INFO 52112 --- [http-nio-8080-exec-8] (98102972059357184) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:44:41.409  INFO 52112 --- [http-nio-8080-exec-8] (98102972059357184) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98102972059357184,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:44:43.548  INFO 52112 --- [http-nio-8080-exec-5] (98102981043556352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:44:43.550  INFO 52112 --- [http-nio-8080-exec-5] (98102981043556352) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98102981043556352,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.2084179786693753,"memoryUsage":8.110698699951172,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:44:46.390  INFO 52112 --- [http-nio-8080-exec-7] (98102992963768320) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:44:46.393  INFO 52112 --- [http-nio-8080-exec-7] (98102992963768320) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98102992963768320,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:44:47.606  INFO 52112 --- [http-nio-8080-exec-6] (98102998064041984) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:44:47.606  INFO 52112 --- [http-nio-8080-exec-6] (98102998064041984) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98102998064041984,"message":"Full authentication is required to access this resource"}
2024-04-30 19:44:47.608  INFO 52112 --- [http-nio-8080-exec-9] (98102998072430592) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:44:47.610  INFO 52112 --- [http-nio-8080-exec-9] (98102998072430592) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98102998072430592,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1139440136680247,"memoryUsage":8.177406311035156,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:44:51.378  INFO 52112 --- [http-nio-8080-exec-10] (98103013884956672) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:44:51.382  INFO 52112 --- [http-nio-8080-exec-10] (98103013884956672) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98103013884956672,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:44:53.542  INFO 52112 --- [http-nio-8080-exec-1] (98103022961430528) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:44:53.543  INFO 52112 --- [http-nio-8080-exec-1] (98103022961430528) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98103022961430528,"message":"Full authentication is required to access this resource"}
2024-04-30 19:44:53.545  INFO 52112 --- [http-nio-8080-exec-3] (98103022974013440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:44:53.547  INFO 52112 --- [http-nio-8080-exec-3] (98103022974013440) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98103022974013440,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1124,"memoryUsage":8.28936767578125,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:44:58.427  INFO 52112 --- [http-nio-8080-exec-4] (98103043450605568) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/detail" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:44:58.432  INFO 52112 --- [http-nio-8080-exec-4] (98103043450605568) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98103043450605568,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:44:58.549  INFO 52112 --- [http-nio-8080-exec-8] (98103043962310656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:44:58.549  INFO 52112 --- [http-nio-8080-exec-8] (98103043962310656) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98103043962310656,"message":"Full authentication is required to access this resource"}
2024-04-30 19:44:58.551  INFO 52112 --- [http-nio-8080-exec-5] (98103043970699264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:44:58.553  INFO 52112 --- [http-nio-8080-exec-5] (98103043970699264) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98103043970699264,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1124,"memoryUsage":8.28936767578125,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:45:01.509  INFO 52112 --- [http-nio-8080-exec-7] (98103056377450496) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:45:01.528  INFO 52112 --- [http-nio-8080-exec-7] (98103056377450496) com.example.filter.RequestLogFilter      : 请求处理耗时: 19ms | 响应结果: {"id":98103056377450496,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:45:02.604  INFO 52112 --- [http-nio-8080-exec-6] (98103060970213376) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:45:02.606  INFO 52112 --- [http-nio-8080-exec-6] (98103060970213376) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98103060970213376,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.18174956600498152,"memoryUsage":8.504474639892578,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:45:06.181  INFO 52112 --- [http-nio-8080-exec-9] (98103075969044480) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:45:06.183  INFO 52112 --- [http-nio-8080-exec-9] (98103075969044480) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98103075969044480,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:45:07.609  INFO 52112 --- [http-nio-8080-exec-10] (98103081962704896) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:45:07.609  INFO 52112 --- [http-nio-8080-exec-10] (98103081962704896) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98103081962704896,"message":"Full authentication is required to access this resource"}
2024-04-30 19:45:07.611  INFO 52112 --- [http-nio-8080-exec-2] (98103081971093504) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:45:07.613  INFO 52112 --- [http-nio-8080-exec-2] (98103081971093504) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98103081971093504,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.177076387345336,"memoryUsage":8.557853698730469,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:45:11.146  INFO 52112 --- [http-nio-8080-exec-1] (98103096797958144) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:45:11.149  INFO 52112 --- [http-nio-8080-exec-1] (98103096797958144) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98103096797958144,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:45:12.610  INFO 52112 --- [http-nio-8080-exec-3] (98103102938419200) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:45:12.611  INFO 52112 --- [http-nio-8080-exec-3] (98103102938419200) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"id":98103102938419200,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.17694106994642722,"memoryUsage":8.56610107421875,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:45:16.158  INFO 52112 --- [http-nio-8080-exec-4] (98103117819809792) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:45:16.161  INFO 52112 --- [http-nio-8080-exec-4] (98103117819809792) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98103117819809792,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:45:18.543  INFO 52112 --- [http-nio-8080-exec-8] (98103127823224832) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:45:18.543  INFO 52112 --- [http-nio-8080-exec-8] (98103127823224832) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98103127823224832,"message":"Full authentication is required to access this resource"}
2024-04-30 19:45:18.546  INFO 52112 --- [http-nio-8080-exec-5] (98103127835807744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:45:18.549  INFO 52112 --- [http-nio-8080-exec-5] (98103127835807744) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98103127835807744,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1648675171736997,"memoryUsage":8.604991912841797,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:45:21.145  INFO 52112 --- [http-nio-8080-exec-7] (98103138736803840) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:45:21.148  INFO 52112 --- [http-nio-8080-exec-7] (98103138736803840) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98103138736803840,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:45:23.546  INFO 52112 --- [http-nio-8080-exec-6] (98103148807327744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:45:23.547  INFO 52112 --- [http-nio-8080-exec-6] (98103148807327744) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98103148807327744,"message":"Full authentication is required to access this resource"}
2024-04-30 19:45:23.549  INFO 52112 --- [http-nio-8080-exec-9] (98103148819910656) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:45:23.551  INFO 52112 --- [http-nio-8080-exec-9] (98103148819910656) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98103148819910656,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.14720735659908044,"memoryUsage":8.598548889160156,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:45:26.207  INFO 52112 --- [http-nio-8080-exec-10] (98103159968370688) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:45:26.211  INFO 52112 --- [http-nio-8080-exec-10] (98103159968370688) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98103159968370688,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:45:28.545  INFO 52112 --- [http-nio-8080-exec-2] (98103169774653440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:45:28.547  INFO 52112 --- [http-nio-8080-exec-2] (98103169774653440) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98103169774653440,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.21445404556166536,"memoryUsage":8.925880432128906,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:45:31.155  INFO 52112 --- [http-nio-8080-exec-1] (98103180721786880) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:45:31.159  INFO 52112 --- [http-nio-8080-exec-1] (98103180721786880) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98103180721786880,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:45:33.546  INFO 52112 --- [http-nio-8080-exec-3] (98103190750367744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:45:33.547  INFO 52112 --- [http-nio-8080-exec-3] (98103190750367744) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98103190750367744,"message":"Full authentication is required to access this resource"}
2024-04-30 19:45:33.548  INFO 52112 --- [http-nio-8080-exec-4] (98103190758756352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:45:33.550  INFO 52112 --- [http-nio-8080-exec-4] (98103190758756352) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98103190758756352,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.2436706511248051,"memoryUsage":8.934494018554688,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:45:36.142  INFO 52112 --- [http-nio-8080-exec-8] (98103201638780928) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:45:36.146  INFO 52112 --- [http-nio-8080-exec-8] (98103201638780928) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98103201638780928,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:45:38.544  INFO 52112 --- [http-nio-8080-exec-5] (98103211713499136) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:45:38.546  INFO 52112 --- [http-nio-8080-exec-5] (98103211713499136) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98103211713499136,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.2260889257945195,"memoryUsage":8.933326721191406,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:45:41.145  INFO 52112 --- [http-nio-8080-exec-7] (98103222622883840) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:45:41.148  INFO 52112 --- [http-nio-8080-exec-7] (98103222622883840) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98103222622883840,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:45:43.542  INFO 52112 --- [http-nio-8080-exec-6] (98103232676630528) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:45:43.543  INFO 52112 --- [http-nio-8080-exec-6] (98103232676630528) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98103232676630528,"message":"Full authentication is required to access this resource"}
2024-04-30 19:45:43.545  INFO 52112 --- [http-nio-8080-exec-9] (98103232689213440) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:45:43.546  INFO 52112 --- [http-nio-8080-exec-9] (98103232689213440) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"id":98103232689213440,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1803563339876189,"memoryUsage":8.915702819824219,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:45:46.182  INFO 52112 --- [http-nio-8080-exec-10] (98103243749593088) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:45:46.185  INFO 52112 --- [http-nio-8080-exec-10] (98103243749593088) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98103243749593088,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:45:48.542  INFO 52112 --- [http-nio-8080-exec-2] (98103253648150528) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:45:48.544  INFO 52112 --- [http-nio-8080-exec-2] (98103253648150528) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98103253648150528,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1967386380794202,"memoryUsage":8.939163208007812,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:45:51.184  INFO 52112 --- [http-nio-8080-exec-1] (98103264729501696) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:45:51.188  INFO 52112 --- [http-nio-8080-exec-1] (98103264729501696) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98103264729501696,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:45:53.541  INFO 52112 --- [http-nio-8080-exec-3] (98103274615476224) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:45:53.541  INFO 52112 --- [http-nio-8080-exec-3] (98103274615476224) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98103274615476224,"message":"Full authentication is required to access this resource"}
2024-04-30 19:45:53.543  INFO 52112 --- [http-nio-8080-exec-4] (98103274623864832) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:45:53.544  INFO 52112 --- [http-nio-8080-exec-4] (98103274623864832) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"id":98103274623864832,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.2713932878105477,"memoryUsage":8.952033996582031,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:45:56.136  INFO 52112 --- [http-nio-8080-exec-8] (98103285499695104) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:45:56.139  INFO 52112 --- [http-nio-8080-exec-8] (98103285499695104) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98103285499695104,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:45:58.554  INFO 52112 --- [http-nio-8080-exec-5] (98103295641522176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:45:58.554  INFO 52112 --- [http-nio-8080-exec-5] (98103295641522176) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98103295641522176,"message":"Full authentication is required to access this resource"}
2024-04-30 19:45:58.557  INFO 52112 --- [http-nio-8080-exec-7] (98103295654105088) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:45:58.558  INFO 52112 --- [http-nio-8080-exec-7] (98103295654105088) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"id":98103295654105088,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.19162616822429906,"memoryUsage":8.964275360107422,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:46:01.151  INFO 52112 --- [http-nio-8080-exec-6] (98103306534129664) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:46:01.153  INFO 52112 --- [http-nio-8080-exec-6] (98103306534129664) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98103306534129664,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:46:03.555  INFO 52112 --- [http-nio-8080-exec-9] (98103316617236480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:46:03.557  INFO 52112 --- [http-nio-8080-exec-9] (98103316617236480) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98103316617236480,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.15020766035994462,"memoryUsage":8.721385955810547,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:46:06.190  INFO 52112 --- [http-nio-8080-exec-10] (98103327669227520) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:46:06.193  INFO 52112 --- [http-nio-8080-exec-10] (98103327669227520) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98103327669227520,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:46:08.548  INFO 52112 --- [http-nio-8080-exec-2] (98103337559396352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:46:08.548  INFO 52112 --- [http-nio-8080-exec-2] (98103337559396352) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98103337559396352,"message":"Full authentication is required to access this resource"}
2024-04-30 19:46:08.551  INFO 52112 --- [http-nio-8080-exec-1] (98103337571979264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:46:08.553  INFO 52112 --- [http-nio-8080-exec-1] (98103337571979264) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98103337571979264,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.18011548711874445,"memoryUsage":8.716472625732422,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:46:11.156  INFO 52112 --- [http-nio-8080-exec-3] (98103348498141184) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:46:11.159  INFO 52112 --- [http-nio-8080-exec-3] (98103348498141184) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98103348498141184,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:46:16.132  INFO 52112 --- [http-nio-8080-exec-4] (98103369368997888) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:46:16.135  INFO 52112 --- [http-nio-8080-exec-4] (98103369368997888) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98103369368997888,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:46:21.162  INFO 52112 --- [http-nio-8080-exec-8] (98103390466347008) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:46:21.165  INFO 52112 --- [http-nio-8080-exec-8] (98103390466347008) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98103390466347008,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:46:25.815  INFO 52112 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] (system) o.s.a.r.l.SimpleMessageListenerContainer : Waiting for workers to finish.
2024-04-30 19:46:26.238  INFO 52112 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] (system) o.s.a.r.l.SimpleMessageListenerContainer : Successfully waited for workers to finish.
2024-04-30 19:46:26.269  INFO 52112 --- [SpringApplicationShutdownHook] (system) com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-04-30 19:46:26.273  INFO 52112 --- [SpringApplicationShutdownHook] (system) com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-04-30 19:46:33.956  INFO 55332 --- [main] (system) c.example.MyProjectBackendApplication    : Starting MyProjectBackendApplication using Java 17.0.10 with PID 55332 (E:\k\study-monitor\study_monitor\my-project-backend\target\classes started by k in E:\k\study-monitor\study_monitor)
2024-04-30 19:46:33.958  INFO 55332 --- [main] (system) c.example.MyProjectBackendApplication    : The following 1 profile is active: "dev"
2024-04-30 19:46:34.672  INFO 55332 --- [main] (system) .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-30 19:46:34.675  INFO 55332 --- [main] (system) .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-30 19:46:34.700  INFO 55332 --- [main] (system) .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2024-04-30 19:46:35.391  INFO 55332 --- [main] (system) o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-04-30 19:46:35.401  INFO 55332 --- [main] (system) o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-04-30 19:46:35.401  INFO 55332 --- [main] (system) o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.11]
2024-04-30 19:46:35.504  INFO 55332 --- [main] (system) o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-04-30 19:46:35.505  INFO 55332 --- [main] (system) w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1511 ms
2024-04-30 19:46:35.930  WARN 55332 --- [main] (system) c.b.m.core.metadata.TableInfoHelper      : This primary key of "id" is primitive !不建议如此请使用包装类 in Class: "com.example.entity.dto.ClientDetail"
2024-04-30 19:46:36.303  WARN 55332 --- [main] (system) c.b.m.core.metadata.TableInfoHelper      : This primary key of "id" is primitive !不建议如此请使用包装类 in Class: "com.example.entity.dto.Client"
2024-04-30 19:46:36.372  INFO 55332 --- [main] (system) com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-04-30 19:46:36.571  INFO 55332 --- [main] (system) com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1d6a22dd
2024-04-30 19:46:36.573  INFO 55332 --- [main] (system) com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-04-30 19:46:37.156  INFO 55332 --- [main] (system) o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4ee19768, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@8113ea7, org.springframework.security.web.context.SecurityContextHolderFilter@42db3ff, org.springframework.security.web.header.HeaderWriterFilter@18139a43, org.springframework.security.web.authentication.logout.LogoutFilter@6a358906, com.example.filter.JwtAuthenticationFilter@7c9512c6, com.example.filter.RequestLogFilter@5cba474f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@34114276, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@519e67e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@200e6029, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1c879f07, org.springframework.security.web.session.SessionManagementFilter@3dbb7bb, org.springframework.security.web.access.ExceptionTranslationFilter@23dda7a3, org.springframework.security.web.access.intercept.AuthorizationFilter@4b37d1a4]
2024-04-30 19:46:37.478  WARN 55332 --- [main] (system) ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: org.springframework.amqp.rabbit.core.RabbitAdmin
2024-04-30 19:46:37.530  INFO 55332 --- [main] (system) o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-04-30 19:46:37.533  INFO 55332 --- [main] (system) o.s.a.r.c.CachingConnectionFactory       : Attempting to connect to: [localhost:5672]
2024-04-30 19:46:37.597  INFO 55332 --- [main] (system) o.s.a.r.c.CachingConnectionFactory       : Created new connection: rabbitConnectionFactory#4407fea2:0/SimpleConnection@456c53a [delegate=amqp://guest@127.0.0.1:5672/, localPort=10572]
2024-04-30 19:46:37.640  INFO 55332 --- [main] (system) c.example.MyProjectBackendApplication    : Started MyProjectBackendApplication in 4.11 seconds (process running for 4.703)
2024-04-30 19:46:40.482  INFO 55332 --- [http-nio-8080-exec-1] (system) o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-30 19:46:40.483  INFO 55332 --- [http-nio-8080-exec-1] (system) o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-04-30 19:46:40.484  INFO 55332 --- [http-nio-8080-exec-1] (system) o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-04-30 19:46:40.893  INFO 55332 --- [http-nio-8080-exec-1] (98103473211576320) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:46:41.045  INFO 55332 --- [http-nio-8080-exec-1] (98103473211576320) com.example.filter.RequestLogFilter      : 请求处理耗时: 155ms | 响应结果: {"code":401,"data":null,"id":98103473211576320,"message":"Full authentication is required to access this resource"}
2024-04-30 19:46:41.092  INFO 55332 --- [http-nio-8080-exec-2] (98103474054631424) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:46:41.157  INFO 55332 --- [http-nio-8080-exec-2] (98103474054631424) com.example.filter.RequestLogFilter      : 请求处理耗时: 66ms | 响应结果: {"id":98103474054631424,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:46:42.376  INFO 55332 --- [http-nio-8080-exec-3] (98103479440117760) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:46:42.380  INFO 55332 --- [http-nio-8080-exec-3] (98103479440117760) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98103479440117760,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:46:47.546  INFO 55332 --- [http-nio-8080-exec-4] (98103501128863744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:46:47.547  INFO 55332 --- [http-nio-8080-exec-4] (98103501128863744) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98103501128863744,"message":"Full authentication is required to access this resource"}
2024-04-30 19:46:47.552  INFO 55332 --- [http-nio-8080-exec-8] (98103501154029568) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:46:47.556  INFO 55332 --- [http-nio-8080-exec-8] (98103501154029568) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98103501154029568,"code":200,"data":[{"id":14,"online":false,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.0,"memoryUsage":0.0,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:46:50.960  INFO 55332 --- [http-nio-8080-exec-9] (98103515448217600) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/detail" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:46:51.001  INFO 55332 --- [http-nio-8080-exec-9] (98103515448217600) com.example.filter.RequestLogFilter      : 请求处理耗时: 41ms | 响应结果: {"id":98103515448217600,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:46:52.248  INFO 55332 --- [http-nio-8080-exec-10] (98103520850481152) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:46:52.285  INFO 55332 --- [http-nio-8080-exec-10] (98103520850481152) com.example.filter.RequestLogFilter      : 请求处理耗时: 37ms | 响应结果: {"id":98103520850481152,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:46:52.556  INFO 55332 --- [http-nio-8080-exec-5] (98103522142326784) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:46:52.557  INFO 55332 --- [http-nio-8080-exec-5] (98103522142326784) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98103522142326784,"message":"Full authentication is required to access this resource"}
2024-04-30 19:46:52.562  INFO 55332 --- [http-nio-8080-exec-6] (98103522167492608) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:46:52.566  INFO 55332 --- [http-nio-8080-exec-6] (98103522167492608) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98103522167492608,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.17228888385782204,"memoryUsage":9.179790496826172,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:46:56.165  INFO 55332 --- [http-nio-8080-exec-7] (98103537275375616) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:46:56.169  INFO 55332 --- [http-nio-8080-exec-7] (98103537275375616) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98103537275375616,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:46:57.379  INFO 55332 --- [http-nio-8080-exec-1] (98103542371454976) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:46:57.383  INFO 55332 --- [http-nio-8080-exec-1] (98103542371454976) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98103542371454976,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1613267998492273,"memoryUsage":9.185993194580078,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:47:01.145  INFO 55332 --- [http-nio-8080-exec-2] (98103558167203840) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:47:01.149  INFO 55332 --- [http-nio-8080-exec-2] (98103558167203840) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98103558167203840,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:47:02.373  INFO 55332 --- [http-nio-8080-exec-3] (98103563317809152) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:47:02.375  INFO 55332 --- [http-nio-8080-exec-3] (98103563317809152) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"code":401,"data":null,"id":98103563317809152,"message":"Full authentication is required to access this resource"}
2024-04-30 19:47:02.379  INFO 55332 --- [http-nio-8080-exec-4] (98103563342974976) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:47:02.384  INFO 55332 --- [http-nio-8080-exec-4] (98103563342974976) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98103563342974976,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1766167281487616,"memoryUsage":9.146163940429688,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:47:06.181  INFO 55332 --- [http-nio-8080-exec-8] (98103579289718784) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:47:06.185  INFO 55332 --- [http-nio-8080-exec-8] (98103579289718784) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98103579289718784,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:47:07.382  INFO 55332 --- [http-nio-8080-exec-9] (98103584327077888) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:47:07.383  INFO 55332 --- [http-nio-8080-exec-9] (98103584327077888) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98103584327077888,"message":"Full authentication is required to access this resource"}
2024-04-30 19:47:07.387  INFO 55332 --- [http-nio-8080-exec-10] (98103584348049408) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:47:07.391  INFO 55332 --- [http-nio-8080-exec-10] (98103584348049408) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98103584348049408,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.20394140742977954,"memoryUsage":9.439151763916016,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:47:11.162  INFO 55332 --- [http-nio-8080-exec-5] (98103600181547008) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:47:11.167  INFO 55332 --- [http-nio-8080-exec-5] (98103600181547008) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98103600181547008,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:47:12.546  INFO 55332 --- [http-nio-8080-exec-6] (98103605986463744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:47:12.547  INFO 55332 --- [http-nio-8080-exec-6] (98103605986463744) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98103605986463744,"message":"Full authentication is required to access this resource"}
2024-04-30 19:47:12.550  INFO 55332 --- [http-nio-8080-exec-7] (98103606003240960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:47:12.554  INFO 55332 --- [http-nio-8080-exec-7] (98103606003240960) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98103606003240960,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.21433956574185767,"memoryUsage":9.466541290283203,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:47:16.218  INFO 55332 --- [http-nio-8080-exec-1] (98103621387948032) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:47:16.224  INFO 55332 --- [http-nio-8080-exec-1] (98103621387948032) com.example.filter.RequestLogFilter      : 请求处理耗时: 6ms | 响应结果: {"id":98103621387948032,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:47:17.551  INFO 55332 --- [http-nio-8080-exec-2] (98103626978955264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:47:17.552  INFO 55332 --- [http-nio-8080-exec-2] (98103626978955264) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98103626978955264,"message":"Full authentication is required to access this resource"}
2024-04-30 19:47:17.555  INFO 55332 --- [http-nio-8080-exec-3] (98103626995732480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:47:17.559  INFO 55332 --- [http-nio-8080-exec-3] (98103626995732480) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98103626995732480,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.22062281764412456,"memoryUsage":9.406074523925781,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:47:21.174  INFO 55332 --- [http-nio-8080-exec-4] (98103642174918656) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:47:21.179  INFO 55332 --- [http-nio-8080-exec-4] (98103642174918656) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98103642174918656,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:47:22.557  INFO 55332 --- [http-nio-8080-exec-8] (98103647975641088) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:47:22.558  INFO 55332 --- [http-nio-8080-exec-8] (98103647975641088) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98103647975641088,"message":"Full authentication is required to access this resource"}
2024-04-30 19:47:22.562  INFO 55332 --- [http-nio-8080-exec-9] (98103647996612608) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:47:22.566  INFO 55332 --- [http-nio-8080-exec-9] (98103647996612608) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98103647996612608,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.18466636541647838,"memoryUsage":9.4052734375,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:47:26.166  INFO 55332 --- [http-nio-8080-exec-10] (98103663112884224) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:47:26.170  INFO 55332 --- [http-nio-8080-exec-10] (98103663112884224) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98103663112884224,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:47:27.548  INFO 55332 --- [http-nio-8080-exec-5] (98103668909412352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:47:27.552  INFO 55332 --- [http-nio-8080-exec-5] (98103668909412352) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98103668909412352,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.20921618017484073,"memoryUsage":9.41339111328125,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:47:31.142  INFO 55332 --- [http-nio-8080-exec-6] (98103683983740928) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:47:31.147  INFO 55332 --- [http-nio-8080-exec-6] (98103683983740928) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98103683983740928,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:47:32.546  INFO 55332 --- [http-nio-8080-exec-7] (98103689872543744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:47:32.547  INFO 55332 --- [http-nio-8080-exec-7] (98103689872543744) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98103689872543744,"message":"Full authentication is required to access this resource"}
2024-04-30 19:47:32.550  INFO 55332 --- [http-nio-8080-exec-1] (98103689889320960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:47:32.554  INFO 55332 --- [http-nio-8080-exec-1] (98103689889320960) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98103689889320960,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1562908811081185,"memoryUsage":9.41912841796875,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:47:36.163  INFO 55332 --- [http-nio-8080-exec-2] (98103705043341312) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:47:36.168  INFO 55332 --- [http-nio-8080-exec-2] (98103705043341312) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98103705043341312,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:47:37.546  INFO 55332 --- [http-nio-8080-exec-3] (98103710844063744) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:47:37.549  INFO 55332 --- [http-nio-8080-exec-3] (98103710844063744) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98103710844063744,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.18613587457731326,"memoryUsage":9.416210174560547,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:47:41.197  INFO 55332 --- [http-nio-8080-exec-4] (98103726157467648) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:47:41.201  INFO 55332 --- [http-nio-8080-exec-4] (98103726157467648) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98103726157467648,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:47:42.551  INFO 55332 --- [http-nio-8080-exec-8] (98103731836555264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:47:42.552  INFO 55332 --- [http-nio-8080-exec-8] (98103731836555264) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98103731836555264,"message":"Full authentication is required to access this resource"}
2024-04-30 19:47:42.555  INFO 55332 --- [http-nio-8080-exec-9] (98103731853332480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:47:42.559  INFO 55332 --- [http-nio-8080-exec-9] (98103731853332480) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98103731853332480,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.2663335895465027,"memoryUsage":9.195842742919922,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:47:46.140  INFO 55332 --- [http-nio-8080-exec-10] (98103746889912320) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:47:46.144  INFO 55332 --- [http-nio-8080-exec-10] (98103746889912320) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98103746889912320,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:47:47.551  INFO 55332 --- [http-nio-8080-exec-5] (98103752808075264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:47:47.556  INFO 55332 --- [http-nio-8080-exec-5] (98103752808075264) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98103752808075264,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1504813888257145,"memoryUsage":9.189422607421875,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:47:51.170  INFO 55332 --- [http-nio-8080-exec-6] (98103767987261440) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:47:51.175  INFO 55332 --- [http-nio-8080-exec-6] (98103767987261440) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98103767987261440,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:47:52.555  INFO 55332 --- [http-nio-8080-exec-7] (98103773796372480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:47:52.556  INFO 55332 --- [http-nio-8080-exec-7] (98103773796372480) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98103773796372480,"message":"Full authentication is required to access this resource"}
2024-04-30 19:47:52.560  INFO 55332 --- [http-nio-8080-exec-1] (98103773817344000) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:47:52.566  INFO 55332 --- [http-nio-8080-exec-1] (98103773817344000) com.example.filter.RequestLogFilter      : 请求处理耗时: 6ms | 响应结果: {"id":98103773817344000,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.22940776038121172,"memoryUsage":9.21615219116211,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:47:56.165  INFO 55332 --- [http-nio-8080-exec-2] (98103788933615616) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:47:56.170  INFO 55332 --- [http-nio-8080-exec-2] (98103788933615616) com.example.filter.RequestLogFilter      : 请求处理耗时: 6ms | 响应结果: {"id":98103788933615616,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:47:57.558  INFO 55332 --- [http-nio-8080-exec-3] (98103794780475392) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:47:57.561  INFO 55332 --- [http-nio-8080-exec-3] (98103794780475392) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98103794780475392,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.2215677390122338,"memoryUsage":9.53207015991211,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:48:01.148  INFO 55332 --- [http-nio-8080-exec-4] (98103809838026752) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:48:01.153  INFO 55332 --- [http-nio-8080-exec-4] (98103809838026752) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98103809838026752,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:48:02.554  INFO 55332 --- [http-nio-8080-exec-8] (98103815735218176) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:48:02.555  INFO 55332 --- [http-nio-8080-exec-8] (98103815735218176) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98103815735218176,"message":"Full authentication is required to access this resource"}
2024-04-30 19:48:02.558  INFO 55332 --- [http-nio-8080-exec-9] (98103815751995392) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:48:02.561  INFO 55332 --- [http-nio-8080-exec-9] (98103815751995392) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98103815751995392,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.15607692307692309,"memoryUsage":9.52481460571289,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:48:06.138  INFO 55332 --- [http-nio-8080-exec-10] (98103830767603712) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:48:06.148  INFO 55332 --- [http-nio-8080-exec-10] (98103830767603712) com.example.filter.RequestLogFilter      : 请求处理耗时: 10ms | 响应结果: {"id":98103830767603712,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:48:07.547  INFO 55332 --- [http-nio-8080-exec-5] (98103836677378048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:48:07.551  INFO 55332 --- [http-nio-8080-exec-5] (98103836677378048) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98103836677378048,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.16587606354943152,"memoryUsage":9.49782943725586,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:48:11.142  INFO 55332 --- [http-nio-8080-exec-6] (98103851755900928) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:48:11.147  INFO 55332 --- [http-nio-8080-exec-6] (98103851755900928) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98103851755900928,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:48:12.552  INFO 55332 --- [http-nio-8080-exec-7] (98103857669869568) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:48:12.553  INFO 55332 --- [http-nio-8080-exec-7] (98103857669869568) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98103857669869568,"message":"Full authentication is required to access this resource"}
2024-04-30 19:48:12.555  INFO 55332 --- [http-nio-8080-exec-1] (98103857682452480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:48:12.558  INFO 55332 --- [http-nio-8080-exec-1] (98103857682452480) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98103857682452480,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1530276353058256,"memoryUsage":9.485626220703125,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:48:16.142  INFO 55332 --- [http-nio-8080-exec-2] (98103872727420928) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:48:16.146  INFO 55332 --- [http-nio-8080-exec-2] (98103872727420928) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98103872727420928,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:48:17.543  INFO 55332 --- [http-nio-8080-exec-3] (98103878603640832) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:48:17.546  INFO 55332 --- [http-nio-8080-exec-3] (98103878603640832) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98103878603640832,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1481810772764318,"memoryUsage":9.400749206542969,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:48:21.225  INFO 55332 --- [http-nio-8080-exec-4] (98103894047068160) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:48:21.229  INFO 55332 --- [http-nio-8080-exec-4] (98103894047068160) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98103894047068160,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:48:22.545  INFO 55332 --- [http-nio-8080-exec-8] (98103899579355136) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:48:22.545  INFO 55332 --- [http-nio-8080-exec-8] (98103899579355136) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98103899579355136,"message":"Full authentication is required to access this resource"}
2024-04-30 19:48:22.548  INFO 55332 --- [http-nio-8080-exec-9] (98103899596132352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:48:22.551  INFO 55332 --- [http-nio-8080-exec-9] (98103899596132352) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98103899596132352,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.15907525070810688,"memoryUsage":9.416152954101562,"networkUpload":0.03125,"networkDownload":0.001953125}],"message":"请求成功"}
2024-04-30 19:48:26.134  INFO 55332 --- [http-nio-8080-exec-10] (98103914636906496) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:48:26.139  INFO 55332 --- [http-nio-8080-exec-10] (98103914636906496) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98103914636906496,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:48:27.543  INFO 55332 --- [http-nio-8080-exec-5] (98103920546680832) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:48:27.546  INFO 55332 --- [http-nio-8080-exec-5] (98103920546680832) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98103920546680832,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.16162621545057806,"memoryUsage":9.422359466552734,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:48:31.206  INFO 55332 --- [http-nio-8080-exec-6] (98103935910416384) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:48:31.212  INFO 55332 --- [http-nio-8080-exec-6] (98103935910416384) com.example.filter.RequestLogFilter      : 请求处理耗时: 6ms | 响应结果: {"id":98103935910416384,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:48:32.553  INFO 55332 --- [http-nio-8080-exec-7] (98103941560143872) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:48:32.554  INFO 55332 --- [http-nio-8080-exec-7] (98103941560143872) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98103941560143872,"message":"Full authentication is required to access this resource"}
2024-04-30 19:48:32.558  INFO 55332 --- [http-nio-8080-exec-1] (98103941581115392) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:48:32.560  INFO 55332 --- [http-nio-8080-exec-1] (98103941581115392) com.example.filter.RequestLogFilter      : 请求处理耗时: 2ms | 响应结果: {"id":98103941581115392,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.27203377277440377,"memoryUsage":9.57625961303711,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:48:36.182  INFO 55332 --- [http-nio-8080-exec-2] (98103956781273088) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:48:36.187  INFO 55332 --- [http-nio-8080-exec-2] (98103956781273088) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98103956781273088,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:48:37.548  INFO 55332 --- [http-nio-8080-exec-3] (98103962510692352) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:48:37.551  INFO 55332 --- [http-nio-8080-exec-3] (98103962510692352) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98103962510692352,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.23355068168346177,"memoryUsage":9.583038330078125,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:48:41.169  INFO 55332 --- [http-nio-8080-exec-4] (98103977698267136) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:48:41.173  INFO 55332 --- [http-nio-8080-exec-4] (98103977698267136) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98103977698267136,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:48:42.547  INFO 55332 --- [http-nio-8080-exec-8] (98103983478018048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:48:42.547  INFO 55332 --- [http-nio-8080-exec-8] (98103983478018048) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98103983478018048,"message":"Full authentication is required to access this resource"}
2024-04-30 19:48:42.550  INFO 55332 --- [http-nio-8080-exec-9] (98103983490600960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:48:42.554  INFO 55332 --- [http-nio-8080-exec-9] (98103983490600960) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98103983490600960,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.20226465364120783,"memoryUsage":9.544288635253906,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:48:46.188  INFO 55332 --- [http-nio-8080-exec-10] (98103998749478912) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:48:46.192  INFO 55332 --- [http-nio-8080-exec-10] (98103998749478912) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98103998749478912,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:48:47.550  INFO 55332 --- [http-nio-8080-exec-5] (98104004462120960) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:48:47.551  INFO 55332 --- [http-nio-8080-exec-5] (98104004462120960) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98104004462120960,"message":"Full authentication is required to access this resource"}
2024-04-30 19:48:47.555  INFO 55332 --- [http-nio-8080-exec-6] (98104004483092480) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:48:47.558  INFO 55332 --- [http-nio-8080-exec-6] (98104004483092480) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98104004483092480,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.2523996509598604,"memoryUsage":9.543346405029297,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:48:51.170  INFO 55332 --- [http-nio-8080-exec-7] (98104019645501440) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:48:51.175  INFO 55332 --- [http-nio-8080-exec-7] (98104019645501440) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98104019645501440,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:48:56.156  INFO 55332 --- [http-nio-8080-exec-1] (98104040558301184) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:48:56.161  INFO 55332 --- [http-nio-8080-exec-1] (98104040558301184) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98104040558301184,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:49:01.187  INFO 55332 --- [http-nio-8080-exec-2] (98104061659844608) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:49:01.191  INFO 55332 --- [http-nio-8080-exec-2] (98104061659844608) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98104061659844608,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:49:04.547  INFO 55332 --- [http-nio-8080-exec-3] (98104075752706048) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:49:04.548  INFO 55332 --- [http-nio-8080-exec-3] (98104075752706048) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98104075752706048,"message":"Full authentication is required to access this resource"}
2024-04-30 19:49:04.551  INFO 55332 --- [http-nio-8080-exec-4] (98104075769483264) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:49:04.554  INFO 55332 --- [http-nio-8080-exec-4] (98104075769483264) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98104075769483264,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.2304940755644981,"memoryUsage":9.601669311523438,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:49:06.147  INFO 55332 --- [http-nio-8080-exec-8] (98104082463592448) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:49:06.151  INFO 55332 --- [http-nio-8080-exec-8] (98104082463592448) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98104082463592448,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:49:11.166  INFO 55332 --- [http-nio-8080-exec-9] (98104103514804224) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:49:11.171  INFO 55332 --- [http-nio-8080-exec-9] (98104103514804224) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98104103514804224,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:49:16.152  INFO 55332 --- [http-nio-8080-exec-10] (98104124427603968) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:49:16.155  INFO 55332 --- [http-nio-8080-exec-10] (98104124427603968) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98104124427603968,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:49:21.139  INFO 55332 --- [http-nio-8080-exec-5] (98104145344598016) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:49:21.143  INFO 55332 --- [http-nio-8080-exec-5] (98104145344598016) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98104145344598016,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:49:26.130  INFO 55332 --- [http-nio-8080-exec-6] (98104166278369280) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:49:26.135  INFO 55332 --- [http-nio-8080-exec-6] (98104166278369280) com.example.filter.RequestLogFilter      : 请求处理耗时: 5ms | 响应结果: {"id":98104166278369280,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:49:31.135  INFO 55332 --- [http-nio-8080-exec-7] (98104187270860800) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:49:31.139  INFO 55332 --- [http-nio-8080-exec-7] (98104187270860800) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98104187270860800,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:49:36.131  INFO 55332 --- [http-nio-8080-exec-1] (98104208225603584) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:49:36.135  INFO 55332 --- [http-nio-8080-exec-1] (98104208225603584) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98104208225603584,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:49:37.717  INFO 55332 --- [http-nio-8080-exec-2] (98104214877769728) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:49:37.717  INFO 55332 --- [http-nio-8080-exec-2] (98104214877769728) com.example.filter.RequestLogFilter      : 请求处理耗时: 0ms | 响应结果: {"code":401,"data":null,"id":98104214877769728,"message":"Full authentication is required to access this resource"}
2024-04-30 19:49:37.721  INFO 55332 --- [http-nio-8080-exec-3] (98104214894546944) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:49:37.725  INFO 55332 --- [http-nio-8080-exec-3] (98104214894546944) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98104214894546944,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1886734379809172,"memoryUsage":9.477100372314453,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:49:40.518  INFO 55332 --- [http-nio-8080-exec-4] (98104226626015232) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:49:40.521  INFO 55332 --- [http-nio-8080-exec-4] (98104226626015232) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98104226626015232,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.1886734379809172,"memoryUsage":9.477100372314453,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:49:41.121  INFO 55332 --- [http-nio-8080-exec-8] (98104229155180544) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:49:41.124  INFO 55332 --- [http-nio-8080-exec-8] (98104229155180544) com.example.filter.RequestLogFilter      : 请求处理耗时: 3ms | 响应结果: {"id":98104229155180544,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:49:45.534  INFO 55332 --- [http-nio-8080-exec-9] (98104247664644096) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (OPTIONS) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:49:45.535  INFO 55332 --- [http-nio-8080-exec-9] (98104247664644096) com.example.filter.RequestLogFilter      : 请求处理耗时: 1ms | 响应结果: {"code":401,"data":null,"id":98104247664644096,"message":"Full authentication is required to access this resource"}
2024-04-30 19:49:45.538  INFO 55332 --- [http-nio-8080-exec-10] (98104247681421312) com.example.filter.RequestLogFilter      : 请求URL: "/api/monitor/list" (GET) | 远程IP地址: 0:0:0:0:0:0:0:1 │ 身份: admin (UID: 1) | 角色: [ROLE_admin] | 请求参数列表: {}
2024-04-30 19:49:45.542  INFO 55332 --- [http-nio-8080-exec-10] (98104247681421312) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98104247681421312,"code":200,"data":[{"id":14,"online":true,"name":"未命名主机","location":"cn","osName":"Windows","osVersion":"10","ip":"192.168.138.1","cpuName":"AMD Ryzen 7 6800H with Radeon Graphics","cpuCore":8,"memory":13.7,"cpuUsage":0.24722588655233957,"memoryUsage":9.53940200805664,"networkUpload":0.0,"networkDownload":0.0}],"message":"请求成功"}
2024-04-30 19:49:46.230  INFO 55332 --- [http-nio-8080-exec-5] (98104250583879680) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/runtime" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:49:46.234  INFO 55332 --- [http-nio-8080-exec-5] (98104250583879680) com.example.filter.RequestLogFilter      : 请求处理耗时: 4ms | 响应结果: {"id":98104250583879680,"code":200,"data":null,"message":"请求成功"}
2024-04-30 19:49:47.316  INFO 55332 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] (system) o.s.a.r.l.SimpleMessageListenerContainer : Waiting for workers to finish.
2024-04-30 19:49:47.991  INFO 55332 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] (system) o.s.a.r.l.SimpleMessageListenerContainer : Successfully waited for workers to finish.
2024-04-30 19:49:48.019  INFO 55332 --- [SpringApplicationShutdownHook] (system) com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-04-30 19:49:48.024  INFO 55332 --- [SpringApplicationShutdownHook] (system) com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-04-30 19:53:31.992  INFO 50764 --- [main] (system) c.example.MyProjectBackendApplication    : Starting MyProjectBackendApplication using Java 17.0.10 with PID 50764 (E:\k\study-monitor\study_monitor\my-project-backend\target\classes started by k in E:\k\study-monitor\study_monitor)
2024-04-30 19:53:31.994  INFO 50764 --- [main] (system) c.example.MyProjectBackendApplication    : The following 1 profile is active: "dev"
2024-04-30 19:53:32.651  INFO 50764 --- [main] (system) .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-30 19:53:32.653  INFO 50764 --- [main] (system) .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-30 19:53:32.674  INFO 50764 --- [main] (system) .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2024-04-30 19:53:33.251  INFO 50764 --- [main] (system) o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-04-30 19:53:33.263  INFO 50764 --- [main] (system) o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-04-30 19:53:33.264  INFO 50764 --- [main] (system) o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.11]
2024-04-30 19:53:33.367  INFO 50764 --- [main] (system) o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-04-30 19:53:33.368  INFO 50764 --- [main] (system) w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1345 ms
2024-04-30 19:53:33.714  WARN 50764 --- [main] (system) c.b.m.core.metadata.TableInfoHelper      : This primary key of "id" is primitive !不建议如此请使用包装类 in Class: "com.example.entity.dto.ClientDetail"
2024-04-30 19:53:34.043  WARN 50764 --- [main] (system) c.b.m.core.metadata.TableInfoHelper      : This primary key of "id" is primitive !不建议如此请使用包装类 in Class: "com.example.entity.dto.Client"
2024-04-30 19:53:34.110  INFO 50764 --- [main] (system) com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-04-30 19:53:34.296  INFO 50764 --- [main] (system) com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4769378c
2024-04-30 19:53:34.297  INFO 50764 --- [main] (system) com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-04-30 19:53:34.871  INFO 50764 --- [main] (system) o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@70dd79f7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4ee19768, org.springframework.security.web.context.SecurityContextHolderFilter@6632eb19, org.springframework.security.web.header.HeaderWriterFilter@2d399e88, org.springframework.security.web.authentication.logout.LogoutFilter@54fd5759, com.example.filter.JwtAuthenticationFilter@8636cf4, com.example.filter.RequestLogFilter@2e40ea48, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4b37d1a4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5a95aaae, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6a6e410c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@8113ea7, org.springframework.security.web.session.SessionManagementFilter@4df5f119, org.springframework.security.web.access.ExceptionTranslationFilter@f2b4303, org.springframework.security.web.access.intercept.AuthorizationFilter@50e4d8cd]
2024-04-30 19:53:35.236  WARN 50764 --- [main] (system) ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: org.springframework.amqp.rabbit.core.RabbitAdmin
2024-04-30 19:53:35.290  INFO 50764 --- [main] (system) o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-04-30 19:53:35.294  INFO 50764 --- [main] (system) o.s.a.r.c.CachingConnectionFactory       : Attempting to connect to: [localhost:5672]
2024-04-30 19:53:35.331  INFO 50764 --- [main] (system) o.s.a.r.c.CachingConnectionFactory       : Created new connection: rabbitConnectionFactory#7bad18f5:0/SimpleConnection@2f70d78c [delegate=amqp://guest@127.0.0.1:5672/, localPort=12386]
2024-04-30 19:53:35.368  INFO 50764 --- [main] (system) c.example.MyProjectBackendApplication    : Started MyProjectBackendApplication in 3.792 seconds (process running for 4.338)
2024-04-30 19:53:36.322  INFO 50764 --- [http-nio-8080-exec-1] (system) o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-30 19:53:36.323  INFO 50764 --- [http-nio-8080-exec-1] (system) o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-04-30 19:53:36.325  INFO 50764 --- [http-nio-8080-exec-1] (system) o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-04-30 19:55:03.888  INFO 50764 --- [http-nio-8080-exec-2] (98105582938099712) com.example.filter.RequestLogFilter      : 请求URL: "/monitor/detail" (POST) | 远程IP地址: 127.0.0.1 │ 身份: 未验证 | 请求参数列表: {}
2024-04-30 19:55:03.904  INFO 50764 --- [http-nio-8080-exec-2] (98105582938099712) com.example.filter.RequestLogFilter      : 请求处理耗时: 16ms | 响应结果: {"id":98105582938099712,"code":200,"data":null,"message":"请求成功"}
2024-04-30 20:00:52.296  INFO 50764 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] (system) o.s.a.r.l.SimpleMessageListenerContainer : Waiting for workers to finish.
2024-04-30 20:00:52.769  INFO 50764 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] (system) o.s.a.r.l.SimpleMessageListenerContainer : Successfully waited for workers to finish.
2024-04-30 20:00:52.794  INFO 50764 --- [SpringApplicationShutdownHook] (system) com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-04-30 20:00:52.799  INFO 50764 --- [SpringApplicationShutdownHook] (system) com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-04-30 21:01:44.366  INFO 55528 --- [main] (system) c.example.MyProjectBackendApplication    : Starting MyProjectBackendApplication using Java 17.0.10 with PID 55528 (E:\k\study-monitor\study_monitor\my-project-backend\target\classes started by k in E:\k\study-monitor\study_monitor)
2024-04-30 21:01:44.368  INFO 55528 --- [main] (system) c.example.MyProjectBackendApplication    : The following 1 profile is active: "dev"
2024-04-30 21:01:45.017  INFO 55528 --- [main] (system) .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-04-30 21:01:45.019  INFO 55528 --- [main] (system) .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-04-30 21:01:45.064  INFO 55528 --- [main] (system) .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 22 ms. Found 0 Redis repository interfaces.
2024-04-30 21:01:45.683  INFO 55528 --- [main] (system) o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-04-30 21:01:45.693  INFO 55528 --- [main] (system) o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-04-30 21:01:45.694  INFO 55528 --- [main] (system) o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.11]
2024-04-30 21:01:45.801  INFO 55528 --- [main] (system) o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-04-30 21:01:45.802  INFO 55528 --- [main] (system) w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1408 ms
2024-04-30 21:01:46.192  WARN 55528 --- [main] (system) c.b.m.core.metadata.TableInfoHelper      : This primary key of "id" is primitive !不建议如此请使用包装类 in Class: "com.example.entity.dto.ClientDetail"
2024-04-30 21:01:46.461  WARN 55528 --- [main] (system) c.i.client.internal.InfluxDBClientImpl   : Cannot retrieve the Session token!

java.net.ConnectException: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:8086
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:297)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:207)
	at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:226)
	at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:106)
	at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:74)
	at okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:255)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:95)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.GzipInterceptor.intercept(GzipInterceptor.java:91)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:154)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.client.internal.AuthenticateInterceptor.intercept(AuthenticateInterceptor.java:77)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at com.influxdb.internal.UserAgentInterceptor.intercept(UserAgentInterceptor.java:60)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
	at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
	at okhttp3.internal.connection.RealCall.execute(RealCall.kt:154)
	at com.influxdb.client.internal.AuthenticateInterceptor.initToken(AuthenticateInterceptor.java:131)
	at com.influxdb.client.internal.AbstractInfluxDBClient.<init>(AbstractInfluxDBClient.java:112)
	at com.influxdb.client.internal.AbstractInfluxDBClient.<init>(AbstractInfluxDBClient.java:79)
	at com.influxdb.client.internal.InfluxDBClientImpl.<init>(InfluxDBClientImpl.java:99)
	at com.influxdb.client.InfluxDBClientFactory.create(InfluxDBClientFactory.java:261)
	at com.influxdb.client.InfluxDBClientFactory.create(InfluxDBClientFactory.java:108)
	at com.example.utils.InfluxUtils.init(InfluxUtils.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:401)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:419)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1762)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeanByName(AbstractAutowireCapableBeanFactory.java:457)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:537)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:508)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:270)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:320)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:531)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:508)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:270)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:320)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:235)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4886)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:846)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:241)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:428)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:918)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:485)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:183)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:161)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:602)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.MyProjectBackendApplication.main(MyProjectBackendApplication.java:10)
	Suppressed: java.net.ConnectException: Failed to connect to localhost/127.0.0.1:8086
		... 121 common frames omitted
	Caused by: java.net.ConnectException: Connection refused: no further information
		at java.base/sun.nio.ch.Net.pollConnect(Native Method)
		at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
		at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
		at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
		at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
		at java.base/java.net.Socket.connect(Socket.java:633)
		at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
		at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
		... 120 common frames omitted
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.kt:128)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:295)
	... 120 common frames omitted

2024-04-30 21:01:46.501  WARN 55528 --- [main] (system) c.b.m.core.metadata.TableInfoHelper      : This primary key of "id" is primitive !不建议如此请使用包装类 in Class: "com.example.entity.dto.Client"
2024-04-30 21:01:46.567  INFO 55528 --- [main] (system) com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-04-30 21:01:46.770  INFO 55528 --- [main] (system) com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@776a7ec6
2024-04-30 21:01:46.772  INFO 55528 --- [main] (system) com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-04-30 21:01:47.312  INFO 55528 --- [main] (system) o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4df5f119, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3dbb7bb, org.springframework.security.web.context.SecurityContextHolderFilter@52667676, org.springframework.security.web.header.HeaderWriterFilter@164db8f0, org.springframework.security.web.authentication.logout.LogoutFilter@7505dcab, com.example.filter.JwtAuthenticationFilter@6065bcb7, com.example.filter.RequestLogFilter@49de1505, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@f2b4303, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@39a09c0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6802c10e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6277a496, org.springframework.security.web.session.SessionManagementFilter@21f0cc97, org.springframework.security.web.access.ExceptionTranslationFilter@5ace6611, org.springframework.security.web.access.intercept.AuthorizationFilter@71689ee2]
2024-04-30 21:01:47.614  WARN 55528 --- [main] (system) ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: org.springframework.amqp.rabbit.core.RabbitAdmin
2024-04-30 21:01:47.672  INFO 55528 --- [main] (system) o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-04-30 21:01:47.675  INFO 55528 --- [main] (system) o.s.a.r.c.CachingConnectionFactory       : Attempting to connect to: [localhost:5672]
2024-04-30 21:01:47.715  INFO 55528 --- [main] (system) o.s.a.r.c.CachingConnectionFactory       : Created new connection: rabbitConnectionFactory#3ac326c0:0/SimpleConnection@3c130cb2 [delegate=amqp://guest@127.0.0.1:5672/, localPort=3771]
2024-04-30 21:01:47.771  INFO 55528 --- [main] (system) c.example.MyProjectBackendApplication    : Started MyProjectBackendApplication in 3.804 seconds (process running for 4.363)
2024-04-30 21:01:51.089  INFO 55528 --- [http-nio-8080-exec-1] (system) o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-30 21:01:51.090  INFO 55528 --- [http-nio-8080-exec-1] (system) o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-04-30 21:01:51.092  INFO 55528 --- [http-nio-8080-exec-1] (system) o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-04-30 21:01:51.415 ERROR 55528 --- [http-nio-8080-exec-1] (system) o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception

org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1602)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1533)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1358)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1341)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1059)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:398)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:393)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:373)
	at org.springframework.data.redis.core.RedisTemplate.doWithKeys(RedisTemplate.java:785)
	at org.springframework.data.redis.core.RedisTemplate.hasKey(RedisTemplate.java:571)
	at com.example.filter.FlowLimitingFilter.tryCount(FlowLimitingFilter.java:61)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:48)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:350)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1531)
	... 48 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)

2024-04-30 21:01:52.896 ERROR 55528 --- [http-nio-8080-exec-2] (system) o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception

org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1602)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1533)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1358)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1341)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1059)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:398)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:393)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:373)
	at org.springframework.data.redis.core.RedisTemplate.doWithKeys(RedisTemplate.java:785)
	at org.springframework.data.redis.core.RedisTemplate.hasKey(RedisTemplate.java:571)
	at com.example.filter.FlowLimitingFilter.tryCount(FlowLimitingFilter.java:61)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:48)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:350)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1531)
	... 48 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)

2024-04-30 21:01:55.946 ERROR 55528 --- [http-nio-8080-exec-3] (system) o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception

org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1602)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1533)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1358)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1341)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1059)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:398)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:393)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:373)
	at org.springframework.data.redis.core.RedisTemplate.doWithKeys(RedisTemplate.java:785)
	at org.springframework.data.redis.core.RedisTemplate.hasKey(RedisTemplate.java:571)
	at com.example.filter.FlowLimitingFilter.tryCount(FlowLimitingFilter.java:61)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:48)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:350)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1531)
	... 48 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)

2024-04-30 21:01:56.938 ERROR 55528 --- [http-nio-8080-exec-4] (system) o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception

org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1602)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1533)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1358)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1341)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1059)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:398)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:393)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:373)
	at org.springframework.data.redis.core.RedisTemplate.doWithKeys(RedisTemplate.java:785)
	at org.springframework.data.redis.core.RedisTemplate.hasKey(RedisTemplate.java:571)
	at com.example.filter.FlowLimitingFilter.tryCount(FlowLimitingFilter.java:61)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:48)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:350)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1531)
	... 48 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)

2024-04-30 21:02:00.954 ERROR 55528 --- [http-nio-8080-exec-5] (system) o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception

org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1602)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1533)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1358)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1341)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1059)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:398)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:393)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:373)
	at org.springframework.data.redis.core.RedisTemplate.doWithKeys(RedisTemplate.java:785)
	at org.springframework.data.redis.core.RedisTemplate.hasKey(RedisTemplate.java:571)
	at com.example.filter.FlowLimitingFilter.tryCount(FlowLimitingFilter.java:61)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:48)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:350)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1531)
	... 48 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)

2024-04-30 21:02:02.547 ERROR 55528 --- [http-nio-8080-exec-6] (system) o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception

org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1602)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1533)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1358)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1341)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1059)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:398)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:393)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:373)
	at org.springframework.data.redis.core.RedisTemplate.doWithKeys(RedisTemplate.java:785)
	at org.springframework.data.redis.core.RedisTemplate.hasKey(RedisTemplate.java:571)
	at com.example.filter.FlowLimitingFilter.tryCount(FlowLimitingFilter.java:61)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:48)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:350)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1531)
	... 48 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)

2024-04-30 21:02:05.947 ERROR 55528 --- [http-nio-8080-exec-7] (system) o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception

org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1602)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1533)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1358)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1341)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1059)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:398)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:393)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:373)
	at org.springframework.data.redis.core.RedisTemplate.doWithKeys(RedisTemplate.java:785)
	at org.springframework.data.redis.core.RedisTemplate.hasKey(RedisTemplate.java:571)
	at com.example.filter.FlowLimitingFilter.tryCount(FlowLimitingFilter.java:61)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:48)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:350)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1531)
	... 48 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)

2024-04-30 21:02:07.548 ERROR 55528 --- [http-nio-8080-exec-8] (system) o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception

org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1602)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1533)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1358)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1341)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1059)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:398)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:393)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:373)
	at org.springframework.data.redis.core.RedisTemplate.doWithKeys(RedisTemplate.java:785)
	at org.springframework.data.redis.core.RedisTemplate.hasKey(RedisTemplate.java:571)
	at com.example.filter.FlowLimitingFilter.tryCount(FlowLimitingFilter.java:61)
	at com.example.filter.FlowLimitingFilter.doFilter(FlowLimitingFilter.java:48)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at com.example.filter.CorsFilter.doFilter(CorsFilter.java:34)
	at jakarta.servlet.http.HttpFilter.doFilter(HttpFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:350)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1531)
	... 48 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)

2024-04-30 21:02:08.231  INFO 55528 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] (system) o.s.a.r.l.SimpleMessageListenerContainer : Waiting for workers to finish.
2024-04-30 21:02:08.930  INFO 55528 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] (system) o.s.a.r.l.SimpleMessageListenerContainer : Successfully waited for workers to finish.
2024-04-30 21:02:08.952  INFO 55528 --- [SpringApplicationShutdownHook] (system) com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-04-30 21:02:08.956  INFO 55528 --- [SpringApplicationShutdownHook] (system) com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
